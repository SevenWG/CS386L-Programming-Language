DIGEST d276e720cdd5f69a695a04daa795ca57
FTop.Smallstep
R115:129 Coq.Arith.Arith <> <> lib
R147:161 Coq.Arith.EqNat <> <> lib
R179:193 Coq.omega.Omega <> <> lib
R211:224 Coq.Lists.List <> <> lib
R264:267 Top.Maps <> <> lib
R285:287 Top.Imp <> <> lib
ind 4243:4244 <> tm
constr 4260:4260 <> C
constr 4301:4301 <> P
R4267:4270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4271:4272 Top.Smallstep <> tm ind
R4264:4266 Coq.Init.Datatypes <> nat ind
R4307:4310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4313:4316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4317:4318 Top.Smallstep <> tm ind
R4311:4312 Top.Smallstep <> tm ind
R4305:4306 Top.Smallstep <> tm ind
def 4474:4478 <> evalF
R4485:4486 Top.Smallstep <> tm ind
R4491:4493 Coq.Init.Datatypes <> nat ind
R4506:4506 Top.Smallstep <> t var
R4517:4517 Top.Smallstep <> C constr
R4530:4530 Top.Smallstep <> P constr
R4549:4551 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4541:4545 Top.Smallstep <> evalF def
R4552:4556 Top.Smallstep <> evalF def
ind 5177:5180 <> eval
constr 5209:5215 <> E_Const
constr 5248:5253 <> E_Plus
R5186:5189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5193:5196 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5190:5192 Coq.Init.Datatypes <> nat ind
R5184:5185 Top.Smallstep <> tm ind
R5366:5369 Top.Smallstep <> eval var
R5238:5241 Top.Smallstep <> ::x_'\\'_x not
R5235:5235 Top.Smallstep <> C constr
R5237:5237 Top.Smallstep <> n var
R5242:5242 Top.Smallstep <> n var
R5291:5300 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5309:5318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5326:5330 Top.Smallstep <> ::x_'\\'_x not
R5338:5338 Top.Smallstep <> ::x_'\\'_x not
R5319:5319 Top.Smallstep <> P constr
R5324:5325 Top.Smallstep <> t2 var
R5321:5322 Top.Smallstep <> t1 var
R5333:5335 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5331:5332 Top.Smallstep <> n1 var
R5336:5337 Top.Smallstep <> n2 var
R5303:5306 Top.Smallstep <> ::x_'\\'_x not
R5301:5302 Top.Smallstep <> t2 var
R5307:5308 Top.Smallstep <> n2 var
R5285:5288 Top.Smallstep <> ::x_'\\'_x not
R5283:5284 Top.Smallstep <> t1 var
R5289:5290 Top.Smallstep <> n1 var
R5366:5369 Top.Smallstep <> eval ind
not 5349:5349 <> ::x_'\\'_x
mod 5385:5396 <> SimpleArith1
ind 6014:6017 SimpleArith1 step
constr 6045:6061 SimpleArith1 ST_PlusConstConst
constr 6121:6128 SimpleArith1 ST_Plus1
constr 6201:6208 SimpleArith1 ST_Plus2
R6023:6026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6029:6032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6027:6028 Top.Smallstep <> tm ind
R6021:6022 Top.Smallstep <> tm ind
R6313:6316 Top.Smallstep <> step var
R6100:6104 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6085:6085 Top.Smallstep <> P constr
R6095:6095 Top.Smallstep <> C constr
R6097:6098 Top.Smallstep <> n2 var
R6088:6088 Top.Smallstep <> C constr
R6090:6091 Top.Smallstep <> n1 var
R6105:6105 Top.Smallstep <> C constr
R6110:6112 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6108:6109 Top.Smallstep <> n1 var
R6113:6114 Top.Smallstep <> n2 var
R6166:6175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6183:6187 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6176:6176 Top.Smallstep <> P constr
R6181:6182 Top.Smallstep <> t2 var
R6178:6179 Top.Smallstep <> t1 var
R6188:6188 Top.Smallstep <> P constr
R6194:6195 Top.Smallstep <> t2 var
R6190:6192 Top.Smallstep <> t1' var
R6158:6162 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6156:6157 Top.Smallstep <> t1 var
R6163:6165 Top.Smallstep <> t1' var
R6246:6255 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6267:6271 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6256:6256 Top.Smallstep <> P constr
R6265:6266 Top.Smallstep <> t2 var
R6259:6259 Top.Smallstep <> C constr
R6261:6262 Top.Smallstep <> n1 var
R6272:6272 Top.Smallstep <> P constr
R6281:6283 Top.Smallstep <> t2' var
R6275:6275 Top.Smallstep <> C constr
R6277:6278 Top.Smallstep <> n1 var
R6238:6242 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6236:6237 Top.Smallstep <> t2 var
R6243:6245 Top.Smallstep <> t2' var
R6313:6316 Top.Smallstep SimpleArith1 step ind
not 6294:6294 SimpleArith1 ::x_'==>'_x
def 6951:6961 SimpleArith1 test_step_1
R7020:7036 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6971:6971 Top.Smallstep <> P constr
R7006:7006 Top.Smallstep <> P constr
R7015:7015 Top.Smallstep <> C constr
R7009:7009 Top.Smallstep <> C constr
R6982:6982 Top.Smallstep <> P constr
R6991:6991 Top.Smallstep <> C constr
R6985:6985 Top.Smallstep <> C constr
R7037:7037 Top.Smallstep <> P constr
R7068:7068 Top.Smallstep <> P constr
R7077:7077 Top.Smallstep <> C constr
R7071:7071 Top.Smallstep <> C constr
R7048:7048 Top.Smallstep <> C constr
R7052:7054 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7099:7106 Top.Smallstep SimpleArith1 ST_Plus1 constr
R7099:7106 Top.Smallstep SimpleArith1 ST_Plus1 constr
R7115:7131 Top.Smallstep SimpleArith1 ST_PlusConstConst constr
R7115:7131 Top.Smallstep SimpleArith1 ST_PlusConstConst constr
def 7372:7382 SimpleArith1 test_step_2
R7461:7477 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R7392:7392 Top.Smallstep <> P constr
R7417:7417 Top.Smallstep <> P constr
R7446:7446 Top.Smallstep <> P constr
R7455:7455 Top.Smallstep <> C constr
R7449:7449 Top.Smallstep <> C constr
R7430:7430 Top.Smallstep <> C constr
R7403:7403 Top.Smallstep <> C constr
R7478:7478 Top.Smallstep <> P constr
R7503:7503 Top.Smallstep <> P constr
R7532:7532 Top.Smallstep <> C constr
R7536:7538 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7516:7516 Top.Smallstep <> C constr
R7489:7489 Top.Smallstep <> C constr
R7598:7609 Top.Smallstep SimpleArith1 <> mod
def 8215:8222 <> relation
R8238:8241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8243:8246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8242:8242 Top.Smallstep <> X var
R8237:8237 Top.Smallstep <> X var
def 9992:10004 <> deterministic
R10020:10027 Top.Smallstep <> relation def
R10029:10029 Top.Smallstep <> X var
R10054:10054 Top.Smallstep <> X var
R10063:10066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10073:10076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10079:10081 Coq.Init.Logic <> :type_scope:x_'='_x not
R10077:10078 Top.Smallstep <> y1 var
R10082:10083 Top.Smallstep <> y2 var
R10067:10067 Top.Smallstep <> R var
R10071:10072 Top.Smallstep <> y2 var
R10069:10069 Top.Smallstep <> x var
R10057:10057 Top.Smallstep <> R var
R10061:10062 Top.Smallstep <> y1 var
R10059:10059 Top.Smallstep <> x var
mod 10094:10105 <> SimpleArith2
prf 10138:10155 SimpleArith2 step_deterministic
R10160:10172 Top.Smallstep <> deterministic def
R10174:10177 Top.Smallstep SimpleArith1 step ind
R10196:10208 Top.Smallstep <> deterministic def
R10979:10990 Top.Smallstep SimpleArith2 <> mod
R11682:11682 Coq.Init.Datatypes <> S constr
R11685:11685 Coq.Init.Datatypes <> S constr
R11682:11682 Coq.Init.Datatypes <> S constr
R11685:11685 Coq.Init.Datatypes <> S constr
R11722:11722 Coq.Init.Datatypes <> S constr
mod 12645:12656 <> SimpleArith3
prf 12689:12710 SimpleArith3 step_deterministic_alt
R12713:12725 Top.Smallstep <> deterministic def
R12727:12730 Top.Smallstep SimpleArith1 step ind
R13057:13068 Top.Smallstep SimpleArith3 <> mod
ind 14221:14225 <> value
constr 14247:14253 <> v_const
R14231:14234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14229:14230 Top.Smallstep <> tm ind
R14267:14271 Top.Smallstep <> value ind
R14274:14274 Top.Smallstep <> C constr
R14276:14276 Top.Smallstep <> n var
ind 15493:15496 <> step
constr 15524:15540 <> ST_PlusConstConst
constr 15610:15617 <> ST_Plus1
constr 15694:15701 <> ST_Plus2
R15502:15505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15508:15511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15506:15507 Top.Smallstep <> tm ind
R15500:15501 Top.Smallstep <> tm ind
R15860:15863 Top.Smallstep <> step var
R15583:15593 Top.Smallstep <> ::x_'==>'_x not
R15568:15568 Top.Smallstep <> P constr
R15578:15578 Top.Smallstep <> C constr
R15580:15581 Top.Smallstep <> n2 var
R15571:15571 Top.Smallstep <> C constr
R15573:15574 Top.Smallstep <> n1 var
R15594:15594 Top.Smallstep <> C constr
R15599:15601 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15597:15598 Top.Smallstep <> n1 var
R15602:15603 Top.Smallstep <> n2 var
R15657:15668 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15676:15680 Top.Smallstep <> ::x_'==>'_x not
R15669:15669 Top.Smallstep <> P constr
R15674:15675 Top.Smallstep <> t2 var
R15671:15672 Top.Smallstep <> t1 var
R15681:15681 Top.Smallstep <> P constr
R15687:15688 Top.Smallstep <> t2 var
R15683:15685 Top.Smallstep <> t1' var
R15649:15653 Top.Smallstep <> ::x_'==>'_x not
R15647:15648 Top.Smallstep <> t1 var
R15654:15656 Top.Smallstep <> t1' var
R15739:15788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15799:15810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15818:15822 Top.Smallstep <> ::x_'==>'_x not
R15811:15811 Top.Smallstep <> P constr
R15816:15817 Top.Smallstep <> t2 var
R15813:15814 Top.Smallstep <> v1 var
R15823:15823 Top.Smallstep <> P constr
R15828:15830 Top.Smallstep <> t2' var
R15825:15826 Top.Smallstep <> v1 var
R15791:15795 Top.Smallstep <> ::x_'==>'_x not
R15789:15790 Top.Smallstep <> t2 var
R15796:15798 Top.Smallstep <> t2' var
R15731:15735 Top.Smallstep <> value ind
R15737:15738 Top.Smallstep <> v1 var
R15860:15863 Top.Smallstep <> step ind
not 15841:15841 <> ::x_'==>'_x
prf 17138:17155 <> step_deterministic
R17161:17173 Top.Smallstep <> deterministic def
R17175:17178 Top.Smallstep <> step ind
prf 18494:18508 <> strong_progress
R18531:18535 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18555:18555 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18524:18528 Top.Smallstep <> value ind
R18530:18530 Top.Smallstep <> t var
R18536:18542 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18545:18546 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18548:18552 Top.Smallstep <> ::x_'==>'_x not
R18547:18547 Top.Smallstep <> t var
R18553:18554 Top.Smallstep <> t' var
R18606:18612 Top.Smallstep <> v_const constr
R18606:18612 Top.Smallstep <> v_const constr
R18747:18747 Top.Smallstep <> C constr
R18751:18753 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18747:18747 Top.Smallstep <> C constr
R18751:18753 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18776:18792 Top.Smallstep <> ST_PlusConstConst constr
R18776:18792 Top.Smallstep <> ST_PlusConstConst constr
R18856:18856 Top.Smallstep <> P constr
R18856:18856 Top.Smallstep <> P constr
R18882:18889 Top.Smallstep <> ST_Plus2 constr
R18882:18889 Top.Smallstep <> ST_Plus2 constr
R18969:18969 Top.Smallstep <> P constr
R18969:18969 Top.Smallstep <> P constr
R18995:19002 Top.Smallstep <> ST_Plus1 constr
R18995:19002 Top.Smallstep <> ST_Plus1 constr
def 19678:19688 <> normal_form
R19702:19709 Top.Smallstep <> relation def
R19711:19711 Top.Smallstep <> X var
R19717:19717 Top.Smallstep <> X var
R19732:19733 Coq.Init.Logic <> :type_scope:'~'_x not
R19734:19740 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19743:19744 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19745:19745 Top.Smallstep <> R var
R19749:19750 Top.Smallstep <> t' var
R19747:19747 Top.Smallstep <> t var
prf 20300:20310 <> value_is_nf
R20333:20336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20337:20347 Top.Smallstep <> normal_form def
R20354:20354 Top.Smallstep <> v var
R20349:20352 Top.Smallstep <> step ind
R20326:20330 Top.Smallstep <> value ind
R20332:20332 Top.Smallstep <> v var
R20373:20383 Top.Smallstep <> normal_form def
prf 20472:20482 <> nf_is_value
R20516:20519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20520:20524 Top.Smallstep <> value ind
R20526:20526 Top.Smallstep <> t var
R20498:20508 Top.Smallstep <> normal_form def
R20515:20515 Top.Smallstep <> t var
R20510:20513 Top.Smallstep <> step ind
R20587:20597 Top.Smallstep <> normal_form def
R20633:20636 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20626:20630 Top.Smallstep <> value ind
R20637:20643 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20646:20647 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20649:20653 Top.Smallstep <> ::x_'==>'_x not
R20654:20655 Top.Smallstep <> t' var
R20633:20636 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20626:20630 Top.Smallstep <> value ind
R20637:20643 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20646:20647 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20649:20653 Top.Smallstep <> ::x_'==>'_x not
R20654:20655 Top.Smallstep <> t' var
R20671:20685 Top.Smallstep <> strong_progress thm
R20671:20685 Top.Smallstep <> strong_progress thm
prf 20790:20805 <> nf_same_as_value
R20839:20843 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R20821:20831 Top.Smallstep <> normal_form def
R20838:20838 Top.Smallstep <> t var
R20833:20836 Top.Smallstep <> step ind
R20844:20848 Top.Smallstep <> value ind
R20850:20850 Top.Smallstep <> t var
R20875:20885 Top.Smallstep <> nf_is_value thm
R20875:20885 Top.Smallstep <> nf_is_value thm
R20894:20904 Top.Smallstep <> value_is_nf thm
R20894:20904 Top.Smallstep <> value_is_nf thm
mod 21641:21645 <> Temp1
ind 21659:21663 Temp1 value
constr 21683:21689 Temp1 v_const
constr 21717:21723 Temp1 v_funny
R21669:21672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21667:21668 Top.Smallstep <> tm ind
R21703:21707 Top.Smallstep <> value ind
R21710:21710 Top.Smallstep <> C constr
R21712:21712 Top.Smallstep <> n var
R21789:21793 Top.Smallstep <> value ind
R21796:21796 Top.Smallstep <> P constr
R21802:21802 Top.Smallstep <> C constr
R21804:21805 Top.Smallstep <> n2 var
R21798:21799 Top.Smallstep <> t1 var
ind 21870:21873 Temp1 step
constr 21901:21917 Temp1 ST_PlusConstConst
constr 21977:21984 Temp1 ST_Plus1
constr 22057:22064 Temp1 ST_Plus2
R21879:21882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21885:21888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21883:21884 Top.Smallstep <> tm ind
R21877:21878 Top.Smallstep <> tm ind
R22179:22182 Top.Smallstep <> step var
R21956:21960 Top.Smallstep Temp1 ::x_'==>'_x not
R21941:21941 Top.Smallstep <> P constr
R21951:21951 Top.Smallstep <> C constr
R21953:21954 Top.Smallstep <> n2 var
R21944:21944 Top.Smallstep <> C constr
R21946:21947 Top.Smallstep <> n1 var
R21961:21961 Top.Smallstep <> C constr
R21966:21968 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21964:21965 Top.Smallstep <> n1 var
R21969:21970 Top.Smallstep <> n2 var
R22022:22031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22039:22043 Top.Smallstep Temp1 ::x_'==>'_x not
R22032:22032 Top.Smallstep <> P constr
R22037:22038 Top.Smallstep <> t2 var
R22034:22035 Top.Smallstep <> t1 var
R22044:22044 Top.Smallstep <> P constr
R22050:22051 Top.Smallstep <> t2 var
R22046:22048 Top.Smallstep <> t1' var
R22014:22018 Top.Smallstep Temp1 ::x_'==>'_x not
R22012:22013 Top.Smallstep <> t1 var
R22019:22021 Top.Smallstep <> t1' var
R22100:22109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22120:22129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22137:22141 Top.Smallstep Temp1 ::x_'==>'_x not
R22130:22130 Top.Smallstep <> P constr
R22135:22136 Top.Smallstep <> t2 var
R22132:22133 Top.Smallstep <> v1 var
R22142:22142 Top.Smallstep <> P constr
R22147:22149 Top.Smallstep <> t2' var
R22144:22145 Top.Smallstep <> v1 var
R22112:22116 Top.Smallstep Temp1 ::x_'==>'_x not
R22110:22111 Top.Smallstep <> t2 var
R22117:22119 Top.Smallstep <> t2' var
R22092:22096 Top.Smallstep Temp1 value ind
R22098:22099 Top.Smallstep <> v1 var
R22179:22182 Top.Smallstep Temp1 step ind
not 22160:22160 Temp1 ::x_'==>'_x
prf 22198:22226 Temp1 value_not_same_as_normal_form
R22232:22238 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22240:22241 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22249:22252 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22242:22246 Top.Smallstep Temp1 value ind
R22248:22248 Top.Smallstep <> v var
R22253:22254 Coq.Init.Logic <> :type_scope:'~'_x not
R22255:22265 Top.Smallstep <> normal_form def
R22272:22272 Top.Smallstep <> v var
R22267:22270 Top.Smallstep Temp1 step ind
R22317:22321 Top.Smallstep Temp1 <> mod
mod 22548:22552 <> Temp2
ind 22566:22570 Temp2 value
constr 22590:22596 Temp2 v_const
R22576:22579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22574:22575 Top.Smallstep <> tm ind
R22610:22614 Top.Smallstep <> value ind
R22617:22617 Top.Smallstep <> C constr
R22619:22619 Top.Smallstep <> n var
ind 22683:22686 Temp2 step
constr 22714:22721 Temp2 ST_Funny
constr 22803:22819 Temp2 ST_PlusConstConst
constr 22879:22886 Temp2 ST_Plus1
constr 22959:22966 Temp2 ST_Plus2
R22692:22695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22698:22701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22696:22697 Top.Smallstep <> tm ind
R22690:22691 Top.Smallstep <> tm ind
R23081:23084 Top.Smallstep <> step var
R22780:22784 Top.Smallstep Temp2 ::x_'==>'_x not
R22777:22777 Top.Smallstep <> C constr
R22779:22779 Top.Smallstep <> n var
R22785:22785 Top.Smallstep <> P constr
R22794:22794 Top.Smallstep <> C constr
R22788:22788 Top.Smallstep <> C constr
R22790:22790 Top.Smallstep <> n var
R22858:22862 Top.Smallstep Temp2 ::x_'==>'_x not
R22843:22843 Top.Smallstep <> P constr
R22853:22853 Top.Smallstep <> C constr
R22855:22856 Top.Smallstep <> n2 var
R22846:22846 Top.Smallstep <> C constr
R22848:22849 Top.Smallstep <> n1 var
R22863:22863 Top.Smallstep <> C constr
R22868:22870 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22866:22867 Top.Smallstep <> n1 var
R22871:22872 Top.Smallstep <> n2 var
R22924:22933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22941:22945 Top.Smallstep Temp2 ::x_'==>'_x not
R22934:22934 Top.Smallstep <> P constr
R22939:22940 Top.Smallstep <> t2 var
R22936:22937 Top.Smallstep <> t1 var
R22946:22946 Top.Smallstep <> P constr
R22952:22953 Top.Smallstep <> t2 var
R22948:22950 Top.Smallstep <> t1' var
R22916:22920 Top.Smallstep Temp2 ::x_'==>'_x not
R22914:22915 Top.Smallstep <> t1 var
R22921:22923 Top.Smallstep <> t1' var
R23002:23011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23022:23031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23039:23043 Top.Smallstep Temp2 ::x_'==>'_x not
R23032:23032 Top.Smallstep <> P constr
R23037:23038 Top.Smallstep <> t2 var
R23034:23035 Top.Smallstep <> v1 var
R23044:23044 Top.Smallstep <> P constr
R23049:23051 Top.Smallstep <> t2' var
R23046:23047 Top.Smallstep <> v1 var
R23014:23018 Top.Smallstep Temp2 ::x_'==>'_x not
R23012:23013 Top.Smallstep <> t2 var
R23019:23021 Top.Smallstep <> t2' var
R22994:22998 Top.Smallstep Temp2 value ind
R23000:23001 Top.Smallstep <> v1 var
R23081:23084 Top.Smallstep Temp2 step ind
not 23062:23062 Temp2 ::x_'==>'_x
prf 23100:23128 Temp2 value_not_same_as_normal_form
R23134:23140 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23142:23143 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23151:23154 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23144:23148 Top.Smallstep Temp2 value ind
R23150:23150 Top.Smallstep <> v var
R23155:23156 Coq.Init.Logic <> :type_scope:'~'_x not
R23157:23167 Top.Smallstep <> normal_form def
R23174:23174 Top.Smallstep <> v var
R23169:23172 Top.Smallstep Temp2 step ind
R23220:23224 Top.Smallstep Temp2 <> mod
mod 23711:23715 <> Temp3
ind 23729:23733 Temp3 value
constr 23755:23761 Temp3 v_const
R23739:23742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23737:23738 Top.Smallstep <> tm ind
R23775:23779 Top.Smallstep <> value ind
R23782:23782 Top.Smallstep <> C constr
R23784:23784 Top.Smallstep <> n var
ind 23848:23851 Temp3 step
constr 23879:23895 Temp3 ST_PlusConstConst
constr 23955:23962 Temp3 ST_Plus1
R23857:23860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23863:23866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23861:23862 Top.Smallstep <> tm ind
R23855:23856 Top.Smallstep <> tm ind
R24059:24062 Top.Smallstep <> step var
R23934:23938 Top.Smallstep Temp3 ::x_'==>'_x not
R23919:23919 Top.Smallstep <> P constr
R23929:23929 Top.Smallstep <> C constr
R23931:23932 Top.Smallstep <> n2 var
R23922:23922 Top.Smallstep <> C constr
R23924:23925 Top.Smallstep <> n1 var
R23939:23939 Top.Smallstep <> C constr
R23944:23946 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23942:23943 Top.Smallstep <> n1 var
R23947:23948 Top.Smallstep <> n2 var
R24000:24009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24017:24021 Top.Smallstep Temp3 ::x_'==>'_x not
R24010:24010 Top.Smallstep <> P constr
R24015:24016 Top.Smallstep <> t2 var
R24012:24013 Top.Smallstep <> t1 var
R24022:24022 Top.Smallstep <> P constr
R24028:24029 Top.Smallstep <> t2 var
R24024:24026 Top.Smallstep <> t1' var
R23992:23996 Top.Smallstep Temp3 ::x_'==>'_x not
R23990:23991 Top.Smallstep <> t1 var
R23997:23999 Top.Smallstep <> t1' var
R24059:24062 Top.Smallstep Temp3 step ind
not 24040:24040 Temp3 ::x_'==>'_x
prf 24121:24149 Temp3 value_not_same_as_normal_form
R24155:24161 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24163:24164 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24174:24177 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24165:24166 Coq.Init.Logic <> :type_scope:'~'_x not
R24167:24171 Top.Smallstep Temp3 value ind
R24173:24173 Top.Smallstep <> t var
R24178:24188 Top.Smallstep <> normal_form def
R24195:24195 Top.Smallstep <> t var
R24190:24193 Top.Smallstep Temp3 step ind
R24241:24245 Top.Smallstep Temp3 <> mod
mod 24371:24375 <> Temp4
ind 24580:24581 Temp4 tm
constr 24597:24601 Temp4 ttrue
constr 24612:24617 Temp4 tfalse
constr 24628:24630 Temp4 tif
R24605:24606 Top.Smallstep <> tm ind
R24621:24622 Top.Smallstep <> tm ind
R24636:24639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24642:24645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24648:24651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24652:24653 Top.Smallstep <> tm ind
R24646:24647 Top.Smallstep <> tm ind
R24640:24641 Top.Smallstep <> tm ind
R24634:24635 Top.Smallstep <> tm ind
ind 24667:24671 Temp4 value
constr 24693:24698 Temp4 v_true
constr 24718:24724 Temp4 v_false
R24677:24680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24675:24676 Top.Smallstep Temp4 tm ind
R24702:24706 Top.Smallstep <> value ind
R24708:24712 Top.Smallstep Temp4 ttrue constr
R24728:24732 Top.Smallstep <> value ind
R24734:24739 Top.Smallstep Temp4 tfalse constr
ind 24802:24805 Temp4 step
constr 24833:24841 Temp4 ST_IfTrue
constr 24892:24901 Temp4 ST_IfFalse
constr 24953:24957 Temp4 ST_If
R24811:24814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24817:24820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24815:24816 Top.Smallstep Temp4 tm ind
R24809:24810 Top.Smallstep Temp4 tm ind
R25067:25070 Top.Smallstep <> step var
R24880:24884 Top.Smallstep Temp4 ::x_'==>'_x not
R24865:24867 Top.Smallstep Temp4 tif constr
R24878:24879 Top.Smallstep <> t2 var
R24875:24876 Top.Smallstep <> t1 var
R24869:24873 Top.Smallstep Temp4 ttrue constr
R24885:24886 Top.Smallstep <> t1 var
R24941:24945 Top.Smallstep Temp4 ::x_'==>'_x not
R24925:24927 Top.Smallstep Temp4 tif constr
R24939:24940 Top.Smallstep <> t2 var
R24936:24937 Top.Smallstep <> t1 var
R24929:24934 Top.Smallstep Temp4 tfalse constr
R24946:24947 Top.Smallstep <> t2 var
R24998:25007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25020:25024 Top.Smallstep Temp4 ::x_'==>'_x not
R25008:25010 Top.Smallstep Temp4 tif constr
R25018:25019 Top.Smallstep <> t3 var
R25015:25016 Top.Smallstep <> t2 var
R25012:25013 Top.Smallstep <> t1 var
R25025:25027 Top.Smallstep Temp4 tif constr
R25036:25037 Top.Smallstep <> t3 var
R25033:25034 Top.Smallstep <> t2 var
R25029:25031 Top.Smallstep <> t1' var
R24990:24994 Top.Smallstep Temp4 ::x_'==>'_x not
R24988:24989 Top.Smallstep <> t1 var
R24995:24997 Top.Smallstep <> t1' var
R25067:25070 Top.Smallstep Temp4 step ind
not 25048:25048 Temp4 ::x_'==>'_x
def 25308:25322 Temp4 bool_step_prop1
R25335:25339 Top.Smallstep Temp4 ::x_'==>'_x not
R25329:25334 Top.Smallstep Temp4 tfalse constr
R25340:25345 Top.Smallstep Temp4 tfalse constr
def 25380:25394 Temp4 bool_step_prop2
R25485:25496 Top.Smallstep Temp4 ::x_'==>'_x not
R25404:25406 Top.Smallstep Temp4 tif constr
R25460:25462 Top.Smallstep Temp4 tif constr
R25478:25483 Top.Smallstep Temp4 tfalse constr
R25471:25476 Top.Smallstep Temp4 tfalse constr
R25464:25469 Top.Smallstep Temp4 tfalse constr
R25429:25431 Top.Smallstep Temp4 tif constr
R25445:25449 Top.Smallstep Temp4 ttrue constr
R25439:25443 Top.Smallstep Temp4 ttrue constr
R25433:25437 Top.Smallstep Temp4 ttrue constr
R25415:25419 Top.Smallstep Temp4 ttrue constr
R25497:25501 Top.Smallstep Temp4 ttrue constr
def 25536:25550 Temp4 bool_step_prop3
R25639:25651 Top.Smallstep Temp4 ::x_'==>'_x not
R25560:25562 Top.Smallstep Temp4 tif constr
R25633:25638 Top.Smallstep Temp4 tfalse constr
R25603:25605 Top.Smallstep Temp4 tif constr
R25619:25623 Top.Smallstep Temp4 ttrue constr
R25613:25617 Top.Smallstep Temp4 ttrue constr
R25607:25611 Top.Smallstep Temp4 ttrue constr
R25572:25574 Top.Smallstep Temp4 tif constr
R25588:25592 Top.Smallstep Temp4 ttrue constr
R25582:25586 Top.Smallstep Temp4 ttrue constr
R25576:25580 Top.Smallstep Temp4 ttrue constr
R25652:25654 Top.Smallstep Temp4 tif constr
R25707:25712 Top.Smallstep Temp4 tfalse constr
R25677:25679 Top.Smallstep Temp4 tif constr
R25693:25697 Top.Smallstep Temp4 ttrue constr
R25687:25691 Top.Smallstep Temp4 ttrue constr
R25681:25685 Top.Smallstep Temp4 ttrue constr
R25663:25667 Top.Smallstep Temp4 ttrue constr
prf 25929:25943 Temp4 strong_progress
R25966:25970 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25990:25990 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25959:25963 Top.Smallstep Temp4 value ind
R25965:25965 Top.Smallstep <> t var
R25971:25977 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25980:25981 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25983:25987 Top.Smallstep Temp4 ::x_'==>'_x not
R25982:25982 Top.Smallstep <> t var
R25988:25989 Top.Smallstep <> t' var
prf 26112:26129 Temp4 step_deterministic
R26135:26147 Top.Smallstep <> deterministic def
R26149:26152 Top.Smallstep Temp4 step ind
mod 26211:26215 <> Temp4.Temp5
ind 26985:26988 Temp4.Temp5 step
constr 27016:27024 Temp4.Temp5 ST_IfTrue
constr 27075:27084 Temp4.Temp5 ST_IfFalse
constr 27136:27140 Temp4.Temp5 ST_If
R26994:26997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27000:27003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26998:26999 Top.Smallstep Temp4 tm ind
R26992:26993 Top.Smallstep Temp4 tm ind
R27271:27274 Top.Smallstep <> step var
R27063:27067 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27048:27050 Top.Smallstep Temp4 tif constr
R27061:27062 Top.Smallstep <> t2 var
R27058:27059 Top.Smallstep <> t1 var
R27052:27056 Top.Smallstep Temp4 ttrue constr
R27068:27069 Top.Smallstep <> t1 var
R27124:27128 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27108:27110 Top.Smallstep Temp4 tif constr
R27122:27123 Top.Smallstep <> t2 var
R27119:27120 Top.Smallstep <> t1 var
R27112:27117 Top.Smallstep Temp4 tfalse constr
R27129:27130 Top.Smallstep <> t2 var
R27181:27190 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27203:27207 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27191:27193 Top.Smallstep Temp4 tif constr
R27201:27202 Top.Smallstep <> t3 var
R27198:27199 Top.Smallstep <> t2 var
R27195:27196 Top.Smallstep <> t1 var
R27208:27210 Top.Smallstep Temp4 tif constr
R27219:27220 Top.Smallstep <> t3 var
R27216:27217 Top.Smallstep <> t2 var
R27212:27214 Top.Smallstep <> t1' var
R27173:27177 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27171:27172 Top.Smallstep <> t1 var
R27178:27180 Top.Smallstep <> t1' var
R27271:27274 Top.Smallstep Temp4.Temp5 step ind
not 27252:27252 Temp4.Temp5 ::x_'==>'_x
def 27295:27309 Temp4.Temp5 bool_step_prop4
R27400:27418 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27323:27325 Top.Smallstep Temp4 tif constr
R27394:27399 Top.Smallstep Temp4 tfalse constr
R27375:27380 Top.Smallstep Temp4 tfalse constr
R27340:27342 Top.Smallstep Temp4 tif constr
R27356:27360 Top.Smallstep Temp4 ttrue constr
R27350:27354 Top.Smallstep Temp4 ttrue constr
R27344:27348 Top.Smallstep Temp4 ttrue constr
R27419:27424 Top.Smallstep Temp4 tfalse constr
def 27436:27456 Temp4.Temp5 bool_step_prop4_holds
R27462:27476 Top.Smallstep Temp4.Temp5 bool_step_prop4 def
R28465:28469 Top.Smallstep Temp4.Temp5 <> mod
R28476:28480 Top.Smallstep Temp4 <> mod
ind 29496:29500 <> multi
constr 29547:29556 <> multi_refl
constr 29593:29602 <> multi_step
R29515:29522 Top.Smallstep <> relation def
R29524:29524 Top.Smallstep <> X var
R29529:29536 Top.Smallstep <> relation def
R29573:29573 Top.Smallstep <> X var
R29577:29581 Top.Smallstep <> multi ind
R29587:29587 Top.Smallstep <> x var
R29585:29585 Top.Smallstep <> x var
R29583:29583 Top.Smallstep <> R var
R29577:29581 Top.Smallstep <> X var
R29622:29622 Top.Smallstep <> X var
R29651:29674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29686:29709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29710:29714 Top.Smallstep <> multi ind
R29720:29720 Top.Smallstep <> z var
R29718:29718 Top.Smallstep <> x var
R29716:29716 Top.Smallstep <> R var
R29710:29714 Top.Smallstep <> X var
R29675:29679 Top.Smallstep <> multi ind
R29685:29685 Top.Smallstep <> z var
R29683:29683 Top.Smallstep <> y var
R29681:29681 Top.Smallstep <> R var
R29675:29679 Top.Smallstep <> X var
R29646:29646 Top.Smallstep <> R var
R29650:29650 Top.Smallstep <> y var
R29648:29648 Top.Smallstep <> x var
R30473:30477 Top.Smallstep <> multi ind
R30479:30482 Top.Smallstep <> step ind
not 30453:30453 <> ::x_'==>*'_x
prf 31027:31033 <> multi_R
R31056:31063 Top.Smallstep <> relation def
R31065:31065 Top.Smallstep <> X var
R31075:31075 Top.Smallstep <> X var
R31091:31094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31096:31100 Top.Smallstep <> multi ind
R31102:31102 Top.Smallstep <> R var
R31107:31107 Top.Smallstep <> y var
R31105:31105 Top.Smallstep <> x var
R31086:31086 Top.Smallstep <> R var
R31090:31090 Top.Smallstep <> y var
R31088:31088 Top.Smallstep <> x var
R31145:31154 Top.Smallstep <> multi_step constr
R31145:31154 Top.Smallstep <> multi_step constr
R31179:31188 Top.Smallstep <> multi_refl constr
R31179:31188 Top.Smallstep <> multi_refl constr
prf 31249:31259 <> multi_trans
R31285:31292 Top.Smallstep <> relation def
R31294:31294 Top.Smallstep <> X var
R31306:31306 Top.Smallstep <> X var
R31327:31337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31349:31358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31359:31363 Top.Smallstep <> multi ind
R31369:31369 Top.Smallstep <> z var
R31367:31367 Top.Smallstep <> x var
R31365:31365 Top.Smallstep <> R var
R31338:31342 Top.Smallstep <> multi ind
R31348:31348 Top.Smallstep <> z var
R31346:31346 Top.Smallstep <> y var
R31344:31344 Top.Smallstep <> R var
R31316:31320 Top.Smallstep <> multi ind
R31326:31326 Top.Smallstep <> y var
R31324:31324 Top.Smallstep <> x var
R31322:31322 Top.Smallstep <> R var
R31488:31497 Top.Smallstep <> multi_step constr
R31488:31497 Top.Smallstep <> multi_step constr
prf 31832:31847 <> test_multistep_1
R31905:31919 Top.Smallstep <> ::x_'==>*'_x not
R31856:31856 Top.Smallstep <> P constr
R31891:31891 Top.Smallstep <> P constr
R31900:31900 Top.Smallstep <> C constr
R31894:31894 Top.Smallstep <> C constr
R31867:31867 Top.Smallstep <> P constr
R31876:31876 Top.Smallstep <> C constr
R31870:31870 Top.Smallstep <> C constr
R31920:31920 Top.Smallstep <> C constr
R31923:31923 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31929:31933 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31939:31939 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31925:31927 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31935:31937 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31987:31987 Top.Smallstep <> P constr
R32017:32017 Top.Smallstep <> P constr
R32026:32026 Top.Smallstep <> C constr
R32020:32020 Top.Smallstep <> C constr
R31990:31990 Top.Smallstep <> C constr
R31994:31996 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31958:31967 Top.Smallstep <> multi_step constr
R31987:31987 Top.Smallstep <> P constr
R32017:32017 Top.Smallstep <> P constr
R32026:32026 Top.Smallstep <> C constr
R32020:32020 Top.Smallstep <> C constr
R31990:31990 Top.Smallstep <> C constr
R31994:31996 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31958:31967 Top.Smallstep <> multi_step constr
R32042:32049 Top.Smallstep <> ST_Plus1 constr
R32042:32049 Top.Smallstep <> ST_Plus1 constr
R32058:32074 Top.Smallstep <> ST_PlusConstConst constr
R32058:32074 Top.Smallstep <> ST_PlusConstConst constr
R32114:32114 Top.Smallstep <> P constr
R32144:32144 Top.Smallstep <> C constr
R32148:32150 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32117:32117 Top.Smallstep <> C constr
R32121:32123 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32085:32094 Top.Smallstep <> multi_step constr
R32114:32114 Top.Smallstep <> P constr
R32144:32144 Top.Smallstep <> C constr
R32148:32150 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32117:32117 Top.Smallstep <> C constr
R32121:32123 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32085:32094 Top.Smallstep <> multi_step constr
R32165:32172 Top.Smallstep <> ST_Plus2 constr
R32165:32172 Top.Smallstep <> ST_Plus2 constr
R32181:32187 Top.Smallstep <> v_const constr
R32181:32187 Top.Smallstep <> v_const constr
R32198:32214 Top.Smallstep <> ST_PlusConstConst constr
R32198:32214 Top.Smallstep <> ST_PlusConstConst constr
R32225:32231 Top.Smallstep <> multi_R thm
R32225:32231 Top.Smallstep <> multi_R thm
R32242:32258 Top.Smallstep <> ST_PlusConstConst constr
R32242:32258 Top.Smallstep <> ST_PlusConstConst constr
prf 32408:32424 <> test_multistep_1'
R32482:32495 Top.Smallstep <> ::x_'==>*'_x not
R32433:32433 Top.Smallstep <> P constr
R32468:32468 Top.Smallstep <> P constr
R32477:32477 Top.Smallstep <> C constr
R32471:32471 Top.Smallstep <> C constr
R32444:32444 Top.Smallstep <> P constr
R32453:32453 Top.Smallstep <> C constr
R32447:32447 Top.Smallstep <> C constr
R32496:32496 Top.Smallstep <> C constr
R32499:32499 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32505:32509 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32515:32515 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32501:32503 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32511:32513 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32535:32544 Top.Smallstep <> multi_step constr
R32535:32544 Top.Smallstep <> multi_step constr
R32553:32560 Top.Smallstep <> ST_Plus1 constr
R32553:32560 Top.Smallstep <> ST_Plus1 constr
R32569:32585 Top.Smallstep <> ST_PlusConstConst constr
R32569:32585 Top.Smallstep <> ST_PlusConstConst constr
R32597:32606 Top.Smallstep <> multi_step constr
R32597:32606 Top.Smallstep <> multi_step constr
R32615:32622 Top.Smallstep <> ST_Plus2 constr
R32615:32622 Top.Smallstep <> ST_Plus2 constr
R32631:32637 Top.Smallstep <> v_const constr
R32631:32637 Top.Smallstep <> v_const constr
R32648:32664 Top.Smallstep <> ST_PlusConstConst constr
R32648:32664 Top.Smallstep <> ST_PlusConstConst constr
R32676:32685 Top.Smallstep <> multi_step constr
R32676:32685 Top.Smallstep <> multi_step constr
R32694:32710 Top.Smallstep <> ST_PlusConstConst constr
R32694:32710 Top.Smallstep <> ST_PlusConstConst constr
R32721:32730 Top.Smallstep <> multi_refl constr
R32721:32730 Top.Smallstep <> multi_refl constr
prf 32805:32820 <> test_multistep_2
R32828:32833 Top.Smallstep <> ::x_'==>*'_x not
R32825:32825 Top.Smallstep <> C constr
R32834:32834 Top.Smallstep <> C constr
prf 32953:32968 <> test_multistep_3
R32990:33004 Top.Smallstep <> ::x_'==>*'_x not
R32977:32977 Top.Smallstep <> P constr
R32986:32986 Top.Smallstep <> C constr
R32980:32980 Top.Smallstep <> C constr
R33005:33005 Top.Smallstep <> P constr
R33014:33014 Top.Smallstep <> C constr
R33008:33008 Top.Smallstep <> C constr
prf 33125:33140 <> test_multistep_4
R33218:33231 Top.Smallstep <> ::x_'==>*'_x not
R33149:33149 Top.Smallstep <> P constr
R33174:33174 Top.Smallstep <> P constr
R33203:33203 Top.Smallstep <> P constr
R33212:33212 Top.Smallstep <> C constr
R33206:33206 Top.Smallstep <> C constr
R33187:33187 Top.Smallstep <> C constr
R33160:33160 Top.Smallstep <> C constr
R33232:33232 Top.Smallstep <> P constr
R33257:33257 Top.Smallstep <> C constr
R33261:33264 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33270:33270 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33266:33268 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33243:33243 Top.Smallstep <> C constr
def 33565:33580 <> step_normal_form
R33585:33595 Top.Smallstep <> normal_form def
R33597:33600 Top.Smallstep <> step ind
def 33615:33628 <> normal_form_of
R33638:33639 Top.Smallstep <> tm ind
R33657:33660 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33649:33654 Top.Smallstep <> ::x_'==>*'_x not
R33648:33648 Top.Smallstep <> t var
R33655:33656 Top.Smallstep <> t' var
R33661:33676 Top.Smallstep <> step_normal_form def
R33678:33679 Top.Smallstep <> t' var
prf 34126:34144 <> normal_forms_unique
R34149:34161 Top.Smallstep <> deterministic def
R34163:34176 Top.Smallstep <> normal_form_of def
R34248:34260 Top.Smallstep <> deterministic def
R34270:34283 Top.Smallstep <> normal_form_of def
def 34750:34760 <> normalizing
R34774:34781 Top.Smallstep <> relation def
R34783:34783 Top.Smallstep <> X var
R34801:34807 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34810:34815 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34830:34833 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R34817:34821 Top.Smallstep <> multi ind
R34823:34823 Top.Smallstep <> R var
R34828:34829 Top.Smallstep <> t' var
R34826:34826 Top.Smallstep <> t var
R34834:34844 Top.Smallstep <> normal_form def
R34848:34849 Top.Smallstep <> t' var
R34846:34846 Top.Smallstep <> R var
prf 35243:35259 <> multistep_congr_1
R35297:35305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35313:35318 Top.Smallstep <> ::x_'==>*'_x not
R35306:35306 Top.Smallstep <> P constr
R35311:35312 Top.Smallstep <> t2 var
R35308:35309 Top.Smallstep <> t1 var
R35319:35319 Top.Smallstep <> P constr
R35325:35326 Top.Smallstep <> t2 var
R35321:35323 Top.Smallstep <> t1' var
R35288:35293 Top.Smallstep <> ::x_'==>*'_x not
R35286:35287 Top.Smallstep <> t1 var
R35294:35296 Top.Smallstep <> t1' var
R35400:35409 Top.Smallstep <> multi_refl constr
R35400:35409 Top.Smallstep <> multi_refl constr
R35458:35458 Top.Smallstep <> P constr
R35441:35450 Top.Smallstep <> multi_step constr
R35458:35458 Top.Smallstep <> P constr
R35441:35450 Top.Smallstep <> multi_step constr
R35481:35488 Top.Smallstep <> ST_Plus1 constr
R35481:35488 Top.Smallstep <> ST_Plus1 constr
prf 35587:35603 <> multistep_congr_2
R35638:35646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35658:35666 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35674:35679 Top.Smallstep <> ::x_'==>*'_x not
R35667:35667 Top.Smallstep <> P constr
R35672:35673 Top.Smallstep <> t2 var
R35669:35670 Top.Smallstep <> t1 var
R35680:35680 Top.Smallstep <> P constr
R35685:35687 Top.Smallstep <> t2' var
R35682:35683 Top.Smallstep <> t1 var
R35649:35654 Top.Smallstep <> ::x_'==>*'_x not
R35647:35648 Top.Smallstep <> t2 var
R35655:35657 Top.Smallstep <> t2' var
R35630:35634 Top.Smallstep <> value ind
R35636:35637 Top.Smallstep <> t1 var
prf 36915:36930 <> step_normalizing
R36936:36946 Top.Smallstep <> normalizing def
R36948:36951 Top.Smallstep <> step ind
R36970:36980 Top.Smallstep <> normalizing def
R37026:37026 Top.Smallstep <> C constr
R37026:37026 Top.Smallstep <> C constr
R37067:37076 Top.Smallstep <> multi_refl constr
R37067:37076 Top.Smallstep <> multi_refl constr
R37201:37216 Top.Smallstep <> nf_same_as_value thm
R37201:37216 Top.Smallstep <> nf_same_as_value thm
R37201:37216 Top.Smallstep <> nf_same_as_value thm
R37225:37231 Top.Smallstep <> v_const constr
R37225:37231 Top.Smallstep <> v_const constr
R37342:37357 Top.Smallstep <> nf_same_as_value thm
R37342:37357 Top.Smallstep <> nf_same_as_value thm
R37342:37357 Top.Smallstep <> nf_same_as_value thm
R37375:37390 Top.Smallstep <> nf_same_as_value thm
R37375:37390 Top.Smallstep <> nf_same_as_value thm
R37375:37390 Top.Smallstep <> nf_same_as_value thm
R37526:37526 Top.Smallstep <> C constr
R37531:37533 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R37526:37526 Top.Smallstep <> C constr
R37531:37533 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R37605:37605 Top.Smallstep <> P constr
R37608:37608 Top.Smallstep <> C constr
R37587:37597 Top.Smallstep <> multi_trans thm
R37605:37605 Top.Smallstep <> P constr
R37608:37608 Top.Smallstep <> C constr
R37587:37597 Top.Smallstep <> multi_trans thm
R37637:37653 Top.Smallstep <> multistep_congr_1 thm
R37637:37653 Top.Smallstep <> multistep_congr_1 thm
R37716:37716 Top.Smallstep <> P constr
R37726:37726 Top.Smallstep <> C constr
R37719:37719 Top.Smallstep <> C constr
R37685:37695 Top.Smallstep <> multi_trans thm
R37716:37716 Top.Smallstep <> P constr
R37726:37726 Top.Smallstep <> C constr
R37719:37719 Top.Smallstep <> C constr
R37685:37695 Top.Smallstep <> multi_trans thm
R37754:37770 Top.Smallstep <> multistep_congr_2 prfax
R37754:37770 Top.Smallstep <> multistep_congr_2 prfax
R37779:37785 Top.Smallstep <> v_const constr
R37779:37785 Top.Smallstep <> v_const constr
R37821:37827 Top.Smallstep <> multi_R thm
R37821:37827 Top.Smallstep <> multi_R thm
R37836:37852 Top.Smallstep <> ST_PlusConstConst constr
R37836:37852 Top.Smallstep <> ST_PlusConstConst constr
R37893:37908 Top.Smallstep <> nf_same_as_value thm
R37893:37908 Top.Smallstep <> nf_same_as_value thm
R37893:37908 Top.Smallstep <> nf_same_as_value thm
R37917:37923 Top.Smallstep <> v_const constr
R37917:37923 Top.Smallstep <> v_const constr
prf 38429:38443 <> eval__multistep
R38467:38470 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38472:38477 Top.Smallstep <> ::x_'==>*'_x not
R38471:38471 Top.Smallstep <> t var
R38478:38478 Top.Smallstep <> C constr
R38480:38480 Top.Smallstep <> n var
R38462:38465 Top.Smallstep <> ::x_'\\'_x not
R38461:38461 Top.Smallstep <> t var
R38466:38466 Top.Smallstep <> n var
prf 40177:40186 <> step__eval
R40218:40226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40234:40242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40244:40247 Top.Smallstep <> ::x_'\\'_x not
R40243:40243 Top.Smallstep <> t var
R40248:40248 Top.Smallstep <> n var
R40229:40232 Top.Smallstep <> ::x_'\\'_x not
R40227:40228 Top.Smallstep <> t' var
R40233:40233 Top.Smallstep <> n var
R40211:40215 Top.Smallstep <> ::x_'==>'_x not
R40210:40210 Top.Smallstep <> t var
R40216:40217 Top.Smallstep <> t' var
prf 40763:40777 <> multistep__eval
R40815:40818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40819:40825 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40827:40828 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40837:40840 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40831:40833 Coq.Init.Logic <> :type_scope:x_'='_x not
R40829:40830 Top.Smallstep <> t' var
R40834:40834 Top.Smallstep <> C constr
R40836:40836 Top.Smallstep <> n var
R40842:40845 Top.Smallstep <> ::x_'\\'_x not
R40841:40841 Top.Smallstep <> t var
R40846:40846 Top.Smallstep <> n var
R40796:40809 Top.Smallstep <> normal_form_of def
R40813:40814 Top.Smallstep <> t' var
R40811:40811 Top.Smallstep <> t var
prf 41385:41394 <> evalF_eval
R41423:41427 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R41419:41421 Coq.Init.Logic <> :type_scope:x_'='_x not
R41412:41416 Top.Smallstep <> evalF def
R41418:41418 Top.Smallstep <> t var
R41422:41422 Top.Smallstep <> n var
R41429:41432 Top.Smallstep <> ::x_'\\'_x not
R41428:41428 Top.Smallstep <> t var
R41433:41433 Top.Smallstep <> n var
mod 41671:41678 <> Combined
ind 41692:41693 Combined tm
constr 41709:41709 Combined C
constr 41727:41727 Combined P
constr 41750:41754 Combined ttrue
constr 41765:41770 Combined tfalse
constr 41781:41783 Combined tif
R41716:41719 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41720:41721 Top.Smallstep <> tm ind
R41713:41715 Coq.Init.Datatypes <> nat ind
R41733:41736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41739:41742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41743:41744 Top.Smallstep <> tm ind
R41737:41738 Top.Smallstep <> tm ind
R41731:41732 Top.Smallstep <> tm ind
R41758:41759 Top.Smallstep <> tm ind
R41774:41775 Top.Smallstep <> tm ind
R41789:41792 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41795:41798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41801:41804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41805:41806 Top.Smallstep <> tm ind
R41799:41800 Top.Smallstep <> tm ind
R41793:41794 Top.Smallstep <> tm ind
R41787:41788 Top.Smallstep <> tm ind
ind 41820:41824 Combined value
constr 41846:41852 Combined v_const
constr 41882:41887 Combined v_true
constr 41907:41913 Combined v_false
R41830:41833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41828:41829 Top.Smallstep Combined tm ind
R41866:41870 Top.Smallstep <> value ind
R41873:41873 Top.Smallstep Combined C constr
R41875:41875 Top.Smallstep <> n var
R41891:41895 Top.Smallstep <> value ind
R41897:41901 Top.Smallstep Combined ttrue constr
R41917:41921 Top.Smallstep <> value ind
R41923:41928 Top.Smallstep Combined tfalse constr
ind 41991:41994 Combined step
constr 42022:42038 Combined ST_PlusConstConst
constr 42098:42105 Combined ST_Plus1
constr 42178:42185 Combined ST_Plus2
constr 42276:42284 Combined ST_IfTrue
constr 42335:42344 Combined ST_IfFalse
constr 42396:42400 Combined ST_If
R42000:42003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42006:42009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42004:42005 Top.Smallstep Combined tm ind
R41998:41999 Top.Smallstep Combined tm ind
R42510:42513 Top.Smallstep <> step var
R42077:42081 Top.Smallstep Combined ::x_'==>'_x not
R42062:42062 Top.Smallstep Combined P constr
R42072:42072 Top.Smallstep Combined C constr
R42074:42075 Top.Smallstep <> n2 var
R42065:42065 Top.Smallstep Combined C constr
R42067:42068 Top.Smallstep <> n1 var
R42082:42082 Top.Smallstep Combined C constr
R42087:42089 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42085:42086 Top.Smallstep <> n1 var
R42090:42091 Top.Smallstep <> n2 var
R42143:42152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42160:42164 Top.Smallstep Combined ::x_'==>'_x not
R42153:42153 Top.Smallstep Combined P constr
R42158:42159 Top.Smallstep <> t2 var
R42155:42156 Top.Smallstep <> t1 var
R42165:42165 Top.Smallstep Combined P constr
R42171:42172 Top.Smallstep <> t2 var
R42167:42169 Top.Smallstep <> t1' var
R42135:42139 Top.Smallstep Combined ::x_'==>'_x not
R42133:42134 Top.Smallstep <> t1 var
R42140:42142 Top.Smallstep <> t1' var
R42221:42230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42241:42250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42258:42262 Top.Smallstep Combined ::x_'==>'_x not
R42251:42251 Top.Smallstep Combined P constr
R42256:42257 Top.Smallstep <> t2 var
R42253:42254 Top.Smallstep <> v1 var
R42263:42263 Top.Smallstep Combined P constr
R42268:42270 Top.Smallstep <> t2' var
R42265:42266 Top.Smallstep <> v1 var
R42233:42237 Top.Smallstep Combined ::x_'==>'_x not
R42231:42232 Top.Smallstep <> t2 var
R42238:42240 Top.Smallstep <> t2' var
R42213:42217 Top.Smallstep Combined value ind
R42219:42220 Top.Smallstep <> v1 var
R42323:42327 Top.Smallstep Combined ::x_'==>'_x not
R42308:42310 Top.Smallstep Combined tif constr
R42321:42322 Top.Smallstep <> t2 var
R42318:42319 Top.Smallstep <> t1 var
R42312:42316 Top.Smallstep Combined ttrue constr
R42328:42329 Top.Smallstep <> t1 var
R42384:42388 Top.Smallstep Combined ::x_'==>'_x not
R42368:42370 Top.Smallstep Combined tif constr
R42382:42383 Top.Smallstep <> t2 var
R42379:42380 Top.Smallstep <> t1 var
R42372:42377 Top.Smallstep Combined tfalse constr
R42389:42390 Top.Smallstep <> t2 var
R42441:42450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42463:42467 Top.Smallstep Combined ::x_'==>'_x not
R42451:42453 Top.Smallstep Combined tif constr
R42461:42462 Top.Smallstep <> t3 var
R42458:42459 Top.Smallstep <> t2 var
R42455:42456 Top.Smallstep <> t1 var
R42468:42470 Top.Smallstep Combined tif constr
R42479:42480 Top.Smallstep <> t3 var
R42476:42477 Top.Smallstep <> t2 var
R42472:42474 Top.Smallstep <> t1' var
R42433:42437 Top.Smallstep Combined ::x_'==>'_x not
R42431:42432 Top.Smallstep <> t1 var
R42438:42440 Top.Smallstep <> t1' var
R42510:42513 Top.Smallstep Combined step ind
not 42491:42491 Combined ::x_'==>'_x
R42964:42971 Top.Smallstep Combined <> mod
ind 43502:43505 <> aval
constr 43529:43534 <> av_num
R43513:43516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43509:43512 Top.Imp <> aexp ind
R43548:43551 Top.Smallstep <> aval ind
R43554:43557 Top.Imp <> ANum constr
R43559:43559 Top.Smallstep <> n var
ind 43877:43881 <> astep
constr 43922:43926 <> AS_Id
constr 43981:43987 <> AS_Plus
constr 44069:44076 <> AS_Plus1
constr 44176:44183 <> AS_Plus2
constr 44300:44307 <> AS_Minus
constr 44398:44406 <> AS_Minus1
constr 44508:44516 <> AS_Minus2
constr 44635:44641 <> AS_Mult
constr 44730:44737 <> AS_Mult1
constr 44837:44844 <> AS_Mult2
R43890:43893 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43898:43901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43906:43909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43902:43905 Top.Imp <> aexp ind
R43894:43897 Top.Imp <> aexp ind
R43885:43889 Top.Imp <> state def
R44995:44999 Top.Smallstep <> astep var
R43954:43956 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43959:43964 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43957:43958 Top.Smallstep <> st var
R43949:43951 Top.Imp <> AId constr
R43953:43953 Top.Smallstep <> i var
R43965:43968 Top.Imp <> ANum constr
R43971:43972 Top.Smallstep <> st var
R43974:43974 Top.Smallstep <> i var
R44039:44041 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44044:44049 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44042:44043 Top.Smallstep <> st var
R44014:44018 Top.Imp <> APlus constr
R44031:44034 Top.Imp <> ANum constr
R44036:44037 Top.Smallstep <> n2 var
R44021:44024 Top.Imp <> ANum constr
R44026:44027 Top.Smallstep <> n1 var
R44050:44053 Top.Imp <> ANum constr
R44058:44060 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44056:44057 Top.Smallstep <> n1 var
R44061:44062 Top.Smallstep <> n2 var
R44123:44132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44133:44133 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44145:44148 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44151:44157 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44170:44170 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44149:44150 Top.Smallstep <> st var
R44134:44138 Top.Imp <> APlus constr
R44143:44144 Top.Smallstep <> a2 var
R44140:44141 Top.Smallstep <> a1 var
R44158:44162 Top.Imp <> APlus constr
R44168:44169 Top.Smallstep <> a2 var
R44164:44166 Top.Smallstep <> a1' var
R44109:44111 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44114:44119 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44112:44113 Top.Smallstep <> st var
R44107:44108 Top.Smallstep <> a1 var
R44120:44122 Top.Smallstep <> a1' var
R44221:44230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44247:44256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44257:44257 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44269:44272 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44275:44281 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44294:44294 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44273:44274 Top.Smallstep <> st var
R44258:44262 Top.Imp <> APlus constr
R44267:44268 Top.Smallstep <> a2 var
R44264:44265 Top.Smallstep <> v1 var
R44282:44286 Top.Imp <> APlus constr
R44291:44293 Top.Smallstep <> a2' var
R44288:44289 Top.Smallstep <> v1 var
R44233:44235 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44238:44243 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44236:44237 Top.Smallstep <> st var
R44231:44232 Top.Smallstep <> a2 var
R44244:44246 Top.Smallstep <> a2' var
R44214:44217 Top.Smallstep <> aval ind
R44219:44220 Top.Smallstep <> v1 var
R44334:44334 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44361:44364 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44367:44373 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44392:44392 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44365:44366 Top.Smallstep <> st var
R44335:44340 Top.Imp <> AMinus constr
R44353:44356 Top.Imp <> ANum constr
R44358:44359 Top.Smallstep <> n2 var
R44343:44346 Top.Imp <> ANum constr
R44348:44349 Top.Smallstep <> n1 var
R44374:44377 Top.Imp <> ANum constr
R44380:44384 Coq.Init.Peano <> minus syndef
R44389:44390 Top.Smallstep <> n2 var
R44386:44387 Top.Smallstep <> n1 var
R44453:44462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44463:44463 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44476:44479 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44482:44488 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44502:44502 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44480:44481 Top.Smallstep <> st var
R44464:44469 Top.Imp <> AMinus constr
R44474:44475 Top.Smallstep <> a2 var
R44471:44472 Top.Smallstep <> a1 var
R44489:44494 Top.Imp <> AMinus constr
R44500:44501 Top.Smallstep <> a2 var
R44496:44498 Top.Smallstep <> a1' var
R44439:44441 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44444:44449 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44442:44443 Top.Smallstep <> st var
R44437:44438 Top.Smallstep <> a1 var
R44450:44452 Top.Smallstep <> a1' var
R44554:44563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44580:44589 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44590:44590 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44603:44606 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44609:44615 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44629:44629 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44607:44608 Top.Smallstep <> st var
R44591:44596 Top.Imp <> AMinus constr
R44601:44602 Top.Smallstep <> a2 var
R44598:44599 Top.Smallstep <> v1 var
R44616:44621 Top.Imp <> AMinus constr
R44626:44628 Top.Smallstep <> a2' var
R44623:44624 Top.Smallstep <> v1 var
R44566:44568 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44571:44576 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44569:44570 Top.Smallstep <> st var
R44564:44565 Top.Smallstep <> a2 var
R44577:44579 Top.Smallstep <> a2' var
R44547:44550 Top.Smallstep <> aval ind
R44552:44553 Top.Smallstep <> v1 var
R44668:44668 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44694:44697 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44700:44706 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44724:44724 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44698:44699 Top.Smallstep <> st var
R44669:44673 Top.Imp <> AMult constr
R44686:44689 Top.Imp <> ANum constr
R44691:44692 Top.Smallstep <> n2 var
R44676:44679 Top.Imp <> ANum constr
R44681:44682 Top.Smallstep <> n1 var
R44707:44710 Top.Imp <> ANum constr
R44713:44716 Coq.Init.Peano <> mult syndef
R44721:44722 Top.Smallstep <> n2 var
R44718:44719 Top.Smallstep <> n1 var
R44784:44793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44794:44794 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44806:44809 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44812:44818 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44831:44831 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44810:44811 Top.Smallstep <> st var
R44795:44799 Top.Imp <> AMult constr
R44804:44805 Top.Smallstep <> a2 var
R44801:44802 Top.Smallstep <> a1 var
R44819:44823 Top.Imp <> AMult constr
R44829:44830 Top.Smallstep <> a2 var
R44825:44827 Top.Smallstep <> a1' var
R44770:44772 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44775:44780 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44773:44774 Top.Smallstep <> st var
R44768:44769 Top.Smallstep <> a1 var
R44781:44783 Top.Smallstep <> a1' var
R44882:44891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44908:44917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44918:44918 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44930:44933 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44936:44942 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44955:44955 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44934:44935 Top.Smallstep <> st var
R44919:44923 Top.Imp <> AMult constr
R44928:44929 Top.Smallstep <> a2 var
R44925:44926 Top.Smallstep <> v1 var
R44943:44947 Top.Imp <> AMult constr
R44952:44954 Top.Smallstep <> a2' var
R44949:44950 Top.Smallstep <> v1 var
R44894:44896 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44899:44904 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44897:44898 Top.Smallstep <> st var
R44892:44893 Top.Smallstep <> a2 var
R44905:44907 Top.Smallstep <> a2' var
R44875:44878 Top.Smallstep <> aval ind
R44880:44881 Top.Smallstep <> v1 var
R44995:44999 Top.Smallstep <> astep ind
not 44968:44968 <> ::x_'/'_x_'==>a'_x
ind 45113:45117 <> bstep
constr 45156:45160 <> BS_Eq
constr 45271:45276 <> BS_Eq1
constr 45366:45371 <> BS_Eq2
constr 45476:45482 <> BS_LtEq
constr 45598:45605 <> BS_LtEq1
constr 45695:45702 <> BS_LtEq2
constr 45807:45816 <> BS_NotTrue
constr 45867:45877 <> BS_NotFalse
constr 45928:45937 <> BS_NotStep
constr 46020:46033 <> BS_AndTrueTrue
constr 46089:46103 <> BS_AndTrueFalse
constr 46161:46171 <> BS_AndFalse
constr 46229:46242 <> BS_AndTrueStep
constr 46337:46346 <> BS_AndStep
R45126:45129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45134:45137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45142:45145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45138:45141 Top.Imp <> bexp ind
R45130:45133 Top.Imp <> bexp ind
R45121:45125 Top.Imp <> state def
R46470:46474 Top.Smallstep <> bstep var
R45185:45185 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45209:45212 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45215:45225 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45267:45267 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45213:45214 Top.Smallstep <> st var
R45186:45188 Top.Imp <> BEq constr
R45201:45204 Top.Imp <> ANum constr
R45206:45207 Top.Smallstep <> n2 var
R45191:45194 Top.Imp <> ANum constr
R45196:45197 Top.Smallstep <> n1 var
R45230:45236 Coq.Arith.EqNat <> beq_nat syndef
R45241:45242 Top.Smallstep <> n2 var
R45238:45239 Top.Smallstep <> n1 var
R45261:45266 Top.Imp <> BFalse constr
R45250:45254 Top.Imp <> BTrue constr
R45321:45328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45329:45329 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45339:45342 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45345:45351 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45362:45362 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45343:45344 Top.Smallstep <> st var
R45330:45332 Top.Imp <> BEq constr
R45337:45338 Top.Smallstep <> a2 var
R45334:45335 Top.Smallstep <> a1 var
R45352:45354 Top.Imp <> BEq constr
R45360:45361 Top.Smallstep <> a2 var
R45356:45358 Top.Smallstep <> a1' var
R45307:45309 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45312:45317 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45310:45311 Top.Smallstep <> st var
R45305:45306 Top.Smallstep <> a1 var
R45318:45320 Top.Smallstep <> a1' var
R45407:45414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45431:45438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45439:45439 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45449:45452 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45455:45461 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45472:45472 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45453:45454 Top.Smallstep <> st var
R45440:45442 Top.Imp <> BEq constr
R45447:45448 Top.Smallstep <> a2 var
R45444:45445 Top.Smallstep <> v1 var
R45462:45464 Top.Imp <> BEq constr
R45469:45471 Top.Smallstep <> a2' var
R45466:45467 Top.Smallstep <> v1 var
R45417:45419 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45422:45427 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45420:45421 Top.Smallstep <> st var
R45415:45416 Top.Smallstep <> a2 var
R45428:45430 Top.Smallstep <> a2' var
R45400:45403 Top.Smallstep <> aval ind
R45405:45406 Top.Smallstep <> v1 var
R45507:45507 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45531:45534 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45537:45556 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45594:45594 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45535:45536 Top.Smallstep <> st var
R45508:45510 Top.Imp <> BLe constr
R45523:45526 Top.Imp <> ANum constr
R45528:45529 Top.Smallstep <> n2 var
R45513:45516 Top.Imp <> ANum constr
R45518:45519 Top.Smallstep <> n1 var
R45561:45563 Coq.Arith.Compare_dec <> leb syndef
R45568:45569 Top.Smallstep <> n2 var
R45565:45566 Top.Smallstep <> n1 var
R45588:45593 Top.Imp <> BFalse constr
R45577:45581 Top.Imp <> BTrue constr
R45650:45657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45658:45658 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45668:45671 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45674:45680 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45691:45691 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45672:45673 Top.Smallstep <> st var
R45659:45661 Top.Imp <> BLe constr
R45666:45667 Top.Smallstep <> a2 var
R45663:45664 Top.Smallstep <> a1 var
R45681:45683 Top.Imp <> BLe constr
R45689:45690 Top.Smallstep <> a2 var
R45685:45687 Top.Smallstep <> a1' var
R45636:45638 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45641:45646 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45639:45640 Top.Smallstep <> st var
R45634:45635 Top.Smallstep <> a1 var
R45647:45649 Top.Smallstep <> a1' var
R45738:45745 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45762:45769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45770:45770 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45780:45783 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45786:45792 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45803:45803 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45784:45785 Top.Smallstep <> st var
R45771:45773 Top.Imp <> BLe constr
R45778:45779 Top.Smallstep <> a2 var
R45775:45776 Top.Smallstep <> v1 var
R45793:45795 Top.Imp <> BLe constr
R45800:45802 Top.Smallstep <> a2' var
R45797:45798 Top.Smallstep <> v1 var
R45748:45750 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45753:45758 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45751:45752 Top.Smallstep <> st var
R45746:45747 Top.Smallstep <> a2 var
R45759:45761 Top.Smallstep <> a2' var
R45731:45734 Top.Smallstep <> aval ind
R45736:45737 Top.Smallstep <> v1 var
R45835:45835 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45846:45849 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45852:45857 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45850:45851 Top.Smallstep <> st var
R45836:45839 Top.Imp <> BNot constr
R45841:45845 Top.Imp <> BTrue constr
R45858:45863 Top.Imp <> BFalse constr
R45896:45896 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45908:45911 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45914:45919 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45912:45913 Top.Smallstep <> st var
R45897:45900 Top.Imp <> BNot constr
R45902:45907 Top.Imp <> BFalse constr
R45920:45924 Top.Imp <> BTrue constr
R45979:45986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45987:45987 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45995:45998 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46001:46007 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46016:46016 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45999:46000 Top.Smallstep <> st var
R45988:45991 Top.Imp <> BNot constr
R45993:45994 Top.Smallstep <> b1 var
R46008:46011 Top.Imp <> BNot constr
R46013:46015 Top.Smallstep <> b1' var
R45965:45967 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45970:45975 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45968:45969 Top.Smallstep <> st var
R45963:45964 Top.Smallstep <> b1 var
R45976:45978 Top.Smallstep <> b1' var
R46052:46052 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46069:46072 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46075:46080 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46073:46074 Top.Smallstep <> st var
R46053:46056 Top.Imp <> BAnd constr
R46064:46068 Top.Imp <> BTrue constr
R46058:46062 Top.Imp <> BTrue constr
R46081:46085 Top.Imp <> BTrue constr
R46122:46122 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46140:46143 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46146:46151 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46144:46145 Top.Smallstep <> st var
R46123:46126 Top.Imp <> BAnd constr
R46134:46139 Top.Imp <> BFalse constr
R46128:46132 Top.Imp <> BTrue constr
R46152:46157 Top.Imp <> BFalse constr
R46193:46193 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46208:46211 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46214:46219 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46212:46213 Top.Smallstep <> st var
R46194:46197 Top.Imp <> BAnd constr
R46206:46207 Top.Smallstep <> b2 var
R46199:46204 Top.Imp <> BFalse constr
R46220:46225 Top.Imp <> BFalse constr
R46284:46291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46292:46292 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46306:46309 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46312:46318 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46333:46333 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46310:46311 Top.Smallstep <> st var
R46293:46296 Top.Imp <> BAnd constr
R46304:46305 Top.Smallstep <> b2 var
R46298:46302 Top.Imp <> BTrue constr
R46319:46322 Top.Imp <> BAnd constr
R46330:46332 Top.Smallstep <> b2' var
R46324:46328 Top.Imp <> BTrue constr
R46270:46272 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46275:46280 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46273:46274 Top.Smallstep <> st var
R46268:46269 Top.Smallstep <> b2 var
R46281:46283 Top.Smallstep <> b2' var
R46391:46398 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46399:46399 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46410:46413 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46416:46422 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46434:46434 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46414:46415 Top.Smallstep <> st var
R46400:46403 Top.Imp <> BAnd constr
R46408:46409 Top.Smallstep <> b2 var
R46405:46406 Top.Smallstep <> b1 var
R46423:46426 Top.Imp <> BAnd constr
R46432:46433 Top.Smallstep <> b2 var
R46428:46430 Top.Smallstep <> b1' var
R46377:46379 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46382:46387 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46380:46381 Top.Smallstep <> st var
R46375:46376 Top.Smallstep <> b1 var
R46388:46390 Top.Smallstep <> b1' var
R46470:46474 Top.Smallstep <> bstep ind
not 46443:46443 <> ::x_'/'_x_'==>b'_x
ind 47489:47493 <> cstep
constr 47543:47552 <> CS_AssStep
constr 47643:47648 <> CS_Ass
constr 47729:47738 <> CS_SeqStep
constr 47846:47857 <> CS_SeqFinish
constr 47915:47923 <> CS_IfTrue
constr 48000:48009 <> CS_IfFalse
constr 48087:48095 <> CS_IfStep
constr 48233:48240 <> CS_While
R47497:47497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47509:47513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47514:47514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47526:47530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47518:47520 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R47515:47517 Top.Imp <> com ind
R47521:47525 Top.Imp <> state def
R47501:47503 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R47498:47500 Top.Imp <> com ind
R47504:47508 Top.Imp <> state def
R48406:48410 Top.Smallstep <> cstep var
R48419:48419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48422:48422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48426:48426 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48412:48412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48414:48414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48417:48417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47594:47603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47604:47604 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47612:47615 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47618:47623 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47632:47635 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47606:47610 Top.Imp <> :com_scope:x_'::='_x not
R47605:47605 Top.Smallstep <> i var
R47611:47611 Top.Smallstep <> a var
R47616:47617 Top.Smallstep <> st var
R47625:47629 Top.Imp <> :com_scope:x_'::='_x not
R47624:47624 Top.Smallstep <> i var
R47630:47631 Top.Smallstep <> a' var
R47636:47637 Top.Smallstep <> st var
R47581:47583 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R47586:47591 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R47584:47585 Top.Smallstep <> st var
R47580:47580 Top.Smallstep <> a var
R47592:47593 Top.Smallstep <> a' var
R47673:47673 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47688:47691 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47694:47698 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47703:47706 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47723:47723 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47675:47680 Top.Imp <> :com_scope:x_'::='_x not
R47687:47687 Top.Imp <> :com_scope:x_'::='_x not
R47674:47674 Top.Smallstep <> i var
R47681:47684 Top.Imp <> ANum constr
R47686:47686 Top.Smallstep <> n var
R47692:47693 Top.Smallstep <> st var
R47699:47702 Top.Imp <> :com_scope:'SKIP' not
R47709:47713 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R47715:47719 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R47721:47722 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R47707:47708 Top.Smallstep <> st var
R47714:47714 Top.Smallstep <> i var
R47720:47720 Top.Smallstep <> n var
R47794:47803 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47804:47804 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47813:47816 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47819:47824 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47834:47837 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47807:47810 Top.Imp <> :com_scope:x_';;'_x not
R47805:47806 Top.Smallstep <> c1 var
R47811:47812 Top.Smallstep <> c2 var
R47817:47818 Top.Smallstep <> st var
R47828:47831 Top.Imp <> :com_scope:x_';;'_x not
R47825:47827 Top.Smallstep <> c1' var
R47832:47833 Top.Smallstep <> c2 var
R47838:47840 Top.Smallstep <> st' var
R47775:47777 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47780:47784 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47788:47790 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47773:47774 Top.Smallstep <> c1 var
R47778:47779 Top.Smallstep <> st var
R47785:47787 Top.Smallstep <> c1' var
R47791:47793 Top.Smallstep <> st' var
R47881:47881 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47892:47895 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47898:47902 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47905:47907 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47886:47889 Top.Imp <> :com_scope:x_';;'_x not
R47882:47885 Top.Imp <> :com_scope:'SKIP' not
R47890:47891 Top.Smallstep <> c2 var
R47896:47897 Top.Smallstep <> st var
R47903:47904 Top.Smallstep <> c2 var
R47908:47909 Top.Smallstep <> st var
R47978:47980 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47983:47987 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47990:47992 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47950:47953 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47959:47964 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47967:47972 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47975:47977 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47954:47958 Top.Imp <> BTrue constr
R47965:47966 Top.Smallstep <> c1 var
R47973:47974 Top.Smallstep <> c2 var
R47981:47982 Top.Smallstep <> st var
R47988:47989 Top.Smallstep <> c1 var
R47993:47994 Top.Smallstep <> st var
R48065:48067 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48070:48074 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48077:48079 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48036:48039 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48046:48051 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48054:48059 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48062:48064 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48040:48045 Top.Imp <> BFalse constr
R48052:48053 Top.Smallstep <> c1 var
R48060:48061 Top.Smallstep <> c2 var
R48068:48069 Top.Smallstep <> st var
R48075:48076 Top.Smallstep <> c2 var
R48080:48081 Top.Smallstep <> st var
R48141:48154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48179:48181 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48184:48196 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48222:48225 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48155:48158 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48160:48165 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48168:48173 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48176:48178 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48159:48159 Top.Smallstep <> b var
R48166:48167 Top.Smallstep <> c1 var
R48174:48175 Top.Smallstep <> c2 var
R48182:48183 Top.Smallstep <> st var
R48197:48200 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48203:48208 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48211:48216 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48219:48221 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48201:48202 Top.Smallstep <> b' var
R48209:48210 Top.Smallstep <> c1 var
R48217:48218 Top.Smallstep <> c2 var
R48226:48227 Top.Smallstep <> st var
R48128:48130 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R48133:48138 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R48131:48132 Top.Smallstep <> st var
R48127:48127 Top.Smallstep <> b var
R48139:48140 Top.Smallstep <> b' var
R48270:48270 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48288:48291 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48294:48305 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48356:48359 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48271:48276 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R48278:48281 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R48284:48287 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R48277:48277 Top.Smallstep <> b var
R48282:48283 Top.Smallstep <> c1 var
R48292:48293 Top.Smallstep <> st var
R48306:48309 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48311:48317 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48342:48348 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48353:48355 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48310:48310 Top.Smallstep <> b var
R48320:48323 Top.Imp <> :com_scope:x_';;'_x not
R48341:48341 Top.Imp <> :com_scope:x_';;'_x not
R48318:48319 Top.Smallstep <> c1 var
R48324:48329 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R48331:48334 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R48337:48340 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R48330:48330 Top.Smallstep <> b var
R48335:48336 Top.Smallstep <> c1 var
R48349:48352 Top.Imp <> :com_scope:'SKIP' not
R48360:48361 Top.Smallstep <> st var
R48406:48410 Top.Smallstep <> cstep ind
R48419:48419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48422:48422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48426:48426 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48412:48412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48414:48414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48417:48417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 48372:48372 <> ::x_'/'_x_'==>'_x_'/'_x
mod 48948:48951 <> CImp
ind 48965:48967 CImp com
constr 48983:48987 CImp CSkip
constr 48999:49002 CImp CAss
constr 49032:49035 CImp CSeq
constr 49061:49063 CImp CIf
constr 49097:49102 CImp CWhile
constr 49142:49145 CImp CPar
R48991:48993 Top.Smallstep <> com ind
R49012:49015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49020:49023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49024:49026 Top.Smallstep <> com ind
R49016:49019 Top.Imp <> aexp ind
R49006:49011 Coq.Strings.String <> string ind
R49042:49045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49049:49052 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49053:49055 Top.Smallstep <> com ind
R49046:49048 Top.Smallstep <> com ind
R49039:49041 Top.Smallstep <> com ind
R49071:49074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49078:49081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49085:49088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49089:49091 Top.Smallstep <> com ind
R49082:49084 Top.Smallstep <> com ind
R49075:49077 Top.Smallstep <> com ind
R49067:49070 Top.Imp <> bexp ind
R49110:49113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49117:49120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49121:49123 Top.Smallstep <> com ind
R49114:49116 Top.Smallstep <> com ind
R49106:49109 Top.Imp <> bexp ind
R49152:49155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49159:49162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49163:49165 Top.Smallstep <> com ind
R49156:49158 Top.Smallstep <> com ind
R49149:49151 Top.Smallstep <> com ind
R49192:49196 Top.Smallstep CImp CSkip constr
not 49178:49178 CImp ::'SKIP'
R49226:49229 Top.Smallstep CImp CAss constr
not 49208:49208 CImp ::x_'::='_x
R49277:49280 Top.Smallstep CImp CSeq constr
not 49260:49260 CImp ::x_';;'_x
R49365:49370 Top.Smallstep CImp CWhile constr
not 49334:49334 CImp ::'WHILE'_x_'DO'_x_'END'
R49463:49465 Top.Smallstep CImp CIf constr
not 49422:49422 CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R49554:49557 Top.Smallstep CImp CPar constr
not 49521:49521 CImp ::'PAR'_x_'WITH'_x_'END'
ind 49613:49617 CImp cstep
constr 49687:49696 CImp CS_AssStep
constr 49787:49792 CImp CS_Ass
constr 49871:49880 CImp CS_SeqStep
constr 49988:49999 CImp CS_SeqFinish
constr 50057:50065 CImp CS_IfTrue
constr 50144:50153 CImp CS_IfFalse
constr 50233:50241 CImp CS_IfStep
constr 50380:50387 CImp CS_While
constr 50535:50541 CImp CS_Par1
constr 50669:50675 CImp CS_Par2
constr 50803:50812 CImp CS_ParDone
R49621:49621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49633:49638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49639:49639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49651:49655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49643:49645 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R49640:49642 Top.Smallstep CImp com ind
R49646:49650 Top.Imp <> state def
R49625:49627 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R49622:49624 Top.Smallstep CImp com ind
R49628:49632 Top.Imp <> state def
R50919:50923 Top.Smallstep <> cstep var
R50932:50932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50935:50935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50939:50939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50925:50925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50927:50927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50930:50930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49738:49747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49748:49748 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49756:49759 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49762:49767 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49776:49779 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49750:49754 Top.Smallstep CImp ::x_'::='_x not
R49749:49749 Top.Smallstep <> i var
R49755:49755 Top.Smallstep <> a var
R49760:49761 Top.Smallstep <> st var
R49769:49773 Top.Smallstep CImp ::x_'::='_x not
R49768:49768 Top.Smallstep <> i var
R49774:49775 Top.Smallstep <> a' var
R49780:49781 Top.Smallstep <> st var
R49725:49727 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R49730:49735 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R49728:49729 Top.Smallstep <> st var
R49724:49724 Top.Smallstep <> a var
R49736:49737 Top.Smallstep <> a' var
R49817:49817 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49832:49835 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49838:49842 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49847:49849 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49819:49824 Top.Smallstep CImp ::x_'::='_x not
R49831:49831 Top.Smallstep CImp ::x_'::='_x not
R49818:49818 Top.Smallstep <> i var
R49825:49828 Top.Imp <> ANum constr
R49830:49830 Top.Smallstep <> n var
R49836:49837 Top.Smallstep <> st var
R49843:49846 Top.Smallstep CImp ::'SKIP' not
R49852:49856 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R49858:49862 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R49864:49865 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R49850:49851 Top.Smallstep <> st var
R49857:49857 Top.Smallstep <> i var
R49863:49863 Top.Smallstep <> n var
R49936:49945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49946:49946 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49955:49958 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49961:49966 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49976:49979 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49949:49952 Top.Smallstep CImp ::x_';;'_x not
R49947:49948 Top.Smallstep <> c1 var
R49953:49954 Top.Smallstep <> c2 var
R49959:49960 Top.Smallstep <> st var
R49970:49973 Top.Smallstep CImp ::x_';;'_x not
R49967:49969 Top.Smallstep <> c1' var
R49974:49975 Top.Smallstep <> c2 var
R49980:49982 Top.Smallstep <> st' var
R49917:49919 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49922:49926 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49930:49932 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49915:49916 Top.Smallstep <> c1 var
R49920:49921 Top.Smallstep <> st var
R49927:49929 Top.Smallstep <> c1' var
R49933:49935 Top.Smallstep <> st' var
R50023:50023 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50034:50037 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50040:50044 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50047:50049 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50028:50031 Top.Smallstep CImp ::x_';;'_x not
R50024:50027 Top.Smallstep CImp ::'SKIP' not
R50032:50033 Top.Smallstep <> c2 var
R50038:50039 Top.Smallstep <> st var
R50045:50046 Top.Smallstep <> c2 var
R50050:50051 Top.Smallstep <> st var
R50092:50092 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50121:50124 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50127:50131 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50134:50136 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50093:50096 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50102:50107 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50110:50115 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50118:50120 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50097:50101 Top.Imp <> BTrue constr
R50108:50109 Top.Smallstep <> c1 var
R50116:50117 Top.Smallstep <> c2 var
R50125:50126 Top.Smallstep <> st var
R50132:50133 Top.Smallstep <> c1 var
R50137:50138 Top.Smallstep <> st var
R50180:50180 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50210:50213 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50216:50220 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50223:50225 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50181:50184 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50191:50196 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50199:50204 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50207:50209 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50185:50190 Top.Imp <> BFalse constr
R50197:50198 Top.Smallstep <> c1 var
R50205:50206 Top.Smallstep <> c2 var
R50214:50215 Top.Smallstep <> st var
R50221:50222 Top.Smallstep <> c2 var
R50226:50227 Top.Smallstep <> st var
R50286:50299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50300:50300 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50325:50328 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50331:50343 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50369:50372 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50301:50304 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50306:50311 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50314:50319 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50322:50324 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50305:50305 Top.Smallstep <> b var
R50312:50313 Top.Smallstep <> c1 var
R50320:50321 Top.Smallstep <> c2 var
R50329:50330 Top.Smallstep <> st var
R50344:50347 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50350:50355 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50358:50363 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50366:50368 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50348:50349 Top.Smallstep <> b' var
R50356:50357 Top.Smallstep <> c1 var
R50364:50365 Top.Smallstep <> c2 var
R50373:50374 Top.Smallstep <> st var
R50274:50275 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R50278:50283 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R50276:50277 Top.Smallstep <> st var
R50273:50273 Top.Smallstep <> b var
R50284:50285 Top.Smallstep <> b' var
R50417:50417 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50435:50438 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50441:50453 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50504:50507 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50418:50423 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50425:50428 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50431:50434 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50424:50424 Top.Smallstep <> b var
R50429:50430 Top.Smallstep <> c1 var
R50439:50440 Top.Smallstep <> st var
R50454:50457 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50459:50465 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50490:50496 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50501:50503 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50458:50458 Top.Smallstep <> b var
R50468:50471 Top.Smallstep CImp ::x_';;'_x not
R50489:50489 Top.Smallstep CImp ::x_';;'_x not
R50466:50467 Top.Smallstep <> c1 var
R50472:50477 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50479:50482 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50485:50488 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50478:50478 Top.Smallstep <> b var
R50483:50484 Top.Smallstep <> c1 var
R50497:50500 Top.Smallstep CImp ::'SKIP' not
R50508:50509 Top.Smallstep <> st var
R50597:50606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50607:50607 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50626:50629 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50632:50637 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50657:50660 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50608:50611 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50614:50619 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50622:50625 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50612:50613 Top.Smallstep <> c1 var
R50620:50621 Top.Smallstep <> c2 var
R50630:50631 Top.Smallstep <> st var
R50638:50641 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50645:50650 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50653:50656 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50642:50644 Top.Smallstep <> c1' var
R50651:50652 Top.Smallstep <> c2 var
R50661:50663 Top.Smallstep <> st' var
R50578:50580 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50583:50587 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50591:50593 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50576:50577 Top.Smallstep <> c1 var
R50581:50582 Top.Smallstep <> st var
R50588:50590 Top.Smallstep <> c1' var
R50594:50596 Top.Smallstep <> st' var
R50731:50740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50741:50741 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50760:50763 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50766:50771 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50791:50794 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50742:50745 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50748:50753 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50756:50759 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50746:50747 Top.Smallstep <> c1 var
R50754:50755 Top.Smallstep <> c2 var
R50764:50765 Top.Smallstep <> st var
R50772:50775 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50778:50783 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50787:50790 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50776:50777 Top.Smallstep <> c1 var
R50784:50786 Top.Smallstep <> c2' var
R50795:50797 Top.Smallstep <> st' var
R50712:50714 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50717:50721 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50725:50727 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50710:50711 Top.Smallstep <> c2 var
R50715:50716 Top.Smallstep <> st var
R50722:50724 Top.Smallstep <> c2' var
R50728:50730 Top.Smallstep <> st' var
R50833:50833 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50856:50859 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50862:50866 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50871:50873 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50834:50837 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50842:50847 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50852:50855 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50838:50841 Top.Smallstep CImp ::'SKIP' not
R50848:50851 Top.Smallstep CImp ::'SKIP' not
R50860:50861 Top.Smallstep <> st var
R50867:50870 Top.Smallstep CImp ::'SKIP' not
R50874:50875 Top.Smallstep <> st var
R50919:50923 Top.Smallstep CImp cstep ind
R50932:50932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50935:50935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50939:50939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50925:50925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50927:50927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50930:50930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 50885:50885 CImp ::x_'/'_x_'==>'_x_'/'_x
def 50955:50964 CImp cmultistep
R50969:50973 Top.Smallstep <> multi ind
R50975:50979 Top.Smallstep CImp cstep ind
R51030:51034 Top.Smallstep <> multi ind
R51050:51050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51053:51053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51057:51057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51043:51043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51045:51045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51048:51048 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51036:51040 Top.Smallstep CImp cstep ind
not 50992:50992 CImp ::x_'/'_x_'==>*'_x_'/'_x
def 51286:51293 CImp par_loop
R51297:51299 Top.Smallstep CImp com ind
R51306:51313 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R51321:51332 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R51373:51378 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R51315:51319 Top.Smallstep CImp ::x_'::='_x not
R51314:51314 Top.Imp <> Y def
R51333:51338 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R51344:51353 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R51365:51372 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R51340:51342 Top.Imp <> :bexp_scope:x_'='_x not
R51339:51339 Top.Imp <> Y def
R51355:51359 Top.Smallstep CImp ::x_'::='_x not
R51354:51354 Top.Imp <> X def
R51361:51363 Top.Imp <> :aexp_scope:x_'+'_x not
R51360:51360 Top.Imp <> X def
def 51451:51468 CImp par_loop_example_0
R51473:51479 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51483:51491 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51529:51536 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R51500:51502 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51512:51518 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51523:51525 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51492:51499 Top.Smallstep CImp par_loop def
R51503:51508 Top.Maps <> ::'{'_'-->'_x_'}' not
R51510:51511 Top.Maps <> ::'{'_'-->'_x_'}' not
R51519:51522 Top.Smallstep CImp ::'SKIP' not
R51526:51528 Top.Smallstep <> st' var
R51542:51544 Coq.Init.Logic <> :type_scope:x_'='_x not
R51537:51539 Top.Smallstep <> st' var
R51541:51541 Top.Imp <> X def
R51564:51571 Coq.Init.Logic <> ex_intro constr
R51564:51571 Coq.Init.Logic <> ex_intro constr
R51590:51597 Top.Smallstep CImp par_loop def
R51609:51618 Top.Smallstep <> multi_step constr
R51609:51618 Top.Smallstep <> multi_step constr
R51627:51633 Top.Smallstep CImp CS_Par1 constr
R51627:51633 Top.Smallstep CImp CS_Par1 constr
R51646:51651 Top.Smallstep CImp CS_Ass constr
R51646:51651 Top.Smallstep CImp CS_Ass constr
R51663:51672 Top.Smallstep <> multi_step constr
R51663:51672 Top.Smallstep <> multi_step constr
R51681:51687 Top.Smallstep CImp CS_Par2 constr
R51681:51687 Top.Smallstep CImp CS_Par2 constr
R51696:51703 Top.Smallstep CImp CS_While constr
R51696:51703 Top.Smallstep CImp CS_While constr
R51715:51724 Top.Smallstep <> multi_step constr
R51715:51724 Top.Smallstep <> multi_step constr
R51733:51739 Top.Smallstep CImp CS_Par2 constr
R51733:51739 Top.Smallstep CImp CS_Par2 constr
R51748:51756 Top.Smallstep CImp CS_IfStep constr
R51748:51756 Top.Smallstep CImp CS_IfStep constr
R51769:51774 Top.Smallstep <> BS_Eq1 constr
R51769:51774 Top.Smallstep <> BS_Eq1 constr
R51783:51787 Top.Smallstep <> AS_Id constr
R51783:51787 Top.Smallstep <> AS_Id constr
R51799:51808 Top.Smallstep <> multi_step constr
R51799:51808 Top.Smallstep <> multi_step constr
R51817:51823 Top.Smallstep CImp CS_Par2 constr
R51817:51823 Top.Smallstep CImp CS_Par2 constr
R51832:51840 Top.Smallstep CImp CS_IfStep constr
R51832:51840 Top.Smallstep CImp CS_IfStep constr
R51853:51857 Top.Smallstep <> BS_Eq constr
R51853:51857 Top.Smallstep <> BS_Eq constr
R51876:51885 Top.Smallstep <> multi_step constr
R51876:51885 Top.Smallstep <> multi_step constr
R51894:51900 Top.Smallstep CImp CS_Par2 constr
R51894:51900 Top.Smallstep CImp CS_Par2 constr
R51909:51918 Top.Smallstep CImp CS_IfFalse constr
R51909:51918 Top.Smallstep CImp CS_IfFalse constr
R51930:51939 Top.Smallstep <> multi_step constr
R51930:51939 Top.Smallstep <> multi_step constr
R51948:51957 Top.Smallstep CImp CS_ParDone constr
R51948:51957 Top.Smallstep CImp CS_ParDone constr
R51969:51978 Top.Smallstep <> multi_refl constr
R51969:51978 Top.Smallstep <> multi_refl constr
def 52061:52078 CImp par_loop_example_2
R52083:52089 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52093:52101 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52138:52145 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R52110:52112 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R52122:52127 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R52132:52134 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R52102:52109 Top.Smallstep CImp par_loop def
R52113:52118 Top.Maps <> ::'{'_'-->'_x_'}' not
R52120:52121 Top.Maps <> ::'{'_'-->'_x_'}' not
R52128:52131 Top.Smallstep CImp ::'SKIP' not
R52135:52137 Top.Smallstep <> st' var
R52151:52153 Coq.Init.Logic <> :type_scope:x_'='_x not
R52146:52148 Top.Smallstep <> st' var
R52150:52150 Top.Imp <> X def
R52173:52180 Coq.Init.Logic <> ex_intro constr
R52173:52180 Coq.Init.Logic <> ex_intro constr
R52199:52208 Top.Smallstep <> multi_step constr
R52199:52208 Top.Smallstep <> multi_step constr
R52217:52223 Top.Smallstep CImp CS_Par2 constr
R52217:52223 Top.Smallstep CImp CS_Par2 constr
R52232:52239 Top.Smallstep CImp CS_While constr
R52232:52239 Top.Smallstep CImp CS_While constr
R52251:52260 Top.Smallstep <> multi_step constr
R52251:52260 Top.Smallstep <> multi_step constr
R52269:52275 Top.Smallstep CImp CS_Par2 constr
R52269:52275 Top.Smallstep CImp CS_Par2 constr
R52284:52292 Top.Smallstep CImp CS_IfStep constr
R52284:52292 Top.Smallstep CImp CS_IfStep constr
R52305:52310 Top.Smallstep <> BS_Eq1 constr
R52305:52310 Top.Smallstep <> BS_Eq1 constr
R52319:52323 Top.Smallstep <> AS_Id constr
R52319:52323 Top.Smallstep <> AS_Id constr
R52335:52344 Top.Smallstep <> multi_step constr
R52335:52344 Top.Smallstep <> multi_step constr
R52353:52359 Top.Smallstep CImp CS_Par2 constr
R52353:52359 Top.Smallstep CImp CS_Par2 constr
R52368:52376 Top.Smallstep CImp CS_IfStep constr
R52368:52376 Top.Smallstep CImp CS_IfStep constr
R52389:52393 Top.Smallstep <> BS_Eq constr
R52389:52393 Top.Smallstep <> BS_Eq constr
R52412:52421 Top.Smallstep <> multi_step constr
R52412:52421 Top.Smallstep <> multi_step constr
R52430:52436 Top.Smallstep CImp CS_Par2 constr
R52430:52436 Top.Smallstep CImp CS_Par2 constr
R52445:52453 Top.Smallstep CImp CS_IfTrue constr
R52445:52453 Top.Smallstep CImp CS_IfTrue constr
R52465:52474 Top.Smallstep <> multi_step constr
R52465:52474 Top.Smallstep <> multi_step constr
R52483:52489 Top.Smallstep CImp CS_Par2 constr
R52483:52489 Top.Smallstep CImp CS_Par2 constr
R52498:52507 Top.Smallstep CImp CS_SeqStep constr
R52498:52507 Top.Smallstep CImp CS_SeqStep constr
R52520:52529 Top.Smallstep CImp CS_AssStep constr
R52520:52529 Top.Smallstep CImp CS_AssStep constr
R52538:52545 Top.Smallstep <> AS_Plus1 constr
R52538:52545 Top.Smallstep <> AS_Plus1 constr
R52554:52558 Top.Smallstep <> AS_Id constr
R52554:52558 Top.Smallstep <> AS_Id constr
R52570:52579 Top.Smallstep <> multi_step constr
R52570:52579 Top.Smallstep <> multi_step constr
R52588:52594 Top.Smallstep CImp CS_Par2 constr
R52588:52594 Top.Smallstep CImp CS_Par2 constr
R52603:52612 Top.Smallstep CImp CS_SeqStep constr
R52603:52612 Top.Smallstep CImp CS_SeqStep constr
R52625:52634 Top.Smallstep CImp CS_AssStep constr
R52625:52634 Top.Smallstep CImp CS_AssStep constr
R52643:52649 Top.Smallstep <> AS_Plus constr
R52643:52649 Top.Smallstep <> AS_Plus constr
R52661:52670 Top.Smallstep <> multi_step constr
R52661:52670 Top.Smallstep <> multi_step constr
R52679:52685 Top.Smallstep CImp CS_Par2 constr
R52679:52685 Top.Smallstep CImp CS_Par2 constr
R52694:52703 Top.Smallstep CImp CS_SeqStep constr
R52694:52703 Top.Smallstep CImp CS_SeqStep constr
R52716:52721 Top.Smallstep CImp CS_Ass constr
R52716:52721 Top.Smallstep CImp CS_Ass constr
R52733:52742 Top.Smallstep <> multi_step constr
R52733:52742 Top.Smallstep <> multi_step constr
R52751:52757 Top.Smallstep CImp CS_Par2 constr
R52751:52757 Top.Smallstep CImp CS_Par2 constr
R52766:52777 Top.Smallstep CImp CS_SeqFinish constr
R52766:52777 Top.Smallstep CImp CS_SeqFinish constr
R52790:52799 Top.Smallstep <> multi_step constr
R52790:52799 Top.Smallstep <> multi_step constr
R52808:52814 Top.Smallstep CImp CS_Par2 constr
R52808:52814 Top.Smallstep CImp CS_Par2 constr
R52823:52830 Top.Smallstep CImp CS_While constr
R52823:52830 Top.Smallstep CImp CS_While constr
R52842:52851 Top.Smallstep <> multi_step constr
R52842:52851 Top.Smallstep <> multi_step constr
R52860:52866 Top.Smallstep CImp CS_Par2 constr
R52860:52866 Top.Smallstep CImp CS_Par2 constr
R52875:52883 Top.Smallstep CImp CS_IfStep constr
R52875:52883 Top.Smallstep CImp CS_IfStep constr
R52896:52901 Top.Smallstep <> BS_Eq1 constr
R52896:52901 Top.Smallstep <> BS_Eq1 constr
R52910:52914 Top.Smallstep <> AS_Id constr
R52910:52914 Top.Smallstep <> AS_Id constr
R52926:52935 Top.Smallstep <> multi_step constr
R52926:52935 Top.Smallstep <> multi_step constr
R52944:52950 Top.Smallstep CImp CS_Par2 constr
R52944:52950 Top.Smallstep CImp CS_Par2 constr
R52959:52967 Top.Smallstep CImp CS_IfStep constr
R52959:52967 Top.Smallstep CImp CS_IfStep constr
R52980:52984 Top.Smallstep <> BS_Eq constr
R52980:52984 Top.Smallstep <> BS_Eq constr
R53003:53012 Top.Smallstep <> multi_step constr
R53003:53012 Top.Smallstep <> multi_step constr
R53021:53027 Top.Smallstep CImp CS_Par2 constr
R53021:53027 Top.Smallstep CImp CS_Par2 constr
R53036:53044 Top.Smallstep CImp CS_IfTrue constr
R53036:53044 Top.Smallstep CImp CS_IfTrue constr
R53056:53065 Top.Smallstep <> multi_step constr
R53056:53065 Top.Smallstep <> multi_step constr
R53074:53080 Top.Smallstep CImp CS_Par2 constr
R53074:53080 Top.Smallstep CImp CS_Par2 constr
R53089:53098 Top.Smallstep CImp CS_SeqStep constr
R53089:53098 Top.Smallstep CImp CS_SeqStep constr
R53111:53120 Top.Smallstep CImp CS_AssStep constr
R53111:53120 Top.Smallstep CImp CS_AssStep constr
R53129:53136 Top.Smallstep <> AS_Plus1 constr
R53129:53136 Top.Smallstep <> AS_Plus1 constr
R53145:53149 Top.Smallstep <> AS_Id constr
R53145:53149 Top.Smallstep <> AS_Id constr
R53161:53170 Top.Smallstep <> multi_step constr
R53161:53170 Top.Smallstep <> multi_step constr
R53179:53185 Top.Smallstep CImp CS_Par2 constr
R53179:53185 Top.Smallstep CImp CS_Par2 constr
R53194:53203 Top.Smallstep CImp CS_SeqStep constr
R53194:53203 Top.Smallstep CImp CS_SeqStep constr
R53216:53225 Top.Smallstep CImp CS_AssStep constr
R53216:53225 Top.Smallstep CImp CS_AssStep constr
R53234:53240 Top.Smallstep <> AS_Plus constr
R53234:53240 Top.Smallstep <> AS_Plus constr
R53252:53261 Top.Smallstep <> multi_step constr
R53252:53261 Top.Smallstep <> multi_step constr
R53270:53276 Top.Smallstep CImp CS_Par2 constr
R53270:53276 Top.Smallstep CImp CS_Par2 constr
R53285:53294 Top.Smallstep CImp CS_SeqStep constr
R53285:53294 Top.Smallstep CImp CS_SeqStep constr
R53307:53312 Top.Smallstep CImp CS_Ass constr
R53307:53312 Top.Smallstep CImp CS_Ass constr
R53325:53334 Top.Smallstep <> multi_step constr
R53325:53334 Top.Smallstep <> multi_step constr
R53343:53349 Top.Smallstep CImp CS_Par1 constr
R53343:53349 Top.Smallstep CImp CS_Par1 constr
R53358:53363 Top.Smallstep CImp CS_Ass constr
R53358:53363 Top.Smallstep CImp CS_Ass constr
R53375:53384 Top.Smallstep <> multi_step constr
R53375:53384 Top.Smallstep <> multi_step constr
R53393:53399 Top.Smallstep CImp CS_Par2 constr
R53393:53399 Top.Smallstep CImp CS_Par2 constr
R53408:53419 Top.Smallstep CImp CS_SeqFinish constr
R53408:53419 Top.Smallstep CImp CS_SeqFinish constr
R53431:53440 Top.Smallstep <> multi_step constr
R53431:53440 Top.Smallstep <> multi_step constr
R53449:53455 Top.Smallstep CImp CS_Par2 constr
R53449:53455 Top.Smallstep CImp CS_Par2 constr
R53464:53471 Top.Smallstep CImp CS_While constr
R53464:53471 Top.Smallstep CImp CS_While constr
R53483:53492 Top.Smallstep <> multi_step constr
R53483:53492 Top.Smallstep <> multi_step constr
R53501:53507 Top.Smallstep CImp CS_Par2 constr
R53501:53507 Top.Smallstep CImp CS_Par2 constr
R53516:53524 Top.Smallstep CImp CS_IfStep constr
R53516:53524 Top.Smallstep CImp CS_IfStep constr
R53537:53542 Top.Smallstep <> BS_Eq1 constr
R53537:53542 Top.Smallstep <> BS_Eq1 constr
R53551:53555 Top.Smallstep <> AS_Id constr
R53551:53555 Top.Smallstep <> AS_Id constr
R53567:53576 Top.Smallstep <> multi_step constr
R53567:53576 Top.Smallstep <> multi_step constr
R53585:53591 Top.Smallstep CImp CS_Par2 constr
R53585:53591 Top.Smallstep CImp CS_Par2 constr
R53600:53608 Top.Smallstep CImp CS_IfStep constr
R53600:53608 Top.Smallstep CImp CS_IfStep constr
R53621:53625 Top.Smallstep <> BS_Eq constr
R53621:53625 Top.Smallstep <> BS_Eq constr
R53644:53653 Top.Smallstep <> multi_step constr
R53644:53653 Top.Smallstep <> multi_step constr
R53662:53668 Top.Smallstep CImp CS_Par2 constr
R53662:53668 Top.Smallstep CImp CS_Par2 constr
R53677:53686 Top.Smallstep CImp CS_IfFalse constr
R53677:53686 Top.Smallstep CImp CS_IfFalse constr
R53698:53707 Top.Smallstep <> multi_step constr
R53698:53707 Top.Smallstep <> multi_step constr
R53716:53725 Top.Smallstep CImp CS_ParDone constr
R53716:53725 Top.Smallstep CImp CS_ParDone constr
R53737:53746 Top.Smallstep <> multi_refl constr
R53737:53746 Top.Smallstep <> multi_refl constr
prf 53860:53873 CImp par_body_n__Sn
R53912:53917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53926:53928 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53931:53936 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53945:53947 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53918:53925 Top.Smallstep CImp par_loop def
R53929:53930 Top.Smallstep <> st var
R53937:53944 Top.Smallstep CImp par_loop def
R53950:53954 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R53956:53960 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R53964:53964 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R53948:53949 Top.Smallstep <> st var
R53955:53955 Top.Imp <> X def
R53961:53961 Coq.Init.Datatypes <> S constr
R53963:53963 Top.Smallstep <> n var
R53900:53903 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53896:53898 Coq.Init.Logic <> :type_scope:x_'='_x not
R53892:53893 Top.Smallstep <> st var
R53895:53895 Top.Imp <> X def
R53899:53899 Top.Smallstep <> n var
R53908:53910 Coq.Init.Logic <> :type_scope:x_'='_x not
R53904:53905 Top.Smallstep <> st var
R53907:53907 Top.Imp <> Y def
prf 54076:54085 CImp par_body_n
R54124:54129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54130:54136 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54140:54145 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54180:54183 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54154:54156 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54159:54165 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54174:54176 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54146:54153 Top.Smallstep CImp par_loop def
R54157:54158 Top.Smallstep <> st var
R54166:54173 Top.Smallstep CImp par_loop def
R54177:54179 Top.Smallstep <> st' var
R54193:54196 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54189:54191 Coq.Init.Logic <> :type_scope:x_'='_x not
R54184:54186 Top.Smallstep <> st' var
R54188:54188 Top.Imp <> X def
R54192:54192 Top.Smallstep <> n var
R54202:54204 Coq.Init.Logic <> :type_scope:x_'='_x not
R54197:54199 Top.Smallstep <> st' var
R54201:54201 Top.Imp <> Y def
R54112:54115 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54108:54110 Coq.Init.Logic <> :type_scope:x_'='_x not
R54104:54105 Top.Smallstep <> st var
R54107:54107 Top.Imp <> X def
R54120:54122 Coq.Init.Logic <> :type_scope:x_'='_x not
R54116:54117 Top.Smallstep <> st var
R54119:54119 Top.Imp <> Y def
prf 54343:54356 CImp par_loop_any_X
R54371:54377 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54381:54386 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54424:54431 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54395:54397 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54407:54413 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54418:54420 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54387:54394 Top.Smallstep CImp par_loop def
R54398:54403 Top.Maps <> ::'{'_'-->'_x_'}' not
R54405:54406 Top.Maps <> ::'{'_'-->'_x_'}' not
R54414:54417 Top.Smallstep CImp ::'SKIP' not
R54421:54423 Top.Smallstep <> st' var
R54437:54439 Coq.Init.Logic <> :type_scope:x_'='_x not
R54432:54434 Top.Smallstep <> st' var
R54436:54436 Top.Imp <> X def
R54440:54440 Top.Smallstep <> n var
R54474:54483 Top.Smallstep CImp par_body_n prfax
R54487:54492 Top.Maps <> ::'{'_'-->'_x_'}' not
R54494:54495 Top.Maps <> ::'{'_'-->'_x_'}' not
R54474:54483 Top.Smallstep CImp par_body_n prfax
R54487:54492 Top.Maps <> ::'{'_'-->'_x_'}' not
R54494:54495 Top.Maps <> ::'{'_'-->'_x_'}' not
R54517:54524 Top.Maps <> t_update def
R54613:54617 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R54619:54623 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R54625:54626 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R54618:54618 Top.Imp <> Y def
R54613:54617 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R54619:54623 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R54625:54626 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R54618:54618 Top.Imp <> Y def
R54663:54663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54672:54672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54675:54675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54664:54671 Top.Smallstep CImp par_loop def
R54646:54656 Top.Smallstep <> multi_trans thm
R54663:54663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54672:54672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54675:54675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54664:54671 Top.Smallstep CImp par_loop def
R54646:54656 Top.Smallstep <> multi_trans thm
R54697:54706 Top.Smallstep <> multi_step constr
R54697:54706 Top.Smallstep <> multi_step constr
R54715:54721 Top.Smallstep CImp CS_Par1 constr
R54715:54721 Top.Smallstep CImp CS_Par1 constr
R54730:54735 Top.Smallstep CImp CS_Ass constr
R54730:54735 Top.Smallstep CImp CS_Ass constr
R54747:54756 Top.Smallstep <> multi_step constr
R54747:54756 Top.Smallstep <> multi_step constr
R54765:54771 Top.Smallstep CImp CS_Par2 constr
R54765:54771 Top.Smallstep CImp CS_Par2 constr
R54780:54787 Top.Smallstep CImp CS_While constr
R54780:54787 Top.Smallstep CImp CS_While constr
R54799:54808 Top.Smallstep <> multi_step constr
R54799:54808 Top.Smallstep <> multi_step constr
R54817:54823 Top.Smallstep CImp CS_Par2 constr
R54817:54823 Top.Smallstep CImp CS_Par2 constr
R54832:54840 Top.Smallstep CImp CS_IfStep constr
R54832:54840 Top.Smallstep CImp CS_IfStep constr
R54853:54858 Top.Smallstep <> BS_Eq1 constr
R54853:54858 Top.Smallstep <> BS_Eq1 constr
R54867:54871 Top.Smallstep <> AS_Id constr
R54867:54871 Top.Smallstep <> AS_Id constr
R54882:54892 Top.Maps <> t_update_eq prfax
R54882:54892 Top.Maps <> t_update_eq prfax
R54882:54892 Top.Maps <> t_update_eq prfax
R54904:54913 Top.Smallstep <> multi_step constr
R54904:54913 Top.Smallstep <> multi_step constr
R54922:54928 Top.Smallstep CImp CS_Par2 constr
R54922:54928 Top.Smallstep CImp CS_Par2 constr
R54937:54945 Top.Smallstep CImp CS_IfStep constr
R54937:54945 Top.Smallstep CImp CS_IfStep constr
R54958:54962 Top.Smallstep <> BS_Eq constr
R54958:54962 Top.Smallstep <> BS_Eq constr
R54981:54990 Top.Smallstep <> multi_step constr
R54981:54990 Top.Smallstep <> multi_step constr
R54999:55005 Top.Smallstep CImp CS_Par2 constr
R54999:55005 Top.Smallstep CImp CS_Par2 constr
R55014:55023 Top.Smallstep CImp CS_IfFalse constr
R55014:55023 Top.Smallstep CImp CS_IfFalse constr
R55035:55044 Top.Smallstep <> multi_step constr
R55035:55044 Top.Smallstep <> multi_step constr
R55053:55062 Top.Smallstep CImp CS_ParDone constr
R55053:55062 Top.Smallstep CImp CS_ParDone constr
R55073:55082 Top.Smallstep <> multi_refl constr
R55073:55082 Top.Smallstep <> multi_refl constr
R55096:55107 Top.Maps <> t_update_neq prfax
R55096:55107 Top.Maps <> t_update_neq prfax
R55096:55107 Top.Maps <> t_update_neq prfax
R55096:55107 Top.Maps <> t_update_neq prfax
R55154:55157 Top.Smallstep CImp <> mod
def 55415:55419 <> stack
R55424:55427 Coq.Init.Datatypes <> list ind
R55429:55431 Coq.Init.Datatypes <> nat ind
def 55445:55448 <> prog
R55454:55457 Coq.Init.Datatypes <> list ind
R55459:55464 Top.Imp <> sinstr ind
ind 55478:55487 <> stack_step
constr 55544:55550 <> SS_Push
constr 55637:55643 <> SS_Load
constr 55733:55739 <> SS_Plus
constr 55830:55837 <> SS_Minus
constr 55928:55934 <> SS_Mult
R55496:55499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55512:55515 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55528:55531 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55520:55522 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55516:55519 Top.Smallstep <> prog def
R55523:55527 Top.Smallstep <> stack def
R55504:55506 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55500:55503 Top.Smallstep <> prog def
R55507:55511 Top.Smallstep <> stack def
R55491:55495 Top.Imp <> state def
R55578:55587 Top.Smallstep <> stack_step ind
R55618:55618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55621:55622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55631:55631 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55619:55620 Top.Smallstep <> p' var
R55624:55627 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55623:55623 Top.Smallstep <> n var
R55628:55630 Top.Smallstep <> stk var
R55592:55592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55606:55607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55611:55611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55600:55603 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55593:55597 Top.Imp <> SPush constr
R55599:55599 Top.Smallstep <> n var
R55604:55605 Top.Smallstep <> p' var
R55608:55610 Top.Smallstep <> stk var
R55589:55590 Top.Smallstep <> st var
R55671:55680 Top.Smallstep <> stack_step ind
R55711:55711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55714:55715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55727:55727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55712:55713 Top.Smallstep <> p' var
R55720:55723 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55716:55717 Top.Smallstep <> st var
R55719:55719 Top.Smallstep <> i var
R55724:55726 Top.Smallstep <> stk var
R55685:55685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55699:55700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55704:55704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55693:55696 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55686:55690 Top.Imp <> SLoad constr
R55692:55692 Top.Smallstep <> i var
R55697:55698 Top.Smallstep <> p' var
R55701:55703 Top.Smallstep <> stk var
R55682:55683 Top.Smallstep <> st var
R55769:55778 Top.Smallstep <> stack_step ind
R55809:55809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55812:55813 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55824:55824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55810:55811 Top.Smallstep <> p' var
R55814:55814 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55818:55820 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55816:55816 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R55815:55815 Top.Smallstep <> m var
R55817:55817 Top.Smallstep <> n var
R55821:55823 Top.Smallstep <> stk var
R55783:55783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55795:55796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55806:55806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55789:55792 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55784:55788 Top.Imp <> SPlus constr
R55793:55794 Top.Smallstep <> p' var
R55798:55799 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55797:55797 Top.Smallstep <> n var
R55801:55802 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55800:55800 Top.Smallstep <> m var
R55803:55805 Top.Smallstep <> stk var
R55780:55781 Top.Smallstep <> st var
R55867:55876 Top.Smallstep <> stack_step ind
R55907:55907 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55910:55911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55922:55922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55908:55909 Top.Smallstep <> p' var
R55912:55912 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55916:55918 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55914:55914 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R55913:55913 Top.Smallstep <> m var
R55915:55915 Top.Smallstep <> n var
R55919:55921 Top.Smallstep <> stk var
R55881:55881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55894:55895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55905:55905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55888:55891 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55882:55887 Top.Imp <> SMinus constr
R55892:55893 Top.Smallstep <> p' var
R55897:55898 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55896:55896 Top.Smallstep <> n var
R55900:55901 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55899:55899 Top.Smallstep <> m var
R55902:55904 Top.Smallstep <> stk var
R55878:55879 Top.Smallstep <> st var
R55964:55973 Top.Smallstep <> stack_step ind
R56004:56004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56007:56008 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56019:56019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56005:56006 Top.Smallstep <> p' var
R56009:56009 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R56013:56015 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R56011:56011 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R56010:56010 Top.Smallstep <> m var
R56012:56012 Top.Smallstep <> n var
R56016:56018 Top.Smallstep <> stk var
R55978:55978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55990:55991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56001:56001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55984:55987 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55979:55983 Top.Imp <> SMult constr
R55988:55989 Top.Smallstep <> p' var
R55993:55994 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55992:55992 Top.Smallstep <> n var
R55996:55997 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55995:55995 Top.Smallstep <> m var
R55998:56000 Top.Smallstep <> stk var
R55975:55976 Top.Smallstep <> st var
prf 56031:56054 <> stack_step_deterministic
R56071:56083 Top.Smallstep <> deterministic def
R56086:56095 Top.Smallstep <> stack_step ind
R56097:56098 Top.Smallstep <> st var
R56118:56130 Top.Smallstep <> deterministic def
def 56218:56232 <> stack_multistep
R56240:56244 Top.Smallstep <> multi ind
R56247:56256 Top.Smallstep <> stack_step ind
R56258:56259 Top.Smallstep <> st var
def 56660:56688 <> compiler_is_correct_statement
prf 56774:56792 <> compiler_is_correct
R56796:56824 Top.Smallstep <> compiler_is_correct_statement prfax
