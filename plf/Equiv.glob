DIGEST 4a25f97c7d9eed1e9a016bcd757b7fca
FTop.Equiv
R98:110 Coq.Bool.Bool <> <> lib
R128:142 Coq.Arith.Arith <> <> lib
R160:174 Coq.Arith.EqNat <> <> lib
R192:206 Coq.omega.Omega <> <> lib
R224:237 Coq.Lists.List <> <> lib
R255:288 Coq.Logic.FunctionalExtensionality <> <> lib
R328:331 Top.Maps <> <> lib
R349:351 Top.Imp <> <> lib
def 2574:2579 <> aequiv
R2590:2593 Top.Imp <> aexp ind
R2619:2623 Top.Imp <> state def
R2642:2644 Coq.Init.Logic <> :type_scope:x_'='_x not
R2631:2635 Top.Imp <> aeval def
R2640:2641 Top.Equiv <> a1 var
R2637:2638 Top.Equiv <> st var
R2645:2649 Top.Imp <> aeval def
R2654:2655 Top.Equiv <> a2 var
R2651:2652 Top.Equiv <> st var
def 2670:2675 <> bequiv
R2686:2689 Top.Imp <> bexp ind
R2715:2719 Top.Imp <> state def
R2738:2740 Coq.Init.Logic <> :type_scope:x_'='_x not
R2727:2731 Top.Imp <> beval def
R2736:2737 Top.Equiv <> b1 var
R2733:2734 Top.Equiv <> st var
R2741:2745 Top.Imp <> beval def
R2750:2751 Top.Equiv <> b2 var
R2747:2748 Top.Equiv <> st var
prf 2860:2873 <> aequiv_example
R2878:2883 Top.Equiv <> aequiv def
R2887:2889 Top.Imp <> :aexp_scope:x_'-'_x not
R2886:2886 Top.Imp <> X def
R2890:2890 Top.Imp <> X def
prf 2944:2957 <> bequiv_example
R2962:2967 Top.Equiv <> bequiv def
R2981:2984 Coq.Init.Datatypes <> true constr
R2975:2977 Top.Imp <> :bexp_scope:x_'='_x not
R2971:2973 Top.Imp <> :aexp_scope:x_'-'_x not
R2970:2970 Top.Imp <> X def
R2974:2974 Top.Imp <> X def
R3014:3018 Top.Imp <> beval def
R3031:3044 Top.Equiv <> aequiv_example thm
R3031:3044 Top.Equiv <> aequiv_example thm
R3031:3044 Top.Equiv <> aequiv_example thm
def 3742:3747 <> cequiv
R3758:3760 Top.Imp <> com ind
R3792:3796 Top.Imp <> state def
R3804:3804 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3819:3825 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3840:3840 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3807:3809 Top.Imp <> ::x_'/'_x_'\\'_x not
R3812:3815 Top.Imp <> ::x_'/'_x_'\\'_x not
R3805:3806 Top.Equiv <> c1 var
R3810:3811 Top.Equiv <> st var
R3816:3818 Top.Equiv <> st' var
R3828:3830 Top.Imp <> ::x_'/'_x_'\\'_x not
R3833:3836 Top.Imp <> ::x_'/'_x_'\\'_x not
R3826:3827 Top.Equiv <> c2 var
R3831:3832 Top.Equiv <> st var
R3837:3839 Top.Equiv <> st' var
prf 4081:4089 <> skip_left
R4104:4109 Top.Equiv <> cequiv def
R4132:4132 Top.Equiv <> c var
R4121:4123 Top.Imp <> :com_scope:x_';;'_x not
R4117:4120 Top.Imp <> :com_scope:'SKIP' not
R4124:4124 Top.Equiv <> c var
R4305:4309 Top.Imp <> E_Seq constr
R4305:4309 Top.Imp <> E_Seq constr
R4330:4335 Top.Imp <> E_Skip constr
R4330:4335 Top.Imp <> E_Skip constr
prf 4500:4509 <> skip_right
R4524:4529 Top.Equiv <> cequiv def
R4551:4551 Top.Equiv <> c var
R4537:4540 Top.Imp <> :com_scope:x_';;'_x not
R4536:4536 Top.Equiv <> c var
R4541:4544 Top.Imp <> :com_scope:'SKIP' not
prf 4697:4711 <> IFB_true_simple
R4730:4735 Top.Equiv <> cequiv def
R4776:4777 Top.Equiv <> c1 var
R4742:4745 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4751:4756 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4759:4764 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4767:4769 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4746:4750 Top.Imp <> BTrue constr
R4757:4758 Top.Equiv <> c1 var
R4765:4766 Top.Equiv <> c2 var
R4908:4915 Top.Imp <> E_IfTrue constr
R4908:4915 Top.Imp <> E_IfTrue constr
prf 6817:6824 <> IFB_true
R6862:6871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6872:6877 Top.Equiv <> cequiv def
R6920:6921 Top.Equiv <> c1 var
R6887:6890 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6892:6897 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6900:6905 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6908:6910 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6891:6891 Top.Equiv <> b var
R6898:6899 Top.Equiv <> c1 var
R6906:6907 Top.Equiv <> c2 var
R6848:6853 Top.Equiv <> bequiv def
R6857:6861 Top.Imp <> BTrue constr
R6855:6855 Top.Equiv <> b var
R7120:7125 Top.Equiv <> bequiv def
R7214:7221 Top.Imp <> E_IfTrue constr
R7214:7221 Top.Imp <> E_IfTrue constr
R7251:7256 Top.Equiv <> bequiv def
prf 7378:7386 <> IFB_false
R7422:7428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7429:7434 Top.Equiv <> cequiv def
R7471:7472 Top.Equiv <> c2 var
R7441:7444 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7446:7451 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7454:7459 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7462:7464 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7445:7445 Top.Equiv <> b var
R7452:7453 Top.Equiv <> c1 var
R7460:7461 Top.Equiv <> c2 var
R7407:7412 Top.Equiv <> bequiv def
R7416:7421 Top.Imp <> BFalse constr
R7414:7414 Top.Equiv <> b var
prf 7667:7682 <> swap_if_branches
R7703:7708 Top.Equiv <> cequiv def
R7746:7749 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7756:7761 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7764:7769 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7772:7774 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7750:7753 Top.Imp <> BNot constr
R7755:7755 Top.Equiv <> b var
R7762:7763 Top.Equiv <> e2 var
R7770:7771 Top.Equiv <> e1 var
R7715:7718 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7720:7725 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7728:7733 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7736:7738 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7719:7719 Top.Equiv <> b var
R7726:7727 Top.Equiv <> e1 var
R7734:7735 Top.Equiv <> e2 var
prf 8156:8166 <> WHILE_false
R8199:8204 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8205:8210 Top.Equiv <> cequiv def
R8239:8242 Top.Imp <> :com_scope:'SKIP' not
R8217:8222 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R8224:8227 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R8229:8232 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R8223:8223 Top.Equiv <> b var
R8228:8228 Top.Equiv <> c var
R8184:8189 Top.Equiv <> bequiv def
R8193:8198 Top.Imp <> BFalse constr
R8191:8191 Top.Equiv <> b var
R8360:8365 Top.Imp <> E_Skip constr
R8360:8365 Top.Imp <> E_Skip constr
R8477:8488 Top.Imp <> E_WhileFalse constr
R8477:8488 Top.Imp <> E_WhileFalse constr
prf 9828:9845 <> WHILE_true_nonterm
R9884:9889 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9890:9892 Coq.Init.Logic <> :type_scope:'~'_x not
R9923:9924 Coq.Init.Logic <> :type_scope:'~'_x not
R9893:9893 Top.Imp <> ::x_'/'_x_'\\'_x not
R9910:9913 Top.Imp <> ::x_'/'_x_'\\'_x not
R9916:9919 Top.Imp <> ::x_'/'_x_'\\'_x not
R9894:9899 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R9901:9904 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R9906:9909 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R9900:9900 Top.Equiv <> b var
R9905:9905 Top.Equiv <> c var
R9914:9915 Top.Equiv <> st var
R9920:9922 Top.Equiv <> st' var
R9870:9875 Top.Equiv <> bequiv def
R9879:9883 Top.Imp <> BTrue constr
R9877:9877 Top.Equiv <> b var
R10006:10011 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10013:10016 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10018:10021 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10006:10011 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10013:10016 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10018:10021 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10297:10302 Top.Equiv <> bequiv def
prf 10832:10841 <> WHILE_true
R10871:10877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10878:10883 Top.Equiv <> cequiv def
R10913:10918 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10923:10926 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10931:10934 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10919:10922 Coq.Init.Datatypes <> true constr
R10927:10930 Top.Imp <> :com_scope:'SKIP' not
R10890:10895 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10897:10900 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10902:10905 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10896:10896 Top.Equiv <> b var
R10901:10901 Top.Equiv <> c var
R10858:10863 Top.Equiv <> bequiv def
R10867:10870 Coq.Init.Datatypes <> true constr
R10865:10865 Top.Equiv <> b var
prf 11204:11217 <> loop_unrolling
R11234:11239 Top.Equiv <> cequiv def
R11269:11272 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11274:11280 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11302:11308 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11313:11315 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11273:11273 Top.Equiv <> b var
R11282:11285 Top.Imp <> :com_scope:x_';;'_x not
R11281:11281 Top.Equiv <> c var
R11286:11291 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11293:11296 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11298:11301 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11292:11292 Top.Equiv <> b var
R11297:11297 Top.Equiv <> c var
R11309:11312 Top.Imp <> :com_scope:'SKIP' not
R11246:11251 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11253:11256 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11258:11261 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11252:11252 Top.Equiv <> b var
R11257:11257 Top.Equiv <> c var
R11472:11480 Top.Imp <> E_IfFalse constr
R11472:11480 Top.Imp <> E_IfFalse constr
R11501:11506 Top.Imp <> E_Skip constr
R11501:11506 Top.Imp <> E_Skip constr
R11543:11550 Top.Imp <> E_IfTrue constr
R11543:11550 Top.Imp <> E_IfTrue constr
R11577:11581 Top.Imp <> E_Seq constr
R11577:11581 Top.Imp <> E_Seq constr
R11727:11737 Top.Imp <> E_WhileTrue constr
R11727:11737 Top.Imp <> E_WhileTrue constr
R11863:11874 Top.Imp <> E_WhileFalse constr
R11863:11874 Top.Imp <> E_WhileFalse constr
prf 11957:11965 <> seq_assoc
R11988:11993 Top.Equiv <> cequiv def
R12013:12015 Top.Imp <> :com_scope:x_';;'_x not
R12022:12022 Top.Imp <> :com_scope:x_';;'_x not
R12011:12012 Top.Equiv <> c1 var
R12018:12019 Top.Imp <> :com_scope:x_';;'_x not
R12016:12017 Top.Equiv <> c2 var
R12020:12021 Top.Equiv <> c3 var
R11996:11996 Top.Imp <> :com_scope:x_';;'_x not
R12003:12005 Top.Imp <> :com_scope:x_';;'_x not
R11999:12000 Top.Imp <> :com_scope:x_';;'_x not
R11997:11998 Top.Equiv <> c1 var
R12001:12002 Top.Equiv <> c2 var
R12006:12007 Top.Equiv <> c3 var
prf 12221:12239 <> identity_assignment
R12253:12258 Coq.Strings.String <> string ind
R12264:12269 Top.Equiv <> cequiv def
R12289:12292 Top.Imp <> :com_scope:'SKIP' not
R12277:12281 Top.Imp <> :com_scope:x_'::='_x not
R12276:12276 Top.Equiv <> X var
R12282:12282 Top.Equiv <> X var
R12397:12401 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12403:12407 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12412:12413 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12397:12401 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12403:12407 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12412:12413 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12462:12486 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12462:12486 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12513:12525 Top.Maps <> t_update_same prfax
R12513:12525 Top.Maps <> t_update_same prfax
R12513:12525 Top.Maps <> t_update_same prfax
R12585:12589 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12591:12595 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12607:12608 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12596:12600 Top.Imp <> aeval def
R12585:12589 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12591:12595 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12607:12608 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12596:12600 Top.Imp <> aeval def
R12647:12651 Top.Imp <> E_Ass constr
R12647:12651 Top.Imp <> E_Ass constr
R12682:12706 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12682:12706 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12733:12745 Top.Maps <> t_update_same prfax
R12733:12745 Top.Maps <> t_update_same prfax
R12733:12745 Top.Maps <> t_update_same prfax
prf 12835:12847 <> assign_aequiv
R12861:12866 Coq.Strings.String <> string ind
R12884:12889 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12890:12895 Top.Equiv <> cequiv def
R12904:12908 Top.Imp <> :com_scope:x_'::='_x not
R12903:12903 Top.Equiv <> X var
R12909:12909 Top.Equiv <> e var
R12897:12900 Top.Imp <> :com_scope:'SKIP' not
R12874:12879 Top.Equiv <> aequiv def
R12883:12883 Top.Equiv <> e var
R12881:12881 Top.Equiv <> X var
def 13537:13542 <> prog_a
R13546:13548 Top.Imp <> com ind
R13555:13560 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13571:13578 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13590:13595 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13561:13563 Top.Imp <> :bexp_scope:'!'_x not
R13570:13570 Top.Imp <> :bexp_scope:'!'_x not
R13565:13568 Top.Imp <> :bexp_scope:x_'<='_x not
R13564:13564 Top.Imp <> X def
R13580:13584 Top.Imp <> :com_scope:x_'::='_x not
R13579:13579 Top.Imp <> X def
R13586:13588 Top.Imp <> :aexp_scope:x_'+'_x not
R13585:13585 Top.Imp <> X def
def 13610:13615 <> prog_b
R13619:13621 Top.Imp <> com ind
R13696:13700 Top.Imp <> :com_scope:x_';;'_x not
R13628:13631 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13637:13646 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13672:13683 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13691:13695 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13633:13635 Top.Imp <> :bexp_scope:x_'='_x not
R13632:13632 Top.Imp <> X def
R13658:13664 Top.Imp <> :com_scope:x_';;'_x not
R13648:13652 Top.Imp <> :com_scope:x_'::='_x not
R13647:13647 Top.Imp <> X def
R13654:13656 Top.Imp <> :aexp_scope:x_'+'_x not
R13653:13653 Top.Imp <> X def
R13666:13670 Top.Imp <> :com_scope:x_'::='_x not
R13665:13665 Top.Imp <> Y def
R13685:13689 Top.Imp <> :com_scope:x_'::='_x not
R13684:13684 Top.Imp <> Y def
R13712:13716 Top.Imp <> :com_scope:x_';;'_x not
R13702:13706 Top.Imp <> :com_scope:x_'::='_x not
R13701:13701 Top.Imp <> X def
R13708:13710 Top.Imp <> :aexp_scope:x_'-'_x not
R13707:13707 Top.Imp <> X def
R13711:13711 Top.Imp <> Y def
R13718:13722 Top.Imp <> :com_scope:x_'::='_x not
R13717:13717 Top.Imp <> Y def
def 13738:13743 <> prog_c
R13747:13749 Top.Imp <> com ind
R13756:13759 Top.Imp <> :com_scope:'SKIP' not
def 13774:13779 <> prog_d
R13783:13785 Top.Imp <> com ind
R13792:13797 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13807:13814 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13832:13837 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13798:13800 Top.Imp <> :bexp_scope:'!'_x not
R13806:13806 Top.Imp <> :bexp_scope:'!'_x not
R13802:13804 Top.Imp <> :bexp_scope:x_'='_x not
R13801:13801 Top.Imp <> X def
R13816:13820 Top.Imp <> :com_scope:x_'::='_x not
R13815:13815 Top.Imp <> X def
R13821:13821 Top.Imp <> :aexp_scope:x_'+'_x not
R13827:13830 Top.Imp <> :aexp_scope:x_'+'_x not
R13823:13825 Top.Imp <> :aexp_scope:x_'*'_x not
R13822:13822 Top.Imp <> X def
R13826:13826 Top.Imp <> Y def
def 13852:13857 <> prog_e
R13861:13863 Top.Imp <> com ind
R13871:13875 Top.Imp <> :com_scope:x_'::='_x not
R13870:13870 Top.Imp <> Y def
def 13891:13896 <> prog_f
R13900:13902 Top.Imp <> com ind
R13920:13924 Top.Imp <> :com_scope:x_';;'_x not
R13910:13914 Top.Imp <> :com_scope:x_'::='_x not
R13909:13909 Top.Imp <> Y def
R13916:13918 Top.Imp <> :aexp_scope:x_'+'_x not
R13915:13915 Top.Imp <> X def
R13925:13930 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13940:13947 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13959:13964 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13931:13933 Top.Imp <> :bexp_scope:'!'_x not
R13939:13939 Top.Imp <> :bexp_scope:'!'_x not
R13935:13937 Top.Imp <> :bexp_scope:x_'='_x not
R13934:13934 Top.Imp <> X def
R13938:13938 Top.Imp <> Y def
R13949:13953 Top.Imp <> :com_scope:x_'::='_x not
R13948:13948 Top.Imp <> Y def
R13955:13957 Top.Imp <> :aexp_scope:x_'+'_x not
R13954:13954 Top.Imp <> X def
def 13979:13984 <> prog_g
R13988:13990 Top.Imp <> com ind
R13997:14002 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14007:14014 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14019:14024 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14003:14006 Coq.Init.Datatypes <> true constr
R14015:14018 Top.Imp <> :com_scope:'SKIP' not
def 14039:14044 <> prog_h
R14048:14050 Top.Imp <> com ind
R14057:14062 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14072:14079 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14091:14096 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14063:14065 Top.Imp <> :bexp_scope:'!'_x not
R14071:14071 Top.Imp <> :bexp_scope:'!'_x not
R14067:14069 Top.Imp <> :bexp_scope:x_'='_x not
R14066:14066 Top.Imp <> X def
R14070:14070 Top.Imp <> X def
R14081:14085 Top.Imp <> :com_scope:x_'::='_x not
R14080:14080 Top.Imp <> X def
R14087:14089 Top.Imp <> :aexp_scope:x_'+'_x not
R14086:14086 Top.Imp <> X def
def 14111:14116 <> prog_i
R14120:14122 Top.Imp <> com ind
R14129:14134 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14144:14151 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14163:14168 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14135:14137 Top.Imp <> :bexp_scope:'!'_x not
R14143:14143 Top.Imp <> :bexp_scope:'!'_x not
R14139:14141 Top.Imp <> :bexp_scope:x_'='_x not
R14138:14138 Top.Imp <> X def
R14142:14142 Top.Imp <> Y def
R14153:14157 Top.Imp <> :com_scope:x_'::='_x not
R14152:14152 Top.Imp <> X def
R14159:14161 Top.Imp <> :aexp_scope:x_'+'_x not
R14158:14158 Top.Imp <> Y def
def 14183:14195 <> equiv_classes
R14199:14202 Coq.Init.Datatypes <> list ind
R14205:14208 Coq.Init.Datatypes <> list ind
R14210:14212 Top.Imp <> com ind
prf 14823:14833 <> refl_aequiv
R14849:14852 Top.Imp <> aexp ind
R14856:14861 Top.Equiv <> aequiv def
R14865:14865 Top.Equiv <> a var
R14863:14863 Top.Equiv <> a var
prf 14916:14925 <> sym_aequiv
R14945:14948 Top.Imp <> aexp ind
R14966:14969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14970:14975 Top.Equiv <> aequiv def
R14980:14981 Top.Equiv <> a1 var
R14977:14978 Top.Equiv <> a2 var
R14954:14959 Top.Equiv <> aequiv def
R14964:14965 Top.Equiv <> a2 var
R14961:14962 Top.Equiv <> a1 var
prf 15052:15063 <> trans_aequiv
R15086:15089 Top.Imp <> aexp ind
R15107:15110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15123:15126 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15127:15132 Top.Equiv <> aequiv def
R15137:15138 Top.Equiv <> a3 var
R15134:15135 Top.Equiv <> a1 var
R15111:15116 Top.Equiv <> aequiv def
R15121:15122 Top.Equiv <> a3 var
R15118:15119 Top.Equiv <> a2 var
R15095:15100 Top.Equiv <> aequiv def
R15105:15106 Top.Equiv <> a2 var
R15102:15103 Top.Equiv <> a1 var
R15157:15162 Top.Equiv <> aequiv def
prf 15257:15267 <> refl_bequiv
R15283:15286 Top.Imp <> bexp ind
R15290:15295 Top.Equiv <> bequiv def
R15299:15299 Top.Equiv <> b var
R15297:15297 Top.Equiv <> b var
R15318:15323 Top.Equiv <> bequiv def
prf 15365:15374 <> sym_bequiv
R15394:15397 Top.Imp <> bexp ind
R15415:15418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15419:15424 Top.Equiv <> bequiv def
R15429:15430 Top.Equiv <> b1 var
R15426:15427 Top.Equiv <> b2 var
R15403:15408 Top.Equiv <> bequiv def
R15413:15414 Top.Equiv <> b2 var
R15410:15411 Top.Equiv <> b1 var
R15449:15454 Top.Equiv <> bequiv def
prf 15516:15527 <> trans_bequiv
R15550:15553 Top.Imp <> bexp ind
R15571:15574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15587:15590 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15591:15596 Top.Equiv <> bequiv def
R15601:15602 Top.Equiv <> b3 var
R15598:15599 Top.Equiv <> b1 var
R15575:15580 Top.Equiv <> bequiv def
R15585:15586 Top.Equiv <> b3 var
R15582:15583 Top.Equiv <> b2 var
R15559:15564 Top.Equiv <> bequiv def
R15569:15570 Top.Equiv <> b2 var
R15566:15567 Top.Equiv <> b1 var
R15621:15626 Top.Equiv <> bequiv def
prf 15721:15731 <> refl_cequiv
R15747:15749 Top.Imp <> com ind
R15753:15758 Top.Equiv <> cequiv def
R15762:15762 Top.Equiv <> c var
R15760:15760 Top.Equiv <> c var
R15781:15786 Top.Equiv <> cequiv def
R15812:15819 Coq.Init.Logic <> iff_refl thm
R15812:15819 Coq.Init.Logic <> iff_refl thm
prf 15835:15844 <> sym_cequiv
R15864:15866 Top.Imp <> com ind
R15884:15887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15888:15893 Top.Equiv <> cequiv def
R15898:15899 Top.Equiv <> c1 var
R15895:15896 Top.Equiv <> c2 var
R15872:15877 Top.Equiv <> cequiv def
R15882:15883 Top.Equiv <> c2 var
R15879:15880 Top.Equiv <> c1 var
R15918:15923 Top.Equiv <> cequiv def
R15973:15977 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15961:15963 Top.Imp <> ::x_'/'_x_'\\'_x not
R15966:15969 Top.Imp <> ::x_'/'_x_'\\'_x not
R15980:15982 Top.Imp <> ::x_'/'_x_'\\'_x not
R15985:15988 Top.Imp <> ::x_'/'_x_'\\'_x not
R15973:15977 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15961:15963 Top.Imp <> ::x_'/'_x_'\\'_x not
R15966:15969 Top.Imp <> ::x_'/'_x_'\\'_x not
R15980:15982 Top.Imp <> ::x_'/'_x_'\\'_x not
R15985:15988 Top.Imp <> ::x_'/'_x_'\\'_x not
R16049:16055 Coq.Init.Logic <> iff_sym thm
R16049:16055 Coq.Init.Logic <> iff_sym thm
prf 16082:16090 <> iff_trans
R16122:16122 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16132:16136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16137:16137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16147:16152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16162:16162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16155:16159 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16153:16154 Top.Equiv <> P1 var
R16160:16161 Top.Equiv <> P3 var
R16140:16144 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16138:16139 Top.Equiv <> P2 var
R16145:16146 Top.Equiv <> P3 var
R16125:16129 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16123:16124 Top.Equiv <> P1 var
R16130:16131 Top.Equiv <> P2 var
prf 16328:16339 <> trans_cequiv
R16362:16364 Top.Imp <> com ind
R16382:16385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16398:16401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16402:16407 Top.Equiv <> cequiv def
R16412:16413 Top.Equiv <> c3 var
R16409:16410 Top.Equiv <> c1 var
R16386:16391 Top.Equiv <> cequiv def
R16396:16397 Top.Equiv <> c3 var
R16393:16394 Top.Equiv <> c2 var
R16370:16375 Top.Equiv <> cequiv def
R16380:16381 Top.Equiv <> c2 var
R16377:16378 Top.Equiv <> c1 var
R16432:16437 Top.Equiv <> cequiv def
R16498:16500 Top.Imp <> ::x_'/'_x_'\\'_x not
R16503:16506 Top.Imp <> ::x_'/'_x_'\\'_x not
R16480:16488 Top.Equiv <> iff_trans thm
R16498:16500 Top.Imp <> ::x_'/'_x_'\\'_x not
R16503:16506 Top.Imp <> ::x_'/'_x_'\\'_x not
R16480:16488 Top.Equiv <> iff_trans thm
prf 17903:17917 <> CAss_congruence
R17953:17958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17959:17964 Top.Equiv <> cequiv def
R17979:17982 Top.Imp <> CAss constr
R17986:17988 Top.Equiv <> a1' var
R17984:17984 Top.Equiv <> i var
R17967:17970 Top.Imp <> CAss constr
R17974:17975 Top.Equiv <> a1 var
R17972:17972 Top.Equiv <> i var
R17940:17945 Top.Equiv <> aequiv def
R17950:17952 Top.Equiv <> a1' var
R17947:17948 Top.Equiv <> a1 var
R18101:18105 Top.Imp <> E_Ass constr
R18101:18105 Top.Imp <> E_Ass constr
R18187:18191 Top.Imp <> E_Ass constr
R18187:18191 Top.Imp <> E_Ass constr
prf 20049:20065 <> CWhile_congruence
R20106:20109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20123:20128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20129:20134 Top.Equiv <> cequiv def
R20158:20163 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20167:20170 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20174:20177 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20164:20166 Top.Equiv <> b1' var
R20171:20173 Top.Equiv <> c1' var
R20137:20142 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20145:20148 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20151:20154 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20143:20144 Top.Equiv <> b1 var
R20149:20150 Top.Equiv <> c1 var
R20110:20115 Top.Equiv <> cequiv def
R20120:20122 Top.Equiv <> c1' var
R20117:20118 Top.Equiv <> c1 var
R20093:20098 Top.Equiv <> bequiv def
R20103:20105 Top.Equiv <> b1' var
R20100:20101 Top.Equiv <> b1 var
R20221:20226 Top.Equiv <> bequiv def
R20228:20233 Top.Equiv <> cequiv def
R20325:20330 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20333:20336 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20339:20342 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20325:20330 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20333:20336 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20339:20342 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20460:20471 Top.Imp <> E_WhileFalse constr
R20460:20471 Top.Imp <> E_WhileFalse constr
R20536:20546 Top.Imp <> E_WhileTrue constr
R20536:20546 Top.Imp <> E_WhileTrue constr
R20795:20800 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20804:20807 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20811:20814 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20795:20800 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20804:20807 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20811:20814 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20935:20946 Top.Imp <> E_WhileFalse constr
R20935:20946 Top.Imp <> E_WhileFalse constr
R21011:21021 Top.Imp <> E_WhileTrue constr
R21011:21021 Top.Imp <> E_WhileTrue constr
prf 21317:21331 <> CSeq_congruence
R21372:21375 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21389:21394 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21395:21400 Top.Equiv <> cequiv def
R21415:21416 Top.Imp <> :com_scope:x_';;'_x not
R21412:21414 Top.Equiv <> c1' var
R21417:21419 Top.Equiv <> c2' var
R21405:21406 Top.Imp <> :com_scope:x_';;'_x not
R21403:21404 Top.Equiv <> c1 var
R21407:21408 Top.Equiv <> c2 var
R21376:21381 Top.Equiv <> cequiv def
R21386:21388 Top.Equiv <> c2' var
R21383:21384 Top.Equiv <> c2 var
R21359:21364 Top.Equiv <> cequiv def
R21369:21371 Top.Equiv <> c1' var
R21366:21367 Top.Equiv <> c1 var
prf 21528:21541 <> CIf_congruence
R21585:21588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21602:21605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21619:21624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21625:21630 Top.Equiv <> cequiv def
R21669:21672 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21675:21680 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21684:21689 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21693:21695 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21673:21674 Top.Equiv <> b' var
R21681:21683 Top.Equiv <> c1' var
R21690:21692 Top.Equiv <> c2' var
R21633:21636 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21638:21643 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21646:21651 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21654:21656 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21637:21637 Top.Equiv <> b var
R21644:21645 Top.Equiv <> c1 var
R21652:21653 Top.Equiv <> c2 var
R21606:21611 Top.Equiv <> cequiv def
R21616:21618 Top.Equiv <> c2' var
R21613:21614 Top.Equiv <> c2 var
R21589:21594 Top.Equiv <> cequiv def
R21599:21601 Top.Equiv <> c1' var
R21596:21597 Top.Equiv <> c1 var
R21574:21579 Top.Equiv <> bequiv def
R21583:21584 Top.Equiv <> b' var
R21581:21581 Top.Equiv <> b var
def 21850:21867 <> congruence_example
R21872:21877 Top.Equiv <> cequiv def
R22023:22030 Top.Imp <> :com_scope:x_';;'_x not
R22017:22021 Top.Imp <> :com_scope:x_'::='_x not
R22016:22016 Top.Imp <> X def
R22031:22034 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22040:22057 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22069:22112 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22121:22128 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22036:22038 Top.Imp <> :bexp_scope:x_'='_x not
R22035:22035 Top.Imp <> X def
R22059:22063 Top.Imp <> :com_scope:x_'::='_x not
R22058:22058 Top.Imp <> Y def
R22065:22067 Top.Imp <> :aexp_scope:x_'-'_x not
R22064:22064 Top.Imp <> X def
R22068:22068 Top.Imp <> X def
R22114:22118 Top.Imp <> :com_scope:x_'::='_x not
R22113:22113 Top.Imp <> Y def
R21912:21919 Top.Imp <> :com_scope:x_';;'_x not
R21906:21910 Top.Imp <> :com_scope:x_'::='_x not
R21905:21905 Top.Imp <> X def
R21920:21923 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21929:21946 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21954:21971 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21980:21987 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21925:21927 Top.Imp <> :bexp_scope:x_'='_x not
R21924:21924 Top.Imp <> X def
R21948:21952 Top.Imp <> :com_scope:x_'::='_x not
R21947:21947 Top.Imp <> Y def
R21973:21977 Top.Imp <> :com_scope:x_'::='_x not
R21972:21972 Top.Imp <> Y def
R22147:22161 Top.Equiv <> CSeq_congruence prfax
R22147:22161 Top.Equiv <> CSeq_congruence prfax
R22174:22184 Top.Equiv <> refl_cequiv thm
R22174:22184 Top.Equiv <> refl_cequiv thm
R22197:22210 Top.Equiv <> CIf_congruence prfax
R22197:22210 Top.Equiv <> CIf_congruence prfax
R22225:22235 Top.Equiv <> refl_bequiv thm
R22225:22235 Top.Equiv <> refl_bequiv thm
R22250:22264 Top.Equiv <> CAss_congruence thm
R22250:22264 Top.Equiv <> CAss_congruence thm
R22274:22279 Top.Equiv <> aequiv def
R22313:22322 Coq.Arith.Minus <> minus_diag syndef
R22313:22322 Coq.Arith.Minus <> minus_diag syndef
R22337:22347 Top.Equiv <> refl_cequiv thm
R22337:22347 Top.Equiv <> refl_cequiv thm
def 23107:23118 <> atrans_sound
R23134:23137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23138:23141 Top.Imp <> aexp ind
R23130:23133 Top.Imp <> aexp ind
R23168:23171 Top.Imp <> aexp ind
R23179:23184 Top.Equiv <> aequiv def
R23189:23194 Top.Equiv <> atrans var
R23196:23196 Top.Equiv <> a var
R23186:23186 Top.Equiv <> a var
def 23212:23223 <> btrans_sound
R23239:23242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23243:23246 Top.Imp <> bexp ind
R23235:23238 Top.Imp <> bexp ind
R23273:23276 Top.Imp <> bexp ind
R23284:23289 Top.Equiv <> bequiv def
R23294:23299 Top.Equiv <> btrans var
R23301:23301 Top.Equiv <> b var
R23291:23291 Top.Equiv <> b var
def 23317:23328 <> ctrans_sound
R23343:23346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23347:23349 Top.Imp <> com ind
R23340:23342 Top.Imp <> com ind
R23376:23378 Top.Imp <> com ind
R23386:23391 Top.Equiv <> cequiv def
R23396:23401 Top.Equiv <> ctrans var
R23403:23403 Top.Equiv <> c var
R23393:23393 Top.Equiv <> c var
def 23729:23747 <> fold_constants_aexp
R23754:23757 Top.Imp <> aexp ind
R23762:23765 Top.Imp <> aexp ind
R23778:23778 Top.Equiv <> a var
R23789:23792 Top.Imp <> ANum constr
R23805:23808 Top.Imp <> ANum constr
R23816:23818 Top.Imp <> AId constr
R23832:23834 Top.Imp <> AId constr
R23842:23846 Top.Imp <> APlus constr
R23868:23868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23891:23892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23915:23915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23869:23887 Top.Equiv <> fold_constants_aexp def
R23893:23911 Top.Equiv <> fold_constants_aexp def
R23932:23932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23940:23941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23949:23949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23933:23936 Top.Imp <> ANum constr
R23942:23945 Top.Imp <> ANum constr
R23954:23957 Top.Imp <> ANum constr
R23962:23964 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23975:23975 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23979:23980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23984:23984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23989:23993 Top.Imp <> APlus constr
R24015:24020 Top.Imp <> AMinus constr
R24041:24041 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24064:24065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24088:24088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24042:24060 Top.Equiv <> fold_constants_aexp def
R24066:24084 Top.Equiv <> fold_constants_aexp def
R24105:24105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24113:24114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24122:24122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24106:24109 Top.Imp <> ANum constr
R24115:24118 Top.Imp <> ANum constr
R24127:24130 Top.Imp <> ANum constr
R24135:24137 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R24148:24148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24152:24153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24157:24157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24162:24167 Top.Imp <> AMinus constr
R24189:24193 Top.Imp <> AMult constr
R24215:24215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24238:24239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24262:24262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24216:24234 Top.Equiv <> fold_constants_aexp def
R24240:24258 Top.Equiv <> fold_constants_aexp def
R24279:24279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24287:24288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24296:24296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24280:24283 Top.Imp <> ANum constr
R24289:24292 Top.Imp <> ANum constr
R24301:24304 Top.Imp <> ANum constr
R24309:24311 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24322:24322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24326:24327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24331:24331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24336:24340 Top.Imp <> AMult constr
def 24477:24489 <> fold_aexp_ex1
R24530:24533 Coq.Init.Logic <> :type_scope:x_'='_x not
R24539:24539 Coq.Init.Logic <> :type_scope:x_'='_x not
R24497:24515 Top.Equiv <> fold_constants_aexp def
R24518:24518 Top.Imp <> :aexp_scope:x_'*'_x not
R24524:24527 Top.Imp <> :aexp_scope:x_'*'_x not
R24520:24522 Top.Imp <> :aexp_scope:x_'+'_x not
R24528:24528 Top.Imp <> X def
R24535:24537 Top.Imp <> :aexp_scope:x_'*'_x not
R24538:24538 Top.Imp <> X def
def 24881:24893 <> fold_aexp_ex2
R24938:24941 Coq.Init.Logic <> :type_scope:x_'='_x not
R24953:24953 Coq.Init.Logic <> :type_scope:x_'='_x not
R24899:24917 Top.Equiv <> fold_constants_aexp def
R24921:24924 Top.Imp <> :aexp_scope:x_'-'_x not
R24936:24936 Top.Imp <> :aexp_scope:x_'-'_x not
R24920:24920 Top.Imp <> X def
R24925:24925 Top.Imp <> :aexp_scope:x_'+'_x not
R24931:24934 Top.Imp <> :aexp_scope:x_'+'_x not
R24927:24929 Top.Imp <> :aexp_scope:x_'*'_x not
R24935:24935 Top.Imp <> Y def
R24943:24946 Top.Imp <> :aexp_scope:x_'-'_x not
R24952:24952 Top.Imp <> :aexp_scope:x_'-'_x not
R24942:24942 Top.Imp <> X def
R24948:24950 Top.Imp <> :aexp_scope:x_'+'_x not
R24951:24951 Top.Imp <> Y def
def 25173:25191 <> fold_constants_bexp
R25198:25201 Top.Imp <> bexp ind
R25206:25209 Top.Imp <> bexp ind
R25222:25222 Top.Equiv <> b var
R25233:25237 Top.Imp <> BTrue constr
R25249:25253 Top.Imp <> BTrue constr
R25259:25264 Top.Imp <> BFalse constr
R25275:25280 Top.Imp <> BFalse constr
R25286:25288 Top.Imp <> BEq constr
R25312:25312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25335:25336 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25359:25359 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25313:25331 Top.Equiv <> fold_constants_aexp def
R25337:25355 Top.Equiv <> fold_constants_aexp def
R25374:25374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25382:25383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25391:25391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25375:25378 Top.Imp <> ANum constr
R25384:25387 Top.Imp <> ANum constr
R25409:25415 Coq.Arith.EqNat <> beq_nat syndef
R25439:25444 Top.Imp <> BFalse constr
R25428:25432 Top.Imp <> BTrue constr
R25454:25454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25458:25459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25463:25463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25478:25480 Top.Imp <> BEq constr
R25504:25506 Top.Imp <> BLe constr
R25530:25530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25553:25554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25577:25577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25531:25549 Top.Equiv <> fold_constants_aexp def
R25555:25573 Top.Equiv <> fold_constants_aexp def
R25592:25592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25600:25601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25609:25609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25593:25596 Top.Imp <> ANum constr
R25602:25605 Top.Imp <> ANum constr
R25627:25629 Coq.Arith.Compare_dec <> leb syndef
R25653:25658 Top.Imp <> BFalse constr
R25642:25646 Top.Imp <> BTrue constr
R25668:25668 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25672:25673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25677:25677 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25692:25694 Top.Imp <> BLe constr
R25718:25721 Top.Imp <> BNot constr
R25743:25761 Top.Equiv <> fold_constants_bexp def
R25780:25784 Top.Imp <> BTrue constr
R25789:25794 Top.Imp <> BFalse constr
R25804:25809 Top.Imp <> BFalse constr
R25814:25818 Top.Imp <> BTrue constr
R25835:25838 Top.Imp <> BNot constr
R25858:25861 Top.Imp <> BAnd constr
R25885:25885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25908:25909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25932:25932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25886:25904 Top.Equiv <> fold_constants_bexp def
R25910:25928 Top.Equiv <> fold_constants_bexp def
R25947:25947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25953:25954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25960:25960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25948:25952 Top.Imp <> BTrue constr
R25955:25959 Top.Imp <> BTrue constr
R25965:25969 Top.Imp <> BTrue constr
R25979:25979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25985:25986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25993:25993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25980:25984 Top.Imp <> BTrue constr
R25987:25992 Top.Imp <> BFalse constr
R25998:26003 Top.Imp <> BFalse constr
R26013:26013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26020:26021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26027:26027 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26014:26019 Top.Imp <> BFalse constr
R26022:26026 Top.Imp <> BTrue constr
R26032:26037 Top.Imp <> BFalse constr
R26047:26047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26054:26055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26062:26062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26048:26053 Top.Imp <> BFalse constr
R26056:26061 Top.Imp <> BFalse constr
R26067:26072 Top.Imp <> BFalse constr
R26082:26082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26086:26087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26091:26091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26096:26099 Top.Imp <> BAnd constr
def 26135:26147 <> fold_bexp_ex1
R26200:26202 Coq.Init.Logic <> :type_scope:x_'='_x not
R26153:26171 Top.Equiv <> fold_constants_bexp def
R26178:26181 Top.Imp <> :bexp_scope:x_'&&'_x not
R26174:26177 Coq.Init.Datatypes <> true constr
R26182:26184 Top.Imp <> :bexp_scope:'!'_x not
R26198:26198 Top.Imp <> :bexp_scope:'!'_x not
R26190:26193 Top.Imp <> :bexp_scope:x_'&&'_x not
R26185:26189 Coq.Init.Datatypes <> false constr
R26194:26197 Coq.Init.Datatypes <> true constr
R26203:26206 Coq.Init.Datatypes <> true constr
def 26243:26255 <> fold_bexp_ex2
R26313:26318 Coq.Init.Logic <> :type_scope:x_'='_x not
R26334:26334 Coq.Init.Logic <> :type_scope:x_'='_x not
R26261:26279 Top.Equiv <> fold_constants_bexp def
R26282:26282 Top.Imp <> :bexp_scope:x_'&&'_x not
R26288:26293 Top.Imp <> :bexp_scope:x_'&&'_x not
R26311:26311 Top.Imp <> :bexp_scope:x_'&&'_x not
R26284:26286 Top.Imp <> :bexp_scope:x_'='_x not
R26283:26283 Top.Imp <> X def
R26287:26287 Top.Imp <> Y def
R26295:26298 Top.Imp <> :bexp_scope:x_'='_x not
R26310:26310 Top.Imp <> :bexp_scope:x_'='_x not
R26300:26303 Top.Imp <> :aexp_scope:x_'-'_x not
R26309:26309 Top.Imp <> :aexp_scope:x_'-'_x not
R26305:26307 Top.Imp <> :aexp_scope:x_'+'_x not
R26319:26319 Top.Imp <> :bexp_scope:x_'&&'_x not
R26325:26329 Top.Imp <> :bexp_scope:x_'&&'_x not
R26321:26323 Top.Imp <> :bexp_scope:x_'='_x not
R26320:26320 Top.Imp <> X def
R26324:26324 Top.Imp <> Y def
R26330:26333 Coq.Init.Datatypes <> true constr
def 26488:26505 <> fold_constants_com
R26512:26514 Top.Imp <> com ind
R26519:26521 Top.Imp <> com ind
R26534:26534 Top.Equiv <> c var
R26545:26548 Top.Imp <> :com_scope:'SKIP' not
R26564:26567 Top.Imp <> :com_scope:'SKIP' not
R26574:26578 Top.Imp <> :com_scope:x_'::='_x not
R26591:26594 Top.Imp <> CAss constr
R26599:26617 Top.Equiv <> fold_constants_aexp def
R26628:26631 Top.Imp <> :com_scope:x_';;'_x not
R26645:26645 Top.Imp <> :com_scope:x_';;'_x not
R26667:26672 Top.Imp <> :com_scope:x_';;'_x not
R26694:26694 Top.Imp <> :com_scope:x_';;'_x not
R26646:26663 Top.Equiv <> fold_constants_com def
R26673:26690 Top.Equiv <> fold_constants_com def
R26700:26703 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26705:26710 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26713:26718 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26721:26723 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26740:26758 Top.Equiv <> fold_constants_bexp def
R26775:26779 Top.Imp <> BTrue constr
R26784:26801 Top.Equiv <> fold_constants_com def
R26814:26819 Top.Imp <> BFalse constr
R26824:26841 Top.Equiv <> fold_constants_com def
R26860:26863 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26866:26871 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26893:26919 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26941:26943 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26872:26889 Top.Equiv <> fold_constants_com def
R26920:26937 Top.Equiv <> fold_constants_com def
R26959:26964 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R26966:26969 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R26971:26974 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R26991:27009 Top.Equiv <> fold_constants_bexp def
R27026:27030 Top.Imp <> BTrue constr
R27035:27040 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27046:27049 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27054:27057 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27041:27045 Top.Imp <> BTrue constr
R27050:27053 Top.Imp <> :com_scope:'SKIP' not
R27067:27072 Top.Imp <> BFalse constr
R27077:27080 Top.Imp <> :com_scope:'SKIP' not
R27096:27101 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27104:27108 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27129:27133 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27109:27126 Top.Equiv <> fold_constants_com def
R27128:27128 Top.Equiv <> c var
def 27161:27172 <> fold_com_ex1
R27475:27514 Coq.Init.Logic <> :type_scope:x_'='_x not
R27680:27680 Coq.Init.Logic <> :type_scope:x_'='_x not
R27178:27195 Top.Equiv <> fold_constants_com def
R27241:27248 Top.Imp <> :com_scope:x_';;'_x not
R27231:27235 Top.Imp <> :com_scope:x_'::='_x not
R27230:27230 Top.Imp <> X def
R27237:27239 Top.Imp <> :aexp_scope:x_'+'_x not
R27260:27267 Top.Imp <> :com_scope:x_';;'_x not
R27250:27254 Top.Imp <> :com_scope:x_'::='_x not
R27249:27249 Top.Imp <> Y def
R27256:27258 Top.Imp <> :aexp_scope:x_'-'_x not
R27255:27255 Top.Imp <> X def
R27339:27346 Top.Imp <> :com_scope:x_';;'_x not
R27268:27271 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27289:27301 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27306:27323 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27331:27338 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27272:27272 Top.Imp <> :bexp_scope:x_'='_x not
R27278:27282 Top.Imp <> :bexp_scope:x_'='_x not
R27288:27288 Top.Imp <> :bexp_scope:x_'='_x not
R27274:27276 Top.Imp <> :aexp_scope:x_'-'_x not
R27273:27273 Top.Imp <> X def
R27277:27277 Top.Imp <> Y def
R27284:27286 Top.Imp <> :aexp_scope:x_'+'_x not
R27302:27305 Top.Imp <> :com_scope:'SKIP' not
R27325:27329 Top.Imp <> :com_scope:x_'::='_x not
R27324:27324 Top.Imp <> Y def
R27424:27431 Top.Imp <> :com_scope:x_';;'_x not
R27347:27350 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27369:27386 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27394:27411 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27416:27423 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27352:27356 Top.Imp <> :bexp_scope:x_'<='_x not
R27368:27368 Top.Imp <> :bexp_scope:x_'<='_x not
R27358:27361 Top.Imp <> :aexp_scope:x_'-'_x not
R27367:27367 Top.Imp <> :aexp_scope:x_'-'_x not
R27363:27365 Top.Imp <> :aexp_scope:x_'+'_x not
R27388:27392 Top.Imp <> :com_scope:x_'::='_x not
R27387:27387 Top.Imp <> Y def
R27412:27415 Top.Imp <> :com_scope:'SKIP' not
R27432:27437 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27443:27453 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27465:27473 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27439:27441 Top.Imp <> :bexp_scope:x_'='_x not
R27438:27438 Top.Imp <> Y def
R27455:27459 Top.Imp <> :com_scope:x_'::='_x not
R27454:27454 Top.Imp <> X def
R27461:27463 Top.Imp <> :aexp_scope:x_'+'_x not
R27460:27460 Top.Imp <> X def
R27522:27529 Top.Imp <> :com_scope:x_';;'_x not
R27516:27520 Top.Imp <> :com_scope:x_'::='_x not
R27515:27515 Top.Imp <> X def
R27541:27548 Top.Imp <> :com_scope:x_';;'_x not
R27531:27535 Top.Imp <> :com_scope:x_'::='_x not
R27530:27530 Top.Imp <> Y def
R27537:27539 Top.Imp <> :aexp_scope:x_'-'_x not
R27536:27536 Top.Imp <> X def
R27614:27621 Top.Imp <> :com_scope:x_';;'_x not
R27549:27552 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27564:27576 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27581:27598 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27606:27613 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27553:27553 Top.Imp <> :bexp_scope:x_'='_x not
R27559:27562 Top.Imp <> :bexp_scope:x_'='_x not
R27555:27557 Top.Imp <> :aexp_scope:x_'-'_x not
R27554:27554 Top.Imp <> X def
R27558:27558 Top.Imp <> Y def
R27577:27580 Top.Imp <> :com_scope:'SKIP' not
R27600:27604 Top.Imp <> :com_scope:x_'::='_x not
R27599:27599 Top.Imp <> Y def
R27629:27636 Top.Imp <> :com_scope:x_';;'_x not
R27623:27627 Top.Imp <> :com_scope:x_'::='_x not
R27622:27622 Top.Imp <> Y def
R27637:27642 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27648:27658 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27670:27679 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27644:27646 Top.Imp <> :bexp_scope:x_'='_x not
R27643:27643 Top.Imp <> Y def
R27660:27664 Top.Imp <> :com_scope:x_'::='_x not
R27659:27659 Top.Imp <> X def
R27666:27668 Top.Imp <> :aexp_scope:x_'+'_x not
R27665:27665 Top.Imp <> X def
prf 27944:27968 <> fold_constants_aexp_sound
R27974:27985 Top.Equiv <> atrans_sound def
R27987:28005 Top.Equiv <> fold_constants_aexp def
R28024:28035 Top.Equiv <> atrans_sound def
R28055:28060 Top.Equiv <> aequiv def
R28469:28487 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28469:28487 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28469:28487 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28469:28487 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
R28513:28531 Top.Equiv <> fold_constants_aexp def
prf 31475:31499 <> fold_constants_bexp_sound
R31504:31515 Top.Equiv <> btrans_sound def
R31517:31535 Top.Equiv <> fold_constants_bexp def
R31554:31565 Top.Equiv <> btrans_sound def
R31585:31590 Top.Equiv <> bequiv def
R32069:32087 Top.Equiv <> fold_constants_aexp def
R32069:32087 Top.Equiv <> fold_constants_aexp def
R32126:32144 Top.Equiv <> fold_constants_aexp def
R32126:32144 Top.Equiv <> fold_constants_aexp def
R32182:32186 Top.Imp <> aeval def
R32201:32205 Top.Imp <> aeval def
R32248:32272 Top.Equiv <> fold_constants_aexp_sound thm
R32182:32186 Top.Imp <> aeval def
R32201:32205 Top.Imp <> aeval def
R32248:32272 Top.Equiv <> fold_constants_aexp_sound thm
R32248:32272 Top.Equiv <> fold_constants_aexp_sound thm
R32302:32306 Top.Imp <> aeval def
R32321:32325 Top.Imp <> aeval def
R32368:32392 Top.Equiv <> fold_constants_aexp_sound thm
R32302:32306 Top.Imp <> aeval def
R32321:32325 Top.Imp <> aeval def
R32368:32392 Top.Equiv <> fold_constants_aexp_sound thm
R32368:32392 Top.Equiv <> fold_constants_aexp_sound thm
R32579:32585 Coq.Arith.EqNat <> beq_nat syndef
R32579:32585 Coq.Arith.EqNat <> beq_nat syndef
R32687:32705 Top.Equiv <> fold_constants_bexp def
R32687:32705 Top.Equiv <> fold_constants_bexp def
R32814:32832 Top.Equiv <> fold_constants_bexp def
R32814:32832 Top.Equiv <> fold_constants_bexp def
R32871:32889 Top.Equiv <> fold_constants_bexp def
R32871:32889 Top.Equiv <> fold_constants_bexp def
prf 33155:33178 <> fold_constants_com_sound
R33184:33195 Top.Equiv <> ctrans_sound def
R33197:33214 Top.Equiv <> fold_constants_com def
R33233:33244 Top.Equiv <> ctrans_sound def
R33300:33310 Top.Equiv <> refl_cequiv thm
R33300:33310 Top.Equiv <> refl_cequiv thm
R33333:33347 Top.Equiv <> CAss_congruence thm
R33333:33347 Top.Equiv <> CAss_congruence thm
R33370:33394 Top.Equiv <> fold_constants_aexp_sound thm
R33370:33394 Top.Equiv <> fold_constants_aexp_sound thm
R33416:33430 Top.Equiv <> CSeq_congruence prfax
R33416:33430 Top.Equiv <> CSeq_congruence prfax
R33471:33476 Top.Equiv <> bequiv def
R33481:33499 Top.Equiv <> fold_constants_bexp def
R33471:33476 Top.Equiv <> bequiv def
R33481:33499 Top.Equiv <> fold_constants_bexp def
R33520:33544 Top.Equiv <> fold_constants_bexp_sound prfax
R33520:33544 Top.Equiv <> fold_constants_bexp_sound prfax
R33563:33581 Top.Equiv <> fold_constants_bexp def
R33613:33626 Top.Equiv <> CIf_congruence prfax
R33563:33581 Top.Equiv <> fold_constants_bexp def
R33613:33626 Top.Equiv <> CIf_congruence prfax
R33613:33626 Top.Equiv <> CIf_congruence prfax
R33613:33626 Top.Equiv <> CIf_congruence prfax
R33613:33626 Top.Equiv <> CIf_congruence prfax
R33613:33626 Top.Equiv <> CIf_congruence prfax
R33613:33626 Top.Equiv <> CIf_congruence prfax
R33838:33849 Top.Equiv <> trans_cequiv thm
R33838:33849 Top.Equiv <> trans_cequiv thm
R33888:33895 Top.Equiv <> IFB_true thm
R33888:33895 Top.Equiv <> IFB_true thm
R33949:33960 Top.Equiv <> trans_cequiv thm
R33949:33960 Top.Equiv <> trans_cequiv thm
R33999:34007 Top.Equiv <> IFB_false prfax
R33999:34007 Top.Equiv <> IFB_false prfax
def 36482:36491 <> subst_aexp
R36498:36503 Coq.Strings.String <> string ind
R36511:36514 Top.Imp <> aexp ind
R36522:36525 Top.Imp <> aexp ind
R36530:36533 Top.Imp <> aexp ind
R36546:36546 Top.Equiv <> a var
R36557:36560 Top.Imp <> ANum constr
R36579:36582 Top.Imp <> ANum constr
R36590:36592 Top.Imp <> AId constr
R36615:36624 Top.Maps <> beq_string def
R36626:36626 Top.Equiv <> i var
R36643:36645 Top.Imp <> AId constr
R36636:36636 Top.Equiv <> u var
R36654:36658 Top.Imp <> APlus constr
R36676:36680 Top.Imp <> APlus constr
R36703:36712 Top.Equiv <> subst_aexp def
R36716:36716 Top.Equiv <> u var
R36714:36714 Top.Equiv <> i var
R36683:36692 Top.Equiv <> subst_aexp def
R36696:36696 Top.Equiv <> u var
R36694:36694 Top.Equiv <> i var
R36726:36731 Top.Imp <> AMinus constr
R36748:36753 Top.Imp <> AMinus constr
R36776:36785 Top.Equiv <> subst_aexp def
R36789:36789 Top.Equiv <> u var
R36787:36787 Top.Equiv <> i var
R36756:36765 Top.Equiv <> subst_aexp def
R36769:36769 Top.Equiv <> u var
R36767:36767 Top.Equiv <> i var
R36799:36803 Top.Imp <> AMult constr
R36821:36825 Top.Imp <> AMult constr
R36848:36857 Top.Equiv <> subst_aexp def
R36861:36861 Top.Equiv <> u var
R36859:36859 Top.Equiv <> i var
R36828:36837 Top.Equiv <> subst_aexp def
R36841:36841 Top.Equiv <> u var
R36839:36839 Top.Equiv <> i var
def 36883:36895 <> subst_aexp_ex
R36931:36936 Coq.Init.Logic <> :type_scope:x_'='_x not
R36950:36950 Coq.Init.Logic <> :type_scope:x_'='_x not
R36901:36910 Top.Equiv <> subst_aexp def
R36926:36928 Top.Imp <> :aexp_scope:x_'+'_x not
R36925:36925 Top.Imp <> Y def
R36929:36929 Top.Imp <> X def
R36917:36919 Top.Imp <> :aexp_scope:x_'+'_x not
R36912:36912 Top.Imp <> X def
R36938:36941 Top.Imp <> :aexp_scope:x_'+'_x not
R36949:36949 Top.Imp <> :aexp_scope:x_'+'_x not
R36937:36937 Top.Imp <> Y def
R36944:36946 Top.Imp <> :aexp_scope:x_'+'_x not
def 37146:37165 <> subst_equiv_property
R37192:37197 Top.Equiv <> cequiv def
R37242:37244 Top.Imp <> :com_scope:x_';;'_x not
R37235:37239 Top.Imp <> :com_scope:x_'::='_x not
R37233:37234 Top.Equiv <> i1 var
R37240:37241 Top.Equiv <> a1 var
R37247:37251 Top.Imp <> :com_scope:x_'::='_x not
R37245:37246 Top.Equiv <> i2 var
R37252:37261 Top.Equiv <> subst_aexp def
R37269:37270 Top.Equiv <> a2 var
R37266:37267 Top.Equiv <> a1 var
R37263:37264 Top.Equiv <> i1 var
R37209:37211 Top.Imp <> :com_scope:x_';;'_x not
R37202:37206 Top.Imp <> :com_scope:x_'::='_x not
R37200:37201 Top.Equiv <> i1 var
R37207:37208 Top.Equiv <> a1 var
R37214:37218 Top.Imp <> :com_scope:x_'::='_x not
R37212:37213 Top.Equiv <> i2 var
R37219:37220 Top.Equiv <> a2 var
prf 38341:38353 <> subst_inequiv
R38359:38360 Coq.Init.Logic <> :type_scope:'~'_x not
R38361:38380 Top.Equiv <> subst_equiv_property def
R38399:38418 Top.Equiv <> subst_equiv_property def
R38612:38626 Top.Imp <> :com_scope:x_';;'_x not
R38602:38606 Top.Imp <> :com_scope:x_'::='_x not
R38601:38601 Top.Imp <> X def
R38608:38610 Top.Imp <> :aexp_scope:x_'+'_x not
R38607:38607 Top.Imp <> X def
R38628:38632 Top.Imp <> :com_scope:x_'::='_x not
R38627:38627 Top.Imp <> Y def
R38633:38633 Top.Imp <> X def
R38612:38626 Top.Imp <> :com_scope:x_';;'_x not
R38602:38606 Top.Imp <> :com_scope:x_'::='_x not
R38601:38601 Top.Imp <> X def
R38608:38610 Top.Imp <> :aexp_scope:x_'+'_x not
R38607:38607 Top.Imp <> X def
R38628:38632 Top.Imp <> :com_scope:x_'::='_x not
R38627:38627 Top.Imp <> Y def
R38633:38633 Top.Imp <> X def
R38672:38686 Top.Imp <> :com_scope:x_';;'_x not
R38662:38666 Top.Imp <> :com_scope:x_'::='_x not
R38661:38661 Top.Imp <> X def
R38668:38670 Top.Imp <> :aexp_scope:x_'+'_x not
R38667:38667 Top.Imp <> X def
R38688:38692 Top.Imp <> :com_scope:x_'::='_x not
R38687:38687 Top.Imp <> Y def
R38694:38696 Top.Imp <> :aexp_scope:x_'+'_x not
R38693:38693 Top.Imp <> X def
R38672:38686 Top.Imp <> :com_scope:x_';;'_x not
R38662:38666 Top.Imp <> :com_scope:x_'::='_x not
R38661:38661 Top.Imp <> X def
R38668:38670 Top.Imp <> :aexp_scope:x_'+'_x not
R38667:38667 Top.Imp <> X def
R38688:38692 Top.Imp <> :com_scope:x_'::='_x not
R38687:38687 Top.Imp <> Y def
R38694:38696 Top.Imp <> :aexp_scope:x_'+'_x not
R38693:38693 Top.Imp <> X def
R38723:38728 Top.Equiv <> cequiv def
R38723:38728 Top.Equiv <> cequiv def
R38944:38944 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38946:38950 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38952:38954 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38956:38960 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38962:38962 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38945:38945 Top.Imp <> X def
R38955:38955 Top.Imp <> Y def
R38944:38944 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38946:38950 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38952:38954 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38956:38960 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38962:38962 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38945:38945 Top.Imp <> X def
R38955:38955 Top.Imp <> Y def
R38983:38983 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38985:38989 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38991:38993 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38995:38999 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R39001:39001 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38984:38984 Top.Imp <> X def
R38994:38994 Top.Imp <> Y def
R38983:38983 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38985:38989 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38991:38993 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38995:38999 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R39001:39001 Top.Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38984:38984 Top.Imp <> X def
R38994:38994 Top.Imp <> Y def
R39027:39029 Top.Imp <> ::x_'/'_x_'\\'_x not
R39039:39042 Top.Imp <> ::x_'/'_x_'\\'_x not
R39030:39035 Top.Maps <> ::'{'_'-->'_x_'}' not
R39037:39038 Top.Maps <> ::'{'_'-->'_x_'}' not
R39065:39067 Top.Imp <> ::x_'/'_x_'\\'_x not
R39077:39080 Top.Imp <> ::x_'/'_x_'\\'_x not
R39068:39073 Top.Maps <> ::'{'_'-->'_x_'}' not
R39075:39076 Top.Maps <> ::'{'_'-->'_x_'}' not
R39133:39133 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39135:39139 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39141 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39134:39134 Top.Imp <> X def
R39114:39118 Top.Imp <> E_Seq constr
R39158:39162 Top.Imp <> E_Ass constr
R39027:39029 Top.Imp <> ::x_'/'_x_'\\'_x not
R39039:39042 Top.Imp <> ::x_'/'_x_'\\'_x not
R39030:39035 Top.Maps <> ::'{'_'-->'_x_'}' not
R39037:39038 Top.Maps <> ::'{'_'-->'_x_'}' not
R39065:39067 Top.Imp <> ::x_'/'_x_'\\'_x not
R39077:39080 Top.Imp <> ::x_'/'_x_'\\'_x not
R39068:39073 Top.Maps <> ::'{'_'-->'_x_'}' not
R39075:39076 Top.Maps <> ::'{'_'-->'_x_'}' not
R39065:39067 Top.Imp <> ::x_'/'_x_'\\'_x not
R39077:39080 Top.Imp <> ::x_'/'_x_'\\'_x not
R39068:39073 Top.Maps <> ::'{'_'-->'_x_'}' not
R39075:39076 Top.Maps <> ::'{'_'-->'_x_'}' not
R39133:39133 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39135:39139 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39141 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39134:39134 Top.Imp <> X def
R39114:39118 Top.Imp <> E_Seq constr
R39158:39162 Top.Imp <> E_Ass constr
R39158:39162 Top.Imp <> E_Ass constr
R39133:39133 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39135:39139 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39141 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39134:39134 Top.Imp <> X def
R39114:39118 Top.Imp <> E_Seq constr
R39158:39162 Top.Imp <> E_Ass constr
R39158:39162 Top.Imp <> E_Ass constr
R39133:39133 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39135:39139 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39141 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39134:39134 Top.Imp <> X def
R39114:39118 Top.Imp <> E_Seq constr
R39158:39162 Top.Imp <> E_Ass constr
R39158:39162 Top.Imp <> E_Ass constr
R39133:39133 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39135:39139 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39141 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R39134:39134 Top.Imp <> X def
R39114:39118 Top.Imp <> E_Seq constr
R39317:39319 Coq.Init.Logic <> :type_scope:x_'='_x not
R39340:39358 Top.Imp <> ceval_deterministic thm
R39363:39368 Top.Maps <> ::'{'_'-->'_x_'}' not
R39370:39371 Top.Maps <> ::'{'_'-->'_x_'}' not
R39317:39319 Coq.Init.Logic <> :type_scope:x_'='_x not
R39340:39358 Top.Imp <> ceval_deterministic thm
R39363:39368 Top.Maps <> ::'{'_'-->'_x_'}' not
R39370:39371 Top.Maps <> ::'{'_'-->'_x_'}' not
R39413:39415 Coq.Init.Logic <> :type_scope:x_'='_x not
R39412:39412 Top.Imp <> Y def
R39420:39420 Top.Imp <> Y def
R39413:39415 Coq.Init.Logic <> :type_scope:x_'='_x not
R39412:39412 Top.Imp <> Y def
R39420:39420 Top.Imp <> Y def
ind 39828:39847 <> var_not_used_in_aexp
constr 39882:39887 <> VNUNum
constr 39936:39940 <> VNUId
constr 39998:40004 <> VNUPlus
constr 40138:40145 <> VNUMinus
constr 40280:40286 <> VNUMult
R39852:39857 Coq.Strings.String <> string ind
R39866:39869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39862:39865 Top.Imp <> aexp ind
R39900:39919 Top.Equiv <> var_not_used_in_aexp ind
R39924:39927 Top.Imp <> ANum constr
R39929:39929 Top.Equiv <> n var
R39921:39921 Top.Equiv <> X var
R39959:39962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39963:39982 Top.Equiv <> var_not_used_in_aexp ind
R39987:39989 Top.Imp <> AId constr
R39991:39991 Top.Equiv <> Y var
R39984:39984 Top.Equiv <> X var
R39954:39957 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39953:39953 Top.Equiv <> X var
R39958:39958 Top.Equiv <> Y var
R40052:40061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40087:40096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40097:40116 Top.Equiv <> var_not_used_in_aexp ind
R40121:40125 Top.Imp <> APlus constr
R40130:40131 Top.Equiv <> a2 var
R40127:40128 Top.Equiv <> a1 var
R40118:40118 Top.Equiv <> X var
R40062:40081 Top.Equiv <> var_not_used_in_aexp ind
R40085:40086 Top.Equiv <> a2 var
R40083:40083 Top.Equiv <> X var
R40027:40046 Top.Equiv <> var_not_used_in_aexp ind
R40050:40051 Top.Equiv <> a1 var
R40048:40048 Top.Equiv <> X var
R40193:40202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40228:40237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40238:40257 Top.Equiv <> var_not_used_in_aexp ind
R40262:40267 Top.Imp <> AMinus constr
R40272:40273 Top.Equiv <> a2 var
R40269:40270 Top.Equiv <> a1 var
R40259:40259 Top.Equiv <> X var
R40203:40222 Top.Equiv <> var_not_used_in_aexp ind
R40226:40227 Top.Equiv <> a2 var
R40224:40224 Top.Equiv <> X var
R40168:40187 Top.Equiv <> var_not_used_in_aexp ind
R40191:40192 Top.Equiv <> a1 var
R40189:40189 Top.Equiv <> X var
R40334:40343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40369:40378 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40379:40398 Top.Equiv <> var_not_used_in_aexp ind
R40403:40407 Top.Imp <> AMult constr
R40412:40413 Top.Equiv <> a2 var
R40409:40410 Top.Equiv <> a1 var
R40400:40400 Top.Equiv <> X var
R40344:40363 Top.Equiv <> var_not_used_in_aexp ind
R40367:40368 Top.Equiv <> a2 var
R40365:40365 Top.Equiv <> X var
R40309:40328 Top.Equiv <> var_not_used_in_aexp ind
R40332:40333 Top.Equiv <> a1 var
R40330:40330 Top.Equiv <> X var
prf 40424:40438 <> aeval_weakening
R40486:40491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40519:40521 Coq.Init.Logic <> :type_scope:x_'='_x not
R40492:40496 Top.Imp <> aeval def
R40518:40518 Top.Equiv <> a var
R40501:40505 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R40507:40511 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R40514:40515 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R40499:40500 Top.Equiv <> st var
R40506:40506 Top.Equiv <> i var
R40512:40513 Top.Equiv <> ni var
R40522:40526 Top.Imp <> aeval def
R40531:40531 Top.Equiv <> a var
R40528:40529 Top.Equiv <> st var
R40462:40481 Top.Equiv <> var_not_used_in_aexp ind
R40485:40485 Top.Equiv <> a var
R40483:40483 Top.Equiv <> i var
prf 40831:40846 <> inequiv_exercise
R40851:40852 Coq.Init.Logic <> :type_scope:'~'_x not
R40853:40858 Top.Equiv <> cequiv def
R40885:40888 Top.Imp <> :com_scope:'SKIP' not
R40861:40866 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40871:40874 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40879:40882 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40867:40870 Coq.Init.Datatypes <> true constr
R40875:40878 Top.Imp <> :com_scope:'SKIP' not
mod 42996:42999 <> Himp
ind 43097:43099 Himp com
constr 43115:43119 Himp CSkip
constr 43131:43134 Himp CAss
constr 43164:43167 Himp CSeq
constr 43193:43195 Himp CIf
constr 43229:43234 Himp CWhile
constr 43261:43266 Himp CHavoc
R43123:43125 Top.Equiv <> com ind
R43144:43147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43152:43155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43156:43158 Top.Equiv <> com ind
R43148:43151 Top.Imp <> aexp ind
R43138:43143 Coq.Strings.String <> string ind
R43174:43177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43181:43184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43185:43187 Top.Equiv <> com ind
R43178:43180 Top.Equiv <> com ind
R43171:43173 Top.Equiv <> com ind
R43203:43206 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43210:43213 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43217:43220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43221:43223 Top.Equiv <> com ind
R43214:43216 Top.Equiv <> com ind
R43207:43209 Top.Equiv <> com ind
R43199:43202 Top.Imp <> bexp ind
R43242:43245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43249:43252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43253:43255 Top.Equiv <> com ind
R43246:43248 Top.Equiv <> com ind
R43238:43241 Top.Imp <> bexp ind
R43276:43279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43280:43282 Top.Equiv <> com ind
R43270:43275 Coq.Strings.String <> string ind
R43340:43344 Top.Equiv Himp CSkip constr
not 43326:43326 Himp ::'SKIP'
R43374:43377 Top.Equiv Himp CAss constr
not 43356:43356 Himp ::x_'::='_x
R43425:43428 Top.Equiv Himp CSeq constr
not 43408:43408 Himp ::x_';;'_x
R43513:43518 Top.Equiv Himp CWhile constr
not 43482:43482 Himp ::'WHILE'_x_'DO'_x_'END'
R43612:43614 Top.Equiv Himp CIf constr
not 43570:43570 Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R43687:43692 Top.Equiv Himp CHavoc constr
not 43671:43671 Himp ::'HAVOC'_x
ind 44121:44125 Himp ceval
constr 44166:44171 Himp E_Skip
constr 44214:44218 Himp E_Ass
constr 44349:44353 Himp E_Seq
constr 44485:44492 Himp E_IfTrue
constr 44649:44657 Himp E_IfFalse
constr 44815:44826 Himp E_WhileFalse
constr 44945:44955 Himp E_WhileTrue
R44132:44135 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44141:44144 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44150:44153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44145:44149 Top.Imp <> state def
R44136:44140 Top.Imp <> state def
R44129:44131 Top.Equiv Himp com ind
R45201:45205 Top.Equiv <> ceval var
R44187:44191 Top.Imp <> state def
R44198:44200 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44203:44206 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44194:44197 Top.Equiv Himp ::'SKIP' not
R44201:44202 Top.Equiv <> st var
R44207:44208 Top.Equiv <> st var
R44235:44239 Top.Imp <> state def
R44248:44251 Top.Imp <> aexp ind
R44259:44261 Coq.Init.Datatypes <> nat ind
R44269:44274 Coq.Strings.String <> string ind
R44299:44308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44309:44309 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44318:44321 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44324:44327 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44311:44315 Top.Equiv Himp ::x_'::='_x not
R44310:44310 Top.Equiv <> X var
R44316:44317 Top.Equiv <> a1 var
R44322:44323 Top.Equiv <> st var
R44330:44334 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R44336:44340 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R44342:44343 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R44328:44329 Top.Equiv <> st var
R44335:44335 Top.Equiv <> X var
R44341:44341 Top.Equiv <> n var
R44295:44297 Coq.Init.Logic <> :type_scope:x_'='_x not
R44284:44288 Top.Imp <> aeval def
R44293:44294 Top.Equiv <> a1 var
R44290:44291 Top.Equiv <> st var
R44298:44298 Top.Equiv <> n var
R44373:44375 Top.Equiv Himp com ind
R44393:44397 Top.Imp <> state def
R44421:44430 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44447:44456 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44457:44457 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44466:44469 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44472:44475 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44460:44463 Top.Equiv Himp ::x_';;'_x not
R44458:44459 Top.Equiv <> c1 var
R44464:44465 Top.Equiv <> c2 var
R44470:44471 Top.Equiv <> st var
R44476:44479 Top.Equiv <> st'' var
R44433:44435 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44439:44442 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44431:44432 Top.Equiv <> c2 var
R44436:44438 Top.Equiv <> st' var
R44443:44446 Top.Equiv <> st'' var
R44409:44411 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44414:44417 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44407:44408 Top.Equiv <> c1 var
R44412:44413 Top.Equiv <> st var
R44418:44420 Top.Equiv <> st' var
R44513:44517 Top.Imp <> state def
R44526:44529 Top.Imp <> bexp ind
R44541:44543 Top.Equiv Himp com ind
R44571:44580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44595:44604 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44605:44605 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44631:44634 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44637:44640 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44606:44609 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44612:44617 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44620:44625 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44628:44630 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44610:44611 Top.Equiv <> b1 var
R44618:44619 Top.Equiv <> c1 var
R44626:44627 Top.Equiv <> c2 var
R44635:44636 Top.Equiv <> st var
R44641:44643 Top.Equiv <> st' var
R44583:44585 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44588:44591 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44581:44582 Top.Equiv <> c1 var
R44586:44587 Top.Equiv <> st var
R44592:44594 Top.Equiv <> st' var
R44564:44566 Coq.Init.Logic <> :type_scope:x_'='_x not
R44553:44557 Top.Imp <> beval def
R44562:44563 Top.Equiv <> b1 var
R44559:44560 Top.Equiv <> st var
R44567:44570 Coq.Init.Datatypes <> true constr
R44678:44682 Top.Imp <> state def
R44691:44694 Top.Imp <> bexp ind
R44706:44708 Top.Equiv Himp com ind
R44737:44746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44761:44770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44771:44771 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44797:44800 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44803:44806 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44772:44775 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44778:44783 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44786:44791 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44794:44796 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44776:44777 Top.Equiv <> b1 var
R44784:44785 Top.Equiv <> c1 var
R44792:44793 Top.Equiv <> c2 var
R44801:44802 Top.Equiv <> st var
R44807:44809 Top.Equiv <> st' var
R44749:44751 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44754:44757 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44747:44748 Top.Equiv <> c2 var
R44752:44753 Top.Equiv <> st var
R44758:44760 Top.Equiv <> st' var
R44729:44731 Coq.Init.Logic <> :type_scope:x_'='_x not
R44718:44722 Top.Imp <> beval def
R44727:44728 Top.Equiv <> b1 var
R44724:44725 Top.Equiv <> st var
R44732:44736 Coq.Init.Datatypes <> false constr
R44843:44846 Top.Imp <> bexp ind
R44855:44859 Top.Imp <> state def
R44868:44870 Top.Equiv Himp com ind
R44899:44908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44909:44909 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44928:44931 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44934:44937 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44910:44915 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44918:44921 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44924:44927 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44916:44917 Top.Equiv <> b1 var
R44922:44923 Top.Equiv <> c1 var
R44932:44933 Top.Equiv <> st var
R44938:44939 Top.Equiv <> st var
R44891:44893 Coq.Init.Logic <> :type_scope:x_'='_x not
R44880:44884 Top.Imp <> beval def
R44889:44890 Top.Equiv <> b1 var
R44886:44887 Top.Equiv <> st var
R44894:44898 Coq.Init.Datatypes <> false constr
R44981:44985 Top.Imp <> state def
R44994:44997 Top.Imp <> bexp ind
R45006:45008 Top.Equiv Himp com ind
R45036:45045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45060:45069 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45104:45113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45114:45114 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45133:45136 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45139:45142 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45115:45120 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45123:45126 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45129:45132 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45121:45122 Top.Equiv <> b1 var
R45127:45128 Top.Equiv <> c1 var
R45137:45138 Top.Equiv <> st var
R45143:45146 Top.Equiv <> st'' var
R45070:45070 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45089:45092 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45096:45099 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45071:45076 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45079:45082 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45085:45088 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45077:45078 Top.Equiv <> b1 var
R45083:45084 Top.Equiv <> c1 var
R45093:45095 Top.Equiv <> st' var
R45100:45103 Top.Equiv <> st'' var
R45048:45050 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45053:45056 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45046:45047 Top.Equiv <> c1 var
R45051:45052 Top.Equiv <> st var
R45057:45059 Top.Equiv <> st' var
R45029:45031 Coq.Init.Logic <> :type_scope:x_'='_x not
R45018:45022 Top.Imp <> beval def
R45027:45028 Top.Equiv <> b1 var
R45024:45025 Top.Equiv <> st var
R45032:45035 Coq.Init.Datatypes <> true constr
R45201:45205 Top.Equiv Himp ceval ind
not 45176:45176 Himp ::x_'/'_x_'\\'_x
def 45320:45333 Himp havoc_example1
R45337:45337 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45345:45348 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45358:45361 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45338:45343 Top.Equiv Himp ::'HAVOC'_x not
R45344:45344 Top.Imp <> X def
R45349:45354 Top.Maps <> ::'{'_'-->'_x_'}' not
R45356:45357 Top.Maps <> ::'{'_'-->'_x_'}' not
R45362:45363 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R45365:45369 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R45371:45372 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R45364:45364 Top.Imp <> X def
def 45420:45433 Himp havoc_example2
R45439:45439 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45454:45457 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45467:45470 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45444:45446 Top.Equiv Himp ::x_';;'_x not
R45440:45443 Top.Equiv Himp ::'SKIP' not
R45447:45452 Top.Equiv Himp ::'HAVOC'_x not
R45453:45453 Top.Imp <> Z def
R45458:45463 Top.Maps <> ::'{'_'-->'_x_'}' not
R45465:45466 Top.Maps <> ::'{'_'-->'_x_'}' not
R45471:45472 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R45474:45478 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R45481:45482 Top.Imp <> ::'{'_x_'-->'_x_'}' not
R45473:45473 Top.Imp <> Z def
def 45620:45625 Himp cequiv
R45636:45638 Top.Equiv Himp com ind
R45667:45671 Top.Imp <> state def
R45690:45694 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45678:45680 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45683:45686 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45676:45677 Top.Equiv <> c1 var
R45681:45682 Top.Equiv <> st var
R45687:45689 Top.Equiv <> st' var
R45697:45699 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45702:45705 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45695:45696 Top.Equiv <> c2 var
R45700:45701 Top.Equiv <> st var
R45706:45708 Top.Equiv <> st' var
def 45925:45927 Himp pXY
R45941:45943 Top.Equiv Himp ::x_';;'_x not
R45934:45939 Top.Equiv Himp ::'HAVOC'_x not
R45940:45940 Top.Imp <> X def
R45944:45949 Top.Equiv Himp ::'HAVOC'_x not
R45950:45950 Top.Imp <> Y def
def 45965:45967 Himp pYX
R45981:45983 Top.Equiv Himp ::x_';;'_x not
R45974:45979 Top.Equiv Himp ::'HAVOC'_x not
R45980:45980 Top.Imp <> Y def
R45984:45989 Top.Equiv Himp ::'HAVOC'_x not
R45990:45990 Top.Imp <> X def
prf 46098:46111 Himp pXY_cequiv_pYX
R46131:46134 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46117:46122 Top.Equiv Himp cequiv def
R46128:46130 Top.Equiv Himp pYX def
R46124:46126 Top.Equiv Himp pXY def
R46135:46135 Coq.Init.Logic <> :type_scope:'~'_x not
R46136:46141 Top.Equiv Himp cequiv def
R46147:46149 Top.Equiv Himp pYX def
R46143:46145 Top.Equiv Himp pXY def
def 46315:46320 Himp ptwice
R46334:46336 Top.Equiv Himp ::x_';;'_x not
R46327:46332 Top.Equiv Himp ::'HAVOC'_x not
R46333:46333 Top.Imp <> X def
R46337:46342 Top.Equiv Himp ::'HAVOC'_x not
R46343:46343 Top.Imp <> Y def
def 46358:46362 Himp pcopy
R46376:46378 Top.Equiv Himp ::x_';;'_x not
R46369:46374 Top.Equiv Himp ::'HAVOC'_x not
R46375:46375 Top.Imp <> X def
R46380:46384 Top.Equiv Himp ::x_'::='_x not
R46379:46379 Top.Imp <> Y def
R46385:46385 Top.Imp <> X def
prf 46556:46574 Himp ptwice_cequiv_pcopy
R46599:46602 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46580:46585 Top.Equiv Himp cequiv def
R46594:46598 Top.Equiv Himp pcopy def
R46587:46592 Top.Equiv Himp ptwice def
R46603:46603 Coq.Init.Logic <> :type_scope:'~'_x not
R46604:46609 Top.Equiv Himp cequiv def
R46618:46622 Top.Equiv Himp pcopy def
R46611:46616 Top.Equiv Himp ptwice def
def 47325:47326 Himp p1
R47330:47332 Top.Equiv Himp com ind
R47339:47344 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47354:47361 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47387:47392 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47345:47347 Top.Imp <> :bexp_scope:'!'_x not
R47353:47353 Top.Imp <> :bexp_scope:'!'_x not
R47349:47351 Top.Imp <> :bexp_scope:x_'='_x not
R47348:47348 Top.Imp <> X def
R47369:47375 Top.Equiv Himp ::x_';;'_x not
R47362:47367 Top.Equiv Himp ::'HAVOC'_x not
R47368:47368 Top.Imp <> Y def
R47377:47381 Top.Equiv Himp ::x_'::='_x not
R47376:47376 Top.Imp <> X def
R47383:47385 Top.Imp <> :aexp_scope:x_'+'_x not
R47382:47382 Top.Imp <> X def
def 47407:47408 Himp p2
R47412:47414 Top.Equiv Himp com ind
R47421:47426 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47436:47443 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47448:47453 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47427:47429 Top.Imp <> :bexp_scope:'!'_x not
R47435:47435 Top.Imp <> :bexp_scope:'!'_x not
R47431:47433 Top.Imp <> :bexp_scope:x_'='_x not
R47430:47430 Top.Imp <> X def
R47444:47447 Top.Equiv Himp ::'SKIP' not
prf 47715:47728 Himp p1_may_diverge
R47756:47761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47762:47763 Coq.Init.Logic <> :type_scope:'~'_x not
R47766:47768 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47771:47774 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47764:47765 Top.Equiv Himp p1 def
R47769:47770 Top.Equiv <> st var
R47775:47777 Top.Equiv <> st' var
R47751:47754 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47747:47748 Top.Equiv <> st var
R47750:47750 Top.Imp <> X def
prf 47823:47836 Himp p2_may_diverge
R47864:47869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47870:47871 Coq.Init.Logic <> :type_scope:'~'_x not
R47874:47876 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47879:47882 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47872:47873 Top.Equiv Himp p2 def
R47877:47878 Top.Equiv <> st var
R47883:47885 Top.Equiv <> st' var
R47859:47862 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47855:47856 Top.Equiv <> st var
R47858:47858 Top.Imp <> X def
prf 48084:48094 Himp p1_p2_equiv
R48098:48103 Top.Equiv Himp cequiv def
R48108:48109 Top.Equiv Himp p2 def
R48105:48106 Top.Equiv Himp p1 def
def 48380:48381 Himp p3
R48385:48387 Top.Equiv Himp com ind
R48401:48405 Top.Equiv Himp ::x_';;'_x not
R48395:48399 Top.Equiv Himp ::x_'::='_x not
R48394:48394 Top.Imp <> Z def
R48406:48411 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48421:48428 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48450:48455 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48412:48414 Top.Imp <> :bexp_scope:'!'_x not
R48420:48420 Top.Imp <> :bexp_scope:'!'_x not
R48416:48418 Top.Imp <> :bexp_scope:x_'='_x not
R48415:48415 Top.Imp <> X def
R48436:48442 Top.Equiv Himp ::x_';;'_x not
R48429:48434 Top.Equiv Himp ::'HAVOC'_x not
R48435:48435 Top.Imp <> X def
R48443:48448 Top.Equiv Himp ::'HAVOC'_x not
R48449:48449 Top.Imp <> Z def
def 48470:48471 Himp p4
R48475:48477 Top.Equiv Himp com ind
R48491:48495 Top.Equiv Himp ::x_';;'_x not
R48485:48489 Top.Equiv Himp ::x_'::='_x not
R48484:48484 Top.Imp <> X def
R48497:48501 Top.Equiv Himp ::x_'::='_x not
R48496:48496 Top.Imp <> Z def
prf 48515:48527 Himp p3_p4_inequiv
R48531:48532 Coq.Init.Logic <> :type_scope:'~'_x not
R48533:48538 Top.Equiv Himp cequiv def
R48543:48544 Top.Equiv Himp p4 def
R48540:48541 Top.Equiv Himp p3 def
def 49152:49153 Himp p5
R49157:49159 Top.Equiv Himp com ind
R49166:49171 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49181:49188 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49196:49201 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49172:49174 Top.Imp <> :bexp_scope:'!'_x not
R49180:49180 Top.Imp <> :bexp_scope:'!'_x not
R49176:49178 Top.Imp <> :bexp_scope:x_'='_x not
R49175:49175 Top.Imp <> X def
R49189:49194 Top.Equiv Himp ::'HAVOC'_x not
R49195:49195 Top.Imp <> X def
def 49216:49217 Himp p6
R49221:49223 Top.Equiv Himp com ind
R49231:49235 Top.Equiv Himp ::x_'::='_x not
R49230:49230 Top.Imp <> X def
prf 49249:49259 Himp p5_p6_equiv
R49263:49268 Top.Equiv Himp cequiv def
R49273:49274 Top.Equiv Himp p6 def
R49270:49271 Top.Equiv Himp p5 def
R49328:49331 Top.Equiv Himp <> mod
prf 50024:50054 <> swap_noninterfering_assignments
R50087:50092 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50119:50124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50151:50156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50157:50162 Top.Equiv <> cequiv def
R50206:50208 Top.Imp <> :com_scope:x_';;'_x not
R50199:50203 Top.Imp <> :com_scope:x_'::='_x not
R50197:50198 Top.Equiv <> l2 var
R50204:50205 Top.Equiv <> a2 var
R50211:50215 Top.Imp <> :com_scope:x_'::='_x not
R50209:50210 Top.Equiv <> l1 var
R50216:50217 Top.Equiv <> a1 var
R50178:50180 Top.Imp <> :com_scope:x_';;'_x not
R50171:50175 Top.Imp <> :com_scope:x_'::='_x not
R50169:50170 Top.Equiv <> l1 var
R50176:50177 Top.Equiv <> a1 var
R50183:50187 Top.Imp <> :com_scope:x_'::='_x not
R50181:50182 Top.Equiv <> l2 var
R50188:50189 Top.Equiv <> a2 var
R50125:50144 Top.Equiv <> var_not_used_in_aexp ind
R50149:50150 Top.Equiv <> a1 var
R50146:50147 Top.Equiv <> l2 var
R50093:50112 Top.Equiv <> var_not_used_in_aexp ind
R50117:50118 Top.Equiv <> a2 var
R50114:50115 Top.Equiv <> l1 var
R50081:50084 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R50079:50080 Top.Equiv <> l1 var
R50085:50086 Top.Equiv <> l2 var
def 50705:50711 <> capprox
R50722:50724 Top.Imp <> com ind
R50754:50758 Top.Imp <> state def
R50778:50781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50784:50786 Top.Imp <> ::x_'/'_x_'\\'_x not
R50789:50792 Top.Imp <> ::x_'/'_x_'\\'_x not
R50782:50783 Top.Equiv <> c2 var
R50787:50788 Top.Equiv <> st var
R50793:50795 Top.Equiv <> st' var
R50766:50768 Top.Imp <> ::x_'/'_x_'\\'_x not
R50771:50774 Top.Imp <> ::x_'/'_x_'\\'_x not
R50764:50765 Top.Equiv <> c1 var
R50769:50770 Top.Equiv <> st var
R50775:50777 Top.Equiv <> st' var
def 51194:51195 <> c3
R51199:51201 Top.Imp <> com ind
def 51279:51280 <> c4
R51284:51286 Top.Imp <> com ind
prf 51362:51376 <> c3_c4_different
R51395:51398 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R51380:51381 Coq.Init.Logic <> :type_scope:'~'_x not
R51382:51388 Top.Equiv <> capprox def
R51393:51394 Top.Equiv <> c4 prfax
R51390:51391 Top.Equiv <> c3 prfax
R51399:51400 Coq.Init.Logic <> :type_scope:'~'_x not
R51401:51407 Top.Equiv <> capprox def
R51412:51413 Top.Equiv <> c3 prfax
R51409:51410 Top.Equiv <> c4 prfax
def 51533:51536 <> cmin
R51540:51542 Top.Imp <> com ind
prf 51620:51631 <> cmin_minimal
R51645:51651 Top.Equiv <> capprox def
R51658:51658 Top.Equiv <> c var
R51653:51656 Top.Equiv <> cmin prfax
def 51835:51839 <> zprop
R51846:51848 Top.Imp <> com ind
prf 51934:51949 <> zprop_preserving
R51975:51978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51991:51994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51995:51999 Top.Equiv <> zprop prfax
R52001:52002 Top.Equiv <> c' var
R51979:51985 Top.Equiv <> capprox def
R51989:51990 Top.Equiv <> c' var
R51987:51987 Top.Equiv <> c var
R51968:51972 Top.Equiv <> zprop prfax
R51974:51974 Top.Equiv <> c var
