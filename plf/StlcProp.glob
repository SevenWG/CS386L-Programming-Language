DIGEST 65b7db6334b58c81eaa5ac8a2ddf554b
FTop.StlcProp
R100:103 Top.Maps <> <> lib
R121:125 Top.Types <> <> lib
R143:146 Top.Stlc <> <> lib
R164:172 Top.Smallstep <> <> lib
mod 182:189 <> STLCProp
prf 829:848 STLCProp canonical_forms_bool
R884:889 Coq.Init.Logic <> :type_scope:x_'->'_x not
R897:902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R903:903 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R913:918 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R929:929 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R905:907 Coq.Init.Logic <> :type_scope:x_'='_x not
R904:904 Top.StlcProp <> t var
R908:912 Top.Stlc STLC ttrue constr
R920:922 Coq.Init.Logic <> :type_scope:x_'='_x not
R919:919 Top.StlcProp <> t var
R923:928 Top.Stlc STLC tfalse constr
R890:894 Top.Stlc STLC value ind
R896:896 Top.StlcProp <> t var
R869:872 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R874:878 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R864:868 Top.Maps <> empty def
R873:873 Top.StlcProp <> t var
R879:883 Top.Stlc STLC TBool constr
prf 1028:1046 STLCProp canonical_forms_fun
R1097:1102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1110:1115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1116:1122 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1126:1127 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1129:1131 Coq.Init.Logic <> :type_scope:x_'='_x not
R1128:1128 Top.StlcProp <> t var
R1132:1135 Top.Stlc STLC tabs constr
R1142:1142 Top.StlcProp <> u var
R1139:1140 Top.StlcProp <> T1 var
R1137:1137 Top.StlcProp <> x var
R1103:1107 Top.Stlc STLC value ind
R1109:1109 Top.StlcProp <> t var
R1073:1076 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R1078:1083 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R1096:1096 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R1068:1072 Top.Maps <> empty def
R1077:1077 Top.StlcProp <> t var
R1084:1089 Top.Stlc STLC TArrow constr
R1094:1095 Top.StlcProp <> T2 var
R1091:1092 Top.StlcProp <> T1 var
prf 1724:1731 STLCProp progress
R1765:1770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1778:1781 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R1771:1775 Top.Stlc STLC value ind
R1777:1777 Top.StlcProp <> t var
R1782:1788 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1791:1792 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1794:1798 Top.Stlc STLC ::x_'==>'_x not
R1793:1793 Top.StlcProp <> t var
R1799:1800 Top.StlcProp <> t' var
R1754:1757 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R1759:1763 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R1749:1753 Top.Maps <> empty def
R1758:1758 Top.StlcProp <> t var
R1764:1764 Top.StlcProp <> T var
R3454:3458 Top.Maps <> empty def
R3460:3461 Top.Stlc STLC ty ind
R3454:3458 Top.Maps <> empty def
R3460:3461 Top.Stlc STLC ty ind
R3850:3856 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3862:3863 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3866:3868 Coq.Init.Logic <> :type_scope:x_'='_x not
R3869:3872 Top.Stlc STLC tabs constr
R3881:3882 Top.StlcProp <> t0 var
R3874:3875 Top.StlcProp <> x0 var
R3850:3856 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3862:3863 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3866:3868 Coq.Init.Logic <> :type_scope:x_'='_x not
R3869:3872 Top.Stlc STLC tabs constr
R3881:3882 Top.StlcProp <> t0 var
R3874:3875 Top.StlcProp <> x0 var
R3901:3919 Top.StlcProp STLCProp canonical_forms_fun thm
R3901:3919 Top.StlcProp STLCProp canonical_forms_fun thm
R3990:3990 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R3993:3994 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R3997:3997 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R3990:3990 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R3993:3994 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R3997:3997 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R4073:4076 Top.Stlc STLC tapp constr
R4073:4076 Top.Stlc STLC tapp constr
R4152:4155 Top.Stlc STLC tapp constr
R4152:4155 Top.Stlc STLC tapp constr
R4256:4275 Top.StlcProp STLCProp canonical_forms_bool thm
R4256:4275 Top.StlcProp STLCProp canonical_forms_bool thm
R4364:4366 Top.Stlc STLC tif constr
R4364:4366 Top.Stlc STLC tif constr
prf 4578:4586 STLCProp progress'
R4623:4631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4639:4642 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4632:4636 Top.Stlc STLC value ind
R4638:4638 Top.StlcProp <> t var
R4643:4649 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4652:4653 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4655:4659 Top.Stlc STLC ::x_'==>'_x not
R4654:4654 Top.StlcProp <> t var
R4660:4661 Top.StlcProp <> t' var
R4612:4615 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R4617:4621 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R4607:4611 Top.Maps <> empty def
R4616:4616 Top.StlcProp <> t var
R4622:4622 Top.StlcProp <> T var
ind 7426:7440 STLCProp appears_free_in
constr 7472:7478 STLCProp afi_var
constr 7529:7536 STLCProp afi_app1
constr 7628:7635 STLCProp afi_app2
constr 7727:7733 STLCProp afi_abs
constr 7850:7856 STLCProp afi_if1
constr 7952:7958 STLCProp afi_if2
constr 8054:8060 STLCProp afi_if3
R7450:7453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7456:7459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7454:7455 Top.Stlc STLC tm ind
R7444:7449 Coq.Strings.String <> string ind
R7498:7512 Top.StlcProp <> appears_free_in ind
R7517:7520 Top.Stlc STLC tvar constr
R7522:7522 Top.StlcProp <> x var
R7514:7514 Top.StlcProp <> x var
R7582:7592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7593:7607 Top.StlcProp <> appears_free_in ind
R7612:7615 Top.Stlc STLC tapp constr
R7620:7621 Top.StlcProp <> t2 var
R7617:7618 Top.StlcProp <> t1 var
R7609:7609 Top.StlcProp <> x var
R7562:7576 Top.StlcProp <> appears_free_in ind
R7580:7581 Top.StlcProp <> t1 var
R7578:7578 Top.StlcProp <> x var
R7681:7691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7692:7706 Top.StlcProp <> appears_free_in ind
R7711:7714 Top.Stlc STLC tapp constr
R7719:7720 Top.StlcProp <> t2 var
R7716:7717 Top.StlcProp <> t1 var
R7708:7708 Top.StlcProp <> x var
R7661:7675 Top.StlcProp <> appears_free_in ind
R7679:7680 Top.StlcProp <> t2 var
R7677:7677 Top.StlcProp <> x var
R7769:7779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7801:7810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7811:7825 Top.StlcProp <> appears_free_in ind
R7830:7833 Top.Stlc STLC tabs constr
R7841:7843 Top.StlcProp <> t12 var
R7837:7839 Top.StlcProp <> T11 var
R7835:7835 Top.StlcProp <> y var
R7827:7827 Top.StlcProp <> x var
R7780:7794 Top.StlcProp <> appears_free_in ind
R7798:7800 Top.StlcProp <> t12 var
R7796:7796 Top.StlcProp <> x var
R7764:7767 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7763:7763 Top.StlcProp <> y var
R7768:7768 Top.StlcProp <> x var
R7905:7914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7915:7929 Top.StlcProp <> appears_free_in ind
R7934:7936 Top.Stlc STLC tif constr
R7944:7945 Top.StlcProp <> t3 var
R7941:7942 Top.StlcProp <> t2 var
R7938:7939 Top.StlcProp <> t1 var
R7931:7931 Top.StlcProp <> x var
R7885:7899 Top.StlcProp <> appears_free_in ind
R7903:7904 Top.StlcProp <> t1 var
R7901:7901 Top.StlcProp <> x var
R8007:8016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8017:8031 Top.StlcProp <> appears_free_in ind
R8036:8038 Top.Stlc STLC tif constr
R8046:8047 Top.StlcProp <> t3 var
R8043:8044 Top.StlcProp <> t2 var
R8040:8041 Top.StlcProp <> t1 var
R8033:8033 Top.StlcProp <> x var
R7987:8001 Top.StlcProp <> appears_free_in ind
R8005:8006 Top.StlcProp <> t2 var
R8003:8003 Top.StlcProp <> x var
R8109:8118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8119:8133 Top.StlcProp <> appears_free_in ind
R8138:8140 Top.Stlc STLC tif constr
R8148:8149 Top.StlcProp <> t3 var
R8145:8146 Top.StlcProp <> t2 var
R8142:8143 Top.StlcProp <> t1 var
R8135:8135 Top.StlcProp <> x var
R8089:8103 Top.StlcProp <> appears_free_in ind
R8107:8108 Top.StlcProp <> t3 var
R8105:8105 Top.StlcProp <> x var
R8172:8186 Top.StlcProp <> appears_free_in ind
def 8350:8355 STLCProp closed
R8360:8361 Top.Stlc STLC tm ind
R8379:8380 Coq.Init.Logic <> :type_scope:'~'_x not
R8381:8395 Top.StlcProp STLCProp appears_free_in ind
R8399:8399 Top.StlcProp <> t var
R8397:8397 Top.StlcProp <> x var
prf 9566:9580 STLCProp free_in_context
R9626:9632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9649:9655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9656:9662 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9665:9666 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9674:9676 Coq.Init.Logic <> :type_scope:x_'='_x not
R9667:9671 Top.StlcProp <> Gamma var
R9673:9673 Top.StlcProp <> x var
R9677:9680 Coq.Init.Datatypes <> Some constr
R9682:9683 Top.StlcProp <> T' var
R9638:9641 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R9643:9647 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R9633:9637 Top.StlcProp <> Gamma var
R9642:9642 Top.StlcProp <> t var
R9648:9648 Top.StlcProp <> T var
R9607:9621 Top.StlcProp STLCProp appears_free_in ind
R9625:9625 Top.StlcProp <> t var
R9623:9623 Top.StlcProp <> x var
R11515:11524 Top.Maps <> update_neq thm
R11515:11524 Top.Maps <> update_neq thm
R11515:11524 Top.Maps <> update_neq thm
R11515:11524 Top.Maps <> update_neq thm
prf 11760:11780 STLCProp typable_empty__closed
R11816:11824 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11825:11830 Top.StlcProp STLCProp closed def
R11832:11832 Top.StlcProp <> t var
R11805:11808 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R11810:11814 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R11800:11804 Top.Maps <> empty def
R11809:11809 Top.StlcProp <> t var
R11815:11815 Top.StlcProp <> T var
prf 12251:12268 STLCProp context_invariance
R12318:12327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12328:12328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12380:12389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12396:12399 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R12401:12405 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R12390:12395 Top.StlcProp <> Gamma' var
R12400:12400 Top.StlcProp <> t var
R12406:12406 Top.StlcProp <> T var
R12358:12361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12369:12371 Coq.Init.Logic <> :type_scope:x_'='_x not
R12362:12366 Top.StlcProp <> Gamma var
R12368:12368 Top.StlcProp <> x var
R12372:12377 Top.StlcProp <> Gamma' var
R12379:12379 Top.StlcProp <> x var
R12339:12353 Top.StlcProp STLCProp appears_free_in ind
R12357:12357 Top.StlcProp <> t var
R12355:12355 Top.StlcProp <> x var
R12307:12310 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R12312:12316 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R12302:12306 Top.StlcProp <> Gamma var
R12311:12311 Top.StlcProp <> t var
R12317:12317 Top.StlcProp <> T var
R14871:14875 Top.Stlc STLC T_Var constr
R14871:14875 Top.Stlc STLC T_Var constr
R14921:14925 Top.Stlc STLC T_Abs constr
R14921:14925 Top.Stlc STLC T_Abs constr
R15078:15083 Top.Maps <> update def
R15093:15100 Top.Maps <> t_update def
R15113:15122 Top.Maps <> beq_string def
R15113:15122 Top.Maps <> beq_string def
R15157:15176 Top.Maps <> beq_string_false_iff thm
R15157:15176 Top.Maps <> beq_string_false_iff thm
R15157:15176 Top.Maps <> beq_string_false_iff thm
R15220:15224 Top.Stlc STLC T_App constr
R15220:15224 Top.Stlc STLC T_App constr
prf 16034:16062 STLCProp substitution_preserves_typing
R16120:16125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16142:16149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16155:16158 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R16166:16170 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R16150:16154 Top.StlcProp <> Gamma var
R16159:16159 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R16161:16162 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R16164:16164 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R16160:16160 Top.StlcProp <> x var
R16163:16163 Top.StlcProp <> v var
R16165:16165 Top.StlcProp <> t var
R16171:16171 Top.StlcProp <> T var
R16131:16134 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R16136:16140 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R16126:16130 Top.Maps <> empty def
R16135:16135 Top.StlcProp <> v var
R16141:16141 Top.StlcProp <> U var
R16109:16112 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R16114:16118 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R16097:16101 Top.Maps <> ::x_'&'_'{{'_x_'-->'_x_'}}' not
R16103:16105 Top.Maps <> ::x_'&'_'{{'_x_'-->'_x_'}}' not
R16107:16108 Top.Maps <> ::x_'&'_'{{'_x_'-->'_x_'}}' not
R16092:16096 Top.StlcProp <> Gamma var
R16102:16102 Top.StlcProp <> x var
R16106:16106 Top.StlcProp <> U var
R16113:16113 Top.StlcProp <> t var
R16119:16119 Top.StlcProp <> T var
R20417:20427 Top.Maps <> beq_stringP prfax
R20417:20427 Top.Maps <> beq_stringP prfax
R20491:20499 Top.Maps <> update_eq thm
R20491:20499 Top.Maps <> update_eq thm
R20491:20499 Top.Maps <> update_eq thm
R20549:20566 Top.StlcProp STLCProp context_invariance thm
R20549:20566 Top.StlcProp STLCProp context_invariance thm
R20594:20614 Top.StlcProp STLCProp typable_empty__closed prfax
R20594:20614 Top.StlcProp STLCProp typable_empty__closed prfax
R20631:20636 Top.StlcProp STLCProp closed def
R20726:20730 Top.Stlc STLC T_Var constr
R20726:20730 Top.Stlc STLC T_Var constr
R20741:20750 Top.Maps <> update_neq thm
R20741:20750 Top.Maps <> update_neq thm
R20741:20750 Top.Maps <> update_neq thm
R20741:20750 Top.Maps <> update_neq thm
R20820:20824 Top.Stlc STLC T_Abs constr
R20820:20824 Top.Stlc STLC T_Abs constr
R20841:20851 Top.Maps <> beq_stringP prfax
R20841:20851 Top.Maps <> beq_stringP prfax
R20911:20923 Top.Maps <> update_shadow thm
R20911:20923 Top.Maps <> update_shadow thm
R20911:20923 Top.Maps <> update_shadow thm
R20983:21000 Top.StlcProp STLCProp context_invariance thm
R20983:21000 Top.StlcProp STLCProp context_invariance thm
R21033:21038 Top.Maps <> update def
R21041:21048 Top.Maps <> t_update def
R21067:21077 Top.Maps <> beq_stringP prfax
R21067:21077 Top.Maps <> beq_stringP prfax
R21133:21152 Top.Maps <> beq_string_false_iff thm
R21133:21152 Top.Maps <> beq_string_false_iff thm
R21133:21152 Top.Maps <> beq_string_false_iff thm
prf 21541:21552 STLCProp preservation
R21589:21595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21604:21610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21616:21619 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R21622:21626 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R21611:21615 Top.Maps <> empty def
R21620:21621 Top.StlcProp <> t' var
R21627:21627 Top.StlcProp <> T var
R21597:21601 Top.Stlc STLC ::x_'==>'_x not
R21596:21596 Top.StlcProp <> t var
R21602:21603 Top.StlcProp <> t' var
R21578:21581 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R21583:21587 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R21573:21577 Top.Maps <> empty def
R21582:21582 Top.StlcProp <> t var
R21588:21588 Top.StlcProp <> T var
R22974:22978 Top.Maps <> empty def
R22980:22981 Top.Stlc STLC ty ind
R22974:22978 Top.Maps <> empty def
R22980:22981 Top.Stlc STLC ty ind
R23313:23341 Top.StlcProp STLCProp substitution_preserves_typing thm
R23313:23341 Top.StlcProp STLCProp substitution_preserves_typing thm
def 24238:24242 STLCProp stuck
R24247:24248 Top.Stlc STLC tm ind
R24283:24286 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24264:24274 Top.Smallstep <> normal_form def
R24276:24279 Top.Stlc STLC step ind
R24282:24282 Top.StlcProp <> t var
R24287:24288 Coq.Init.Logic <> :type_scope:'~'_x not
R24289:24293 Top.Stlc STLC value ind
R24295:24295 Top.StlcProp <> t var
prf 24309:24317 STLCProp soundness
R24354:24359 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24369:24374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24375:24376 Coq.Init.Logic <> :type_scope:'~'_x not
R24385:24385 Coq.Init.Logic <> :type_scope:'~'_x not
R24377:24381 Top.StlcProp STLCProp stuck def
R24383:24384 Top.StlcProp <> t' var
R24361:24366 Top.Stlc STLC ::x_'==>*'_x not
R24360:24360 Top.StlcProp <> t var
R24367:24368 Top.StlcProp <> t' var
R24343:24346 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R24348:24352 Top.Stlc STLC ::x_'|-'_x_'\in'_x not
R24338:24342 Top.Maps <> empty def
R24347:24347 Top.StlcProp <> t var
R24353:24353 Top.StlcProp <> T var
R24436:24440 Top.StlcProp STLCProp stuck def
R24475:24485 Top.Smallstep <> normal_form def
R29963:29970 Top.StlcProp STLCProp <> mod
mod 30291:30299 <> STLCArith
ind 30422:30423 STLCArith ty
constr 30439:30444 STLCArith TArrow
constr 30467:30470 STLCArith TNat
R30450:30453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30456:30459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30460:30461 Top.StlcProp <> ty ind
R30454:30455 Top.StlcProp <> ty ind
R30448:30449 Top.StlcProp <> ty ind
R30476:30477 Top.StlcProp <> ty ind
ind 30615:30616 STLCArith tm
constr 30632:30635 STLCArith tvar
constr 30656:30659 STLCArith tapp
constr 30682:30685 STLCArith tabs
constr 30718:30721 STLCArith tnat
constr 30740:30744 STLCArith tsucc
constr 30761:30765 STLCArith tpred
constr 30782:30786 STLCArith tmult
constr 30809:30812 STLCArith tif0
R30645:30648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30649:30650 Top.StlcProp <> tm ind
R30639:30644 Coq.Strings.String <> string ind
R30665:30668 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30671:30674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30675:30676 Top.StlcProp <> tm ind
R30669:30670 Top.StlcProp <> tm ind
R30663:30664 Top.StlcProp <> tm ind
R30695:30698 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30701:30704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30707:30710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30711:30712 Top.StlcProp <> tm ind
R30705:30706 Top.StlcProp <> tm ind
R30699:30700 Top.StlcProp STLCArith ty ind
R30689:30694 Coq.Strings.String <> string ind
R30729:30732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30733:30734 Top.StlcProp <> tm ind
R30726:30728 Coq.Init.Datatypes <> nat ind
R30750:30753 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30754:30755 Top.StlcProp <> tm ind
R30748:30749 Top.StlcProp <> tm ind
R30771:30774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30775:30776 Top.StlcProp <> tm ind
R30769:30770 Top.StlcProp <> tm ind
R30792:30795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30798:30801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30802:30803 Top.StlcProp <> tm ind
R30796:30797 Top.StlcProp <> tm ind
R30790:30791 Top.StlcProp <> tm ind
R30819:30822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30825:30828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30831:30834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30835:30836 Top.StlcProp <> tm ind
R30829:30830 Top.StlcProp <> tm ind
R30823:30824 Top.StlcProp <> tm ind
R30817:30818 Top.StlcProp <> tm ind
R32312:32320 Top.StlcProp STLCArith <> mod
