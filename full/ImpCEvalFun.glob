DIGEST d5ebf344d9ffee120d14c62fca214f4a
FTop.ImpCEvalFun
R524:538 Coq.omega.Omega <> <> lib
R556:570 Coq.Arith.Arith <> <> lib
R588:590 Top.Imp <> <> lib
R592:595 Top.Maps <> <> lib
def 701:711 <> ceval_step1
R719:723 Top.Imp <> state def
R731:733 Top.Imp <> com ind
R738:742 Top.Imp <> state def
R755:755 Top.ImpCEvalFun <> c var
R768:771 Top.Imp <> :com_scope:'SKIP' not
R784:785 Top.ImpCEvalFun <> st var
R794:798 Top.Imp <> :com_scope:x_'::='_x not
R815:819 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R821:826 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R838:839 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R813:814 Top.ImpCEvalFun <> st var
R827:831 Top.Imp <> aeval def
R833:834 Top.ImpCEvalFun <> st var
R849:852 Top.Imp <> :com_scope:x_';;'_x not
R878:888 Top.ImpCEvalFun <> ceval_step1 def
R890:891 Top.ImpCEvalFun <> st var
R907:917 Top.ImpCEvalFun <> ceval_step1 def
R919:921 Top.ImpCEvalFun <> st' var
R932:935 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R937:942 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R945:950 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R953:955 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R972:976 Top.Imp <> beval def
R978:979 Top.ImpCEvalFun <> st var
R1032:1042 Top.ImpCEvalFun <> ceval_step1 def
R1044:1045 Top.ImpCEvalFun <> st var
R999:1009 Top.ImpCEvalFun <> ceval_step1 def
R1011:1012 Top.ImpCEvalFun <> st var
R1056:1061 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R1064:1067 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R1070:1073 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R1086:1087 Top.ImpCEvalFun <> st var
def 3079:3089 <> ceval_step2
R3097:3101 Top.Imp <> state def
R3109:3111 Top.Imp <> com ind
R3119:3121 Coq.Init.Datatypes <> nat ind
R3126:3130 Top.Imp <> state def
R3143:3143 Top.ImpCEvalFun <> i var
R3154:3154 Coq.Init.Datatypes <> O constr
R3159:3164 Top.Maps <> ::'{'_'-->'_x_'}' not
R3166:3167 Top.Maps <> ::'{'_'-->'_x_'}' not
R3173:3173 Coq.Init.Datatypes <> S constr
R3191:3191 Top.ImpCEvalFun <> c var
R3206:3209 Top.Imp <> :com_scope:'SKIP' not
R3224:3225 Top.ImpCEvalFun <> st var
R3236:3240 Top.Imp <> :com_scope:x_'::='_x not
R3259:3263 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R3265:3270 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R3282:3284 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R3257:3258 Top.ImpCEvalFun <> st var
R3271:3275 Top.Imp <> aeval def
R3277:3278 Top.ImpCEvalFun <> st var
R3296:3299 Top.Imp <> :com_scope:x_';;'_x not
R3327:3337 Top.ImpCEvalFun <> ceval_step2 def
R3339:3340 Top.ImpCEvalFun <> st var
R3361:3371 Top.ImpCEvalFun <> ceval_step2 def
R3373:3375 Top.ImpCEvalFun <> st' var
R3391:3394 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3396:3401 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3404:3409 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3412:3414 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3433:3437 Top.Imp <> beval def
R3439:3440 Top.ImpCEvalFun <> st var
R3500:3510 Top.ImpCEvalFun <> ceval_step2 def
R3512:3513 Top.ImpCEvalFun <> st var
R3462:3472 Top.ImpCEvalFun <> ceval_step2 def
R3474:3475 Top.ImpCEvalFun <> st var
R3529:3534 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3537:3540 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3543:3546 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3565:3569 Top.Imp <> beval def
R3571:3572 Top.ImpCEvalFun <> st var
R3679:3680 Top.ImpCEvalFun <> st var
R3604:3614 Top.ImpCEvalFun <> ceval_step2 def
R3616:3617 Top.ImpCEvalFun <> st var
R3643:3653 Top.ImpCEvalFun <> ceval_step2 def
R3659:3659 Top.ImpCEvalFun <> c var
R3655:3657 Top.ImpCEvalFun <> st' var
def 4481:4491 <> ceval_step3
R4499:4503 Top.Imp <> state def
R4511:4513 Top.Imp <> com ind
R4521:4523 Coq.Init.Datatypes <> nat ind
R4548:4553 Coq.Init.Datatypes <> option ind
R4555:4559 Top.Imp <> state def
R4572:4572 Top.ImpCEvalFun <> i var
R4583:4583 Coq.Init.Datatypes <> O constr
R4588:4591 Coq.Init.Datatypes <> None constr
R4597:4597 Coq.Init.Datatypes <> S constr
R4615:4615 Top.ImpCEvalFun <> c var
R4630:4633 Top.Imp <> :com_scope:'SKIP' not
R4648:4651 Coq.Init.Datatypes <> Some constr
R4653:4654 Top.ImpCEvalFun <> st var
R4665:4669 Top.Imp <> :com_scope:x_'::='_x not
R4686:4689 Coq.Init.Datatypes <> Some constr
R4694:4698 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R4700:4705 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R4717:4719 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R4692:4693 Top.ImpCEvalFun <> st var
R4706:4710 Top.Imp <> aeval def
R4712:4713 Top.ImpCEvalFun <> st var
R4732:4735 Top.Imp <> :com_scope:x_';;'_x not
R4759:4769 Top.ImpCEvalFun <> ceval_step3 def
R4771:4772 Top.ImpCEvalFun <> st var
R4798:4801 Coq.Init.Datatypes <> Some constr
R4810:4820 Top.ImpCEvalFun <> ceval_step3 def
R4844:4847 Coq.Init.Datatypes <> None constr
R4852:4855 Coq.Init.Datatypes <> None constr
R4879:4882 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4884:4889 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4892:4897 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4900:4902 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4921:4925 Top.Imp <> beval def
R4927:4928 Top.ImpCEvalFun <> st var
R4988:4998 Top.ImpCEvalFun <> ceval_step3 def
R5000:5001 Top.ImpCEvalFun <> st var
R4950:4960 Top.ImpCEvalFun <> ceval_step3 def
R4962:4963 Top.ImpCEvalFun <> st var
R5017:5022 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R5025:5028 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R5031:5034 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R5053:5057 Top.Imp <> beval def
R5059:5060 Top.ImpCEvalFun <> st var
R5229:5232 Coq.Init.Datatypes <> Some constr
R5234:5235 Top.ImpCEvalFun <> st var
R5088:5098 Top.ImpCEvalFun <> ceval_step3 def
R5100:5101 Top.ImpCEvalFun <> st var
R5132:5135 Coq.Init.Datatypes <> Some constr
R5144:5154 Top.ImpCEvalFun <> ceval_step3 def
R5160:5160 Top.ImpCEvalFun <> c var
R5182:5185 Coq.Init.Datatypes <> None constr
R5190:5193 Coq.Init.Datatypes <> None constr
R5506:5509 Coq.Init.Datatypes <> Some constr
R5530:5533 Coq.Init.Datatypes <> None constr
R5538:5541 Coq.Init.Datatypes <> None constr
not 5446:5446 <> ::'LETOPT'_x_'<=='_x_'IN'_x
def 5604:5613 <> ceval_step
R5621:5625 Top.Imp <> state def
R5633:5635 Top.Imp <> com ind
R5643:5645 Coq.Init.Datatypes <> nat ind
R5670:5675 Coq.Init.Datatypes <> option ind
R5677:5681 Top.Imp <> state def
R5694:5694 Top.ImpCEvalFun <> i var
R5705:5705 Coq.Init.Datatypes <> O constr
R5710:5713 Coq.Init.Datatypes <> None constr
R5719:5719 Coq.Init.Datatypes <> S constr
R5737:5737 Top.ImpCEvalFun <> c var
R5752:5755 Top.Imp <> :com_scope:'SKIP' not
R5770:5773 Coq.Init.Datatypes <> Some constr
R5775:5776 Top.ImpCEvalFun <> st var
R5787:5791 Top.Imp <> :com_scope:x_'::='_x not
R5808:5811 Coq.Init.Datatypes <> Some constr
R5816:5820 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5822:5827 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5839:5840 Top.Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5814:5815 Top.ImpCEvalFun <> st var
R5828:5832 Top.Imp <> aeval def
R5834:5835 Top.ImpCEvalFun <> st var
R5853:5856 Top.Imp <> :com_scope:x_';;'_x not
R5873:5879 Top.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5883:5887 Top.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5907:5920 Top.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5888:5897 Top.ImpCEvalFun <> ceval_step def
R5899:5900 Top.ImpCEvalFun <> st var
R5921:5930 Top.ImpCEvalFun <> ceval_step def
R5950:5953 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5955:5960 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5963:5968 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5971:5973 Top.Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5992:5996 Top.Imp <> beval def
R5998:5999 Top.ImpCEvalFun <> st var
R6058:6067 Top.ImpCEvalFun <> ceval_step def
R6069:6070 Top.ImpCEvalFun <> st var
R6021:6030 Top.ImpCEvalFun <> ceval_step def
R6032:6033 Top.ImpCEvalFun <> st var
R6086:6091 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R6094:6097 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R6100:6103 Top.Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R6122:6126 Top.Imp <> beval def
R6128:6129 Top.ImpCEvalFun <> st var
R6238:6241 Coq.Init.Datatypes <> Some constr
R6243:6244 Top.ImpCEvalFun <> st var
R6150:6156 Top.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6160:6164 Top.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6184:6202 Top.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6165:6174 Top.ImpCEvalFun <> ceval_step def
R6176:6177 Top.ImpCEvalFun <> st var
R6203:6212 Top.ImpCEvalFun <> ceval_step def
R6218:6218 Top.ImpCEvalFun <> c var
def 6273:6282 <> test_ceval
R6288:6292 Top.Imp <> state def
R6298:6300 Top.Imp <> com ind
R6314:6323 Top.ImpCEvalFun <> ceval_step def
R6328:6328 Top.ImpCEvalFun <> c var
R6325:6326 Top.ImpCEvalFun <> st var
R6343:6346 Coq.Init.Datatypes <> None constr
R6354:6357 Coq.Init.Datatypes <> None constr
R6363:6366 Coq.Init.Datatypes <> Some constr
R6374:6377 Coq.Init.Datatypes <> Some constr
R6379:6379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6384:6385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6390:6391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6396:6396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6380:6381 Top.ImpCEvalFun <> st var
R6383:6383 Top.Imp <> X def
R6386:6387 Top.ImpCEvalFun <> st var
R6389:6389 Top.Imp <> Y def
R6392:6393 Top.ImpCEvalFun <> st var
R6395:6395 Top.Imp <> Z def
def 6838:6845 <> pup_to_n
R6849:6851 Top.Imp <> com ind
prf 7613:7629 <> ceval_step__ceval
R7655:7655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7694:7704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7706:7708 Top.Imp <> ::x_'/'_x_'\\'_x not
R7711:7714 Top.Imp <> ::x_'/'_x_'\\'_x not
R7705:7705 Top.ImpCEvalFun <> c var
R7709:7710 Top.ImpCEvalFun <> st var
R7715:7717 Top.ImpCEvalFun <> st' var
R7656:7662 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7664:7665 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7683:7685 Coq.Init.Logic <> :type_scope:x_'='_x not
R7666:7675 Top.ImpCEvalFun <> ceval_step def
R7682:7682 Top.ImpCEvalFun <> i var
R7680:7680 Top.ImpCEvalFun <> c var
R7677:7678 Top.ImpCEvalFun <> st var
R7686:7689 Coq.Init.Datatypes <> Some constr
R7691:7693 Top.ImpCEvalFun <> st' var
R8096:8101 Top.Imp <> E_Skip constr
R8096:8101 Top.Imp <> E_Skip constr
R8128:8132 Top.Imp <> E_Ass constr
R8128:8132 Top.Imp <> E_Ass constr
R8184:8193 Top.ImpCEvalFun <> ceval_step def
R8184:8193 Top.ImpCEvalFun <> ceval_step def
R8285:8289 Top.Imp <> E_Seq constr
R8285:8289 Top.Imp <> E_Seq constr
R8504:8508 Top.Imp <> beval def
R8504:8508 Top.Imp <> beval def
R8567:8574 Top.Imp <> E_IfTrue constr
R8567:8574 Top.Imp <> E_IfTrue constr
R8680:8688 Top.Imp <> E_IfFalse constr
R8680:8688 Top.Imp <> E_IfFalse constr
R8783:8787 Top.Imp <> beval def
R8783:8787 Top.Imp <> beval def
R8850:8859 Top.ImpCEvalFun <> ceval_step def
R8850:8859 Top.ImpCEvalFun <> ceval_step def
R8927:8937 Top.Imp <> E_WhileTrue constr
R8927:8937 Top.Imp <> E_WhileTrue constr
R9195:9206 Top.Imp <> E_WhileFalse constr
R9195:9206 Top.Imp <> E_WhileFalse constr
prf 9732:9746 <> ceval_step_more
R9782:9787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9817:9822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9841:9843 Coq.Init.Logic <> :type_scope:x_'='_x not
R9823:9832 Top.ImpCEvalFun <> ceval_step def
R9839:9840 Top.ImpCEvalFun <> i2 var
R9837:9837 Top.ImpCEvalFun <> c var
R9834:9835 Top.ImpCEvalFun <> st var
R9844:9847 Coq.Init.Datatypes <> Some constr
R9849:9851 Top.ImpCEvalFun <> st' var
R9806:9808 Coq.Init.Logic <> :type_scope:x_'='_x not
R9788:9797 Top.ImpCEvalFun <> ceval_step def
R9804:9805 Top.ImpCEvalFun <> i1 var
R9802:9802 Top.ImpCEvalFun <> c var
R9799:9800 Top.ImpCEvalFun <> st var
R9809:9812 Coq.Init.Datatypes <> Some constr
R9814:9816 Top.ImpCEvalFun <> st' var
R9776:9779 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R9774:9775 Top.ImpCEvalFun <> i1 var
R9780:9781 Top.ImpCEvalFun <> i2 var
R10056:10059 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10056:10059 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10305:10314 Top.ImpCEvalFun <> ceval_step def
R10305:10314 Top.ImpCEvalFun <> ceval_step def
R10642:10646 Top.Imp <> beval def
R10642:10646 Top.Imp <> beval def
R10769:10773 Top.Imp <> beval def
R10769:10773 Top.Imp <> beval def
R10814:10823 Top.ImpCEvalFun <> ceval_step def
R10814:10823 Top.ImpCEvalFun <> ceval_step def
prf 11325:11341 <> ceval__ceval_step
R11380:11389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11390:11396 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11398:11399 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11417:11419 Coq.Init.Logic <> :type_scope:x_'='_x not
R11400:11409 Top.ImpCEvalFun <> ceval_step def
R11416:11416 Top.ImpCEvalFun <> i var
R11414:11414 Top.ImpCEvalFun <> c var
R11411:11412 Top.ImpCEvalFun <> st var
R11420:11423 Coq.Init.Datatypes <> Some constr
R11425:11427 Top.ImpCEvalFun <> st' var
R11368:11370 Top.Imp <> ::x_'/'_x_'\\'_x not
R11373:11376 Top.Imp <> ::x_'/'_x_'\\'_x not
R11367:11367 Top.ImpCEvalFun <> c var
R11371:11372 Top.ImpCEvalFun <> st var
R11377:11379 Top.ImpCEvalFun <> st' var
prf 11527:11555 <> ceval_and_ceval_step_coincide
R11594:11600 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11582:11584 Top.Imp <> ::x_'/'_x_'\\'_x not
R11587:11590 Top.Imp <> ::x_'/'_x_'\\'_x not
R11581:11581 Top.ImpCEvalFun <> c var
R11585:11586 Top.ImpCEvalFun <> st var
R11591:11593 Top.ImpCEvalFun <> st' var
R11601:11607 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11609:11610 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11628:11630 Coq.Init.Logic <> :type_scope:x_'='_x not
R11611:11620 Top.ImpCEvalFun <> ceval_step def
R11627:11627 Top.ImpCEvalFun <> i var
R11625:11625 Top.ImpCEvalFun <> c var
R11622:11623 Top.ImpCEvalFun <> st var
R11631:11634 Coq.Init.Datatypes <> Some constr
R11636:11638 Top.ImpCEvalFun <> st' var
R11682:11698 Top.ImpCEvalFun <> ceval__ceval_step prfax
R11682:11698 Top.ImpCEvalFun <> ceval__ceval_step prfax
R11707:11723 Top.ImpCEvalFun <> ceval_step__ceval thm
R11707:11723 Top.ImpCEvalFun <> ceval_step__ceval thm
prf 12038:12057 <> ceval_deterministic'
R12100:12109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12123:12131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12135:12137 Coq.Init.Logic <> :type_scope:x_'='_x not
R12132:12134 Top.ImpCEvalFun <> st1 var
R12138:12140 Top.ImpCEvalFun <> st2 var
R12111:12113 Top.Imp <> ::x_'/'_x_'\\'_x not
R12116:12119 Top.Imp <> ::x_'/'_x_'\\'_x not
R12110:12110 Top.ImpCEvalFun <> c var
R12114:12115 Top.ImpCEvalFun <> st var
R12120:12122 Top.ImpCEvalFun <> st2 var
R12088:12090 Top.Imp <> ::x_'/'_x_'\\'_x not
R12093:12096 Top.Imp <> ::x_'/'_x_'\\'_x not
R12087:12087 Top.ImpCEvalFun <> c var
R12091:12092 Top.ImpCEvalFun <> st var
R12097:12099 Top.ImpCEvalFun <> st1 var
R12189:12205 Top.ImpCEvalFun <> ceval__ceval_step prfax
R12189:12205 Top.ImpCEvalFun <> ceval__ceval_step prfax
R12223:12239 Top.ImpCEvalFun <> ceval__ceval_step prfax
R12223:12239 Top.ImpCEvalFun <> ceval__ceval_step prfax
R12343:12345 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12313:12327 Top.ImpCEvalFun <> ceval_step_more thm
R12343:12345 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12313:12327 Top.ImpCEvalFun <> ceval_step_more thm
R12395:12397 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12365:12379 Top.ImpCEvalFun <> ceval_step_more thm
R12395:12397 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12365:12379 Top.ImpCEvalFun <> ceval_step_more thm
